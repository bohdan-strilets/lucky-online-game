{"version":3,"file":"static/js/705.10d27dc3.chunk.js","mappings":"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","sources":["components/Modal/DialogWindow/DialogWindow.styled.ts","components/Modal/DialogWindow/DialogWindow.tsx","hooks/useModal.ts","components/Modal/Modal.styled.ts","components/Modal/Modal.tsx","helpers/screenWidth.ts","hooks/useStore.ts","components/Modal/ProductStore/ProductStore.styled.ts","components/Modal/ProductStore/ProductStore.tsx","components/Store/Store.styled.ts","components/Store/Store.tsx","pages/StorePage.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nexport const Item = styled.li``;\n","import Button from 'components/InterfaceElements/Button';\nimport { IDialogWindowState } from 'types/IDialogWindow';\n\nimport { Text, List, Item } from './DialogWindow.styled';\n\nconst DialogWindow: React.FC<IDialogWindowState> = ({\n  onFailure,\n  onSuccess,\n  text,\n  successBtnText,\n  failureBtnText,\n}) => {\n  return (\n    <div>\n      <Text>{text && text}</Text>\n\n      <List>\n        <Item>\n          <Button\n            type=\"button\"\n            background=\"blue\"\n            height=\"50px\"\n            width=\"300px\"\n            borderRadius=\"50px\"\n            shadow\n            onClick={onFailure}\n          >\n            {failureBtnText}\n          </Button>\n        </Item>\n        <Item>\n          <Button\n            type=\"button\"\n            background=\"green\"\n            height=\"50px\"\n            width=\"300px\"\n            borderRadius=\"50px\"\n            shadow\n            onClick={onSuccess}\n          >\n            {successBtnText}\n          </Button>\n        </Item>\n      </List>\n    </div>\n  );\n};\n\nexport default DialogWindow;\n","import { useEffect } from 'react';\n\nconst useModal = (onClose: () => void) => {\n  useEffect(() => {\n    const onPressEscape = (e: { code: string }) => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', onPressEscape);\n\n    return () => window.removeEventListener('keydown', onPressEscape);\n  }, [onClose]);\n\n  const onBackdropClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return { onBackdropClick };\n};\n\nexport default useModal;\n","import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 280px;\n  height: auto;\n  padding: 10px;\n\n  background-color: var(--white-color);\n  color: var(--brown-color);\n  border-radius: 30px;\n  border: 5px solid var(--brown-transparent);\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    width: 580px;\n    padding: 40px;\n  }\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    width: 780px;\n    padding: 60px;\n  }\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 70px;\n  padding-bottom: 30px;\n\n  border-bottom: 1px solid var(--green-color);\n`;\n\nexport const Title = styled.h1`\n  font-size: 28px;\n  font-weight: 900;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    font-size: 38px;\n  }\n`;\n\nexport const CloseButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: var(--brown-color);\n  background-color: transparent;\n  border: none;\n\n  cursor: pointer;\n  transition: color var(--hover-effect);\n\n  :hover,\n  :focus {\n    color: var(--green-color);\n  }\n`;\n","import useModal from 'hooks/useModal';\n\nimport { createPortal } from 'react-dom';\nimport { IModalState } from 'types/IModal';\n\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\n\nimport {\n  Backdrop,\n  Wrapper,\n  TitleWrapper,\n  Title,\n  CloseButton,\n} from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLDivElement;\n\nconst Modal: React.FC<IModalState> = ({ children, title, onClose }) => {\n  const { onBackdropClick } = useModal(onClose);\n\n  return createPortal(\n    <Backdrop onClick={onBackdropClick}>\n      <Wrapper>\n        <TitleWrapper>\n          <Title>{title}</Title>\n          <CloseButton type=\"button\" onClick={onClose}>\n            <IconSwitcher name=\"cross\" size=\"18px\" fill=\"currentColor\" />\n          </CloseButton>\n        </TitleWrapper>\n        {children}\n      </Wrapper>\n    </Backdrop>,\n    modalRoot,\n  );\n};\n\nexport default Modal;\n","const screenWidth = {\n  mobile: '320px',\n  tablet: '768px',\n  desktop: '1440px',\n};\n\nexport default screenWidth;\n","import { useState, useEffect } from 'react';\nimport { useGetAllItemsQuery } from 'redux/store/storeApi';\nimport { useAppDispatch } from './useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport { useAppSelector } from './useAppSelector';\nimport { getBank } from 'redux/user/userSelectors';\nimport useSound from 'use-sound';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { IItem } from 'types/IStore';\nimport { toast } from 'react-toastify';\n\nconst useStore = () => {\n  const [items, setItems] = useState<null | undefined | IItem[]>(null);\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [allImages, setAllImages] = useState(0);\n  const [showMoreDetails, setShowMoreDetails] = useState(false);\n  const [currentTitle, setCurrentTitle] = useState<null | string>(null);\n  const [currentId, setCurrentId] = useState<null | string>(null);\n  const [currentAmount, setCurrentAmount] = useState<null | number>(null);\n  const [showModalBuyItem, setShowModalBuyItem] = useState(false);\n\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n  const bank = useAppSelector(getBank);\n  const dispatch = useAppDispatch();\n  const { data, isFetching } = useGetAllItemsQuery({ page, limit: 9 });\n\n  useEffect(() => {\n    if (data !== undefined) {\n      if (page === 1) {\n        setItems(data?.items);\n        setTotal(data?.total);\n        setAllImages(data.items.length);\n      }\n\n      if (page !== 1) {\n        setItems(data.items);\n        setAllImages(prevState => prevState + data.items.length);\n      }\n    }\n  }, [data, page]);\n\n  const showMore = () => {\n    setPage(prevState => prevState + 1);\n    play({ id: 'counter_click' });\n  };\n\n  const comeBack = () => {\n    setPage(prevState => prevState - 1);\n    play({ id: 'counter_click' });\n  };\n\n  const openModalMoreInfo = (e: React.MouseEvent<HTMLDivElement>) => {\n    const id = e.currentTarget.dataset.id;\n    const title = e.currentTarget.children[0].textContent;\n\n    play({ id: 'counter_click' });\n    setCurrentTitle(title);\n    setShowMoreDetails(true);\n\n    if (id) {\n      setCurrentId(id);\n    }\n  };\n\n  const closeModalMoreInfo = () => {\n    setShowMoreDetails(false);\n    play({ id: 'counter_click' });\n  };\n\n  const openModalDialogWindow = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    const price = e.currentTarget.dataset.price;\n    const id = e.currentTarget.dataset.id;\n\n    if (price !== null && price !== undefined && id !== undefined) {\n      setCurrentAmount(Number(price));\n      setCurrentId(id);\n    }\n\n    play({ id: 'counter_click' });\n    setShowModalBuyItem(true);\n  };\n\n  const closeModalDialogWindow = () => {\n    setShowModalBuyItem(false);\n    play({ id: 'counter_click' });\n  };\n\n  const buy = (id: string, price: number) => {\n    if (bank !== null && bank !== undefined && price > bank) {\n      toast.error('Sorry, there is not enough money in your account.');\n      setShowModalBuyItem(false);\n      return;\n    }\n\n    if (bank !== null && bank !== undefined && price <= bank) {\n      dispatch(operations.buyItem({ id, price: -price }));\n      toast.success('The item has been successfully purchased. Thank you.');\n      setShowModalBuyItem(false);\n      play({ id: 'sound_victory' });\n      return;\n    }\n  };\n\n  return {\n    showMore,\n    comeBack,\n    openModalMoreInfo,\n    items,\n    page,\n    total,\n    allImages,\n    showMoreDetails,\n    currentTitle,\n    currentId,\n    isFetching,\n    closeModalMoreInfo,\n    buy,\n    showModalBuyItem,\n    openModalDialogWindow,\n    closeModalDialogWindow,\n    currentAmount,\n  };\n};\n\nexport default useStore;\n","import styled from '@emotion/styled';\n\nexport const PhotoWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const Photo = styled.img`\n  max-height: 500px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 30px;\n`;\n\nexport const Price = styled.p`\n  font-weight: 900;\n  font-size: 36px;\n  text-align: center;\n\n  color: var(--green-color);\n\n  margin-bottom: 15px;\n`;\n","import { useGetOneItemQuery } from 'redux/store/storeApi';\nimport bankFormatting from 'helpers/bankFormatting';\nimport useStore from 'hooks/useStore';\n\nimport Button from 'components/InterfaceElements/Button';\nimport Loader from 'components/InterfaceElements/Loader';\nimport Modal from '../Modal';\nimport DialogWindow from '../DialogWindow';\n\nimport { IProductStore } from 'types/IProductStore';\nimport { PhotoWrapper, Photo, Text, Price } from './ProductStore.styled';\n\nconst ProductStore: React.FC<IProductStore> = ({ id }) => {\n  const { data, isFetching } = useGetOneItemQuery(id);\n  const {\n    buy,\n    closeModalDialogWindow,\n    openModalDialogWindow,\n    showModalBuyItem,\n    currentId,\n    currentAmount,\n  } = useStore();\n\n  return (\n    <>\n      {isFetching && <Loader />}\n\n      <div>\n        <PhotoWrapper>\n          <Photo src={data?.item.imageURL} alt={data?.item.title} />\n        </PhotoWrapper>\n        <Text>{data?.item.description}</Text>\n        <Price>{bankFormatting(Number(data?.item.price).toFixed(2))} $</Price>\n        <Button\n          type=\"button\"\n          background=\"green\"\n          height=\"60px\"\n          width=\"100%\"\n          borderRadius=\"50px\"\n          shadow\n          onClick={openModalDialogWindow}\n        >\n          Buy\n        </Button>\n      </div>\n\n      {showModalBuyItem && (\n        <Modal\n          onClose={closeModalDialogWindow}\n          title=\"Do you want to buy this item?\"\n        >\n          <DialogWindow\n            onFailure={closeModalDialogWindow}\n            onSuccess={() => buy(currentId as string, currentAmount as number)}\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Buy\"\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ProductStore;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: -15px;\n  padding: 30px;\n`;\n\nexport const Item = styled.li`\n  width: calc((100% - 6 * 15px) / 3);\n  margin: 15px;\n  cursor: pointer;\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: auto;\n`;\n\nexport const Title = styled.h2`\n  width: 100%;\n  margin-bottom: 15px;\n\n  font-weight: 900;\n  font-size: 24px;\n  text-align: center;\n`;\n\nexport const Photo = styled.img`\n  margin: 0 auto 40px auto;\n  max-height: 300px;\n`;\n\nexport const Description = styled.p`\n  margin-bottom: 15px;\n  overflow-y: auto;\n  height: 50px;\n`;\n\nexport const Price = styled.p`\n  width: 100%;\n  margin-bottom: 30px;\n\n  font-weight: 900;\n  text-align: center;\n\n  color: var(--green-color);\n`;\n\nexport const Navigation = styled.div`\n  display: flex;\n`;\n","import bankFormatting from 'helpers/bankFormatting';\nimport useStore from 'hooks/useStore';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Button from 'components/InterfaceElements/Button';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport Modal from 'components/Modal';\nimport ProductStore from 'components/Modal/ProductStore';\nimport Loader from 'components/InterfaceElements/Loader';\nimport DialogWindow from 'components/Modal/DialogWindow';\n\nimport {\n  List,\n  Item,\n  Wrapper,\n  Title,\n  Photo,\n  Description,\n  Price,\n  Navigation,\n} from './Store.styled';\n\nconst Store: React.FC<{}> = () => {\n  const {\n    allImages,\n    comeBack,\n    currentId,\n    currentTitle,\n    isFetching,\n    items,\n    openModalMoreInfo,\n    page,\n    showMore,\n    showMoreDetails,\n    total,\n    closeModalMoreInfo,\n    buy,\n    showModalBuyItem,\n    openModalDialogWindow,\n    closeModalDialogWindow,\n    currentAmount,\n  } = useStore();\n\n  return (\n    <>\n      {isFetching && <Loader />}\n\n      <List>\n        {items &&\n          items.map(({ _id, imageURL, title, description, price }) => {\n            return (\n              <Item key={_id} data-id={_id}>\n                <Container\n                  type=\"color\"\n                  width=\"100%\"\n                  padding=\"20px\"\n                  height=\"600px\"\n                >\n                  <Wrapper data-id={_id} onClick={openModalMoreInfo}>\n                    <Title>{title}</Title>\n                    <Photo src={imageURL} alt={title} />\n                    <Description>{description}</Description>\n                    <Price>{bankFormatting(Number(price).toFixed(2))} $</Price>\n                  </Wrapper>\n\n                  <Button\n                    type=\"button\"\n                    background=\"green\"\n                    height=\"60px\"\n                    width=\"100%\"\n                    borderRadius=\"50px\"\n                    shadow\n                    onClick={openModalDialogWindow}\n                    data-price={price}\n                    data-id={_id}\n                  >\n                    Buy\n                  </Button>\n                </Container>\n              </Item>\n            );\n          })}\n      </List>\n\n      <Container\n        type=\"transparent\"\n        width=\"100%\"\n        alignItems=\"center\"\n        padding=\"15px\"\n        margin=\"15px\"\n      >\n        <Navigation>\n          {page > 1 && (\n            <Button\n              type=\"button\"\n              background=\"blue\"\n              borderRadius=\"10px\"\n              height=\"40px\"\n              width=\"150px\"\n              margin=\"0 50px 0 0\"\n              onClick={comeBack}\n            >\n              <IconSwitcher\n                name=\"arrowLeft\"\n                size=\"22px\"\n                fill=\"var(--white-color)\"\n              />\n            </Button>\n          )}\n          {allImages !== total && (\n            <Button\n              type=\"button\"\n              background=\"blue\"\n              borderRadius=\"10px\"\n              height=\"40px\"\n              width=\"150px\"\n              onClick={showMore}\n            >\n              <IconSwitcher\n                name=\"arrowRight\"\n                size=\"22px\"\n                fill=\"var(--white-color)\"\n              />\n            </Button>\n          )}\n        </Navigation>\n      </Container>\n\n      {showMoreDetails && (\n        <Modal\n          onClose={closeModalMoreInfo}\n          title={currentTitle ? currentTitle : ''}\n        >\n          <ProductStore id={currentId as string} />\n        </Modal>\n      )}\n\n      {showModalBuyItem && (\n        <Modal\n          onClose={closeModalDialogWindow}\n          title=\"Do you want to buy this item?\"\n        >\n          <DialogWindow\n            onFailure={closeModalDialogWindow}\n            onSuccess={() => buy(currentId as string, currentAmount as number)}\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Buy\"\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Store;\n","import Store from 'components/Store';\n\nconst StorePage: React.FC<{}> = () => {\n  return <Store />;\n};\n\nexport default StorePage;\n"],"names":["Text","styled","List","Item","onFailure","onSuccess","text","successBtnText","failureBtnText","Button","type","background","height","width","borderRadius","shadow","onClick","onClose","useEffect","onPressEscape","e","code","window","addEventListener","removeEventListener","onBackdropClick","target","currentTarget","Backdrop","Wrapper","screenWidth","TitleWrapper","Title","CloseButton","modalRoot","document","querySelector","children","title","useModal","createPortal","IconSwitcher","name","size","fill","mobile","tablet","desktop","useState","items","setItems","page","setPage","total","setTotal","allImages","setAllImages","showMoreDetails","setShowMoreDetails","currentTitle","setCurrentTitle","currentId","setCurrentId","currentAmount","setCurrentAmount","showModalBuyItem","setShowModalBuyItem","soundOff","useAppSelector","getSoundOff","useSound","sounds","sprite","soundEnabled","play","bank","getBank","dispatch","useAppDispatch","useGetAllItemsQuery","limit","data","isFetching","undefined","length","prevState","showMore","id","comeBack","openModalMoreInfo","dataset","textContent","closeModalMoreInfo","buy","price","toast","operations","openModalDialogWindow","Number","closeModalDialogWindow","PhotoWrapper","Photo","Price","useGetOneItemQuery","useStore","Loader","src","item","imageURL","alt","description","bankFormatting","toFixed","DialogWindow","Description","Navigation","map","_id","Container","padding","alignItems","margin","Modal"],"sourceRoot":""}