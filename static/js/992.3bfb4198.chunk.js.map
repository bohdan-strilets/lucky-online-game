{"version":3,"file":"static/js/992.3bfb4198.chunk.js","mappings":"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","sources":["hooks/useStore.ts","components/Modal/ProductStore/ProductStore.styled.ts","components/Modal/ProductStore/ProductStore.tsx","components/Store/Store.styled.ts","components/Store/Responsiv/Mobile.tsx","components/Store/Responsiv/Tablet.tsx","components/Store/Responsiv/Desktop.tsx","components/Store/Store.tsx","pages/StorePage.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useGetAllItemsQuery } from 'redux/store/storeApi';\nimport { useAppDispatch } from './useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport { useAppSelector } from './useAppSelector';\nimport { getBank } from 'redux/user/userSelectors';\nimport useSound from 'use-sound';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { IItem } from 'types/IStore';\nimport { toast } from 'react-toastify';\n\nconst useStore = () => {\n  const [items, setItems] = useState<null | undefined | IItem[]>(null);\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [allImages, setAllImages] = useState(0);\n  const [showMoreDetails, setShowMoreDetails] = useState(false);\n  const [currentTitle, setCurrentTitle] = useState<null | string>(null);\n  const [currentId, setCurrentId] = useState<null | string>(null);\n  const [currentAmount, setCurrentAmount] = useState<null | number>(null);\n  const [showModalBuyItem, setShowModalBuyItem] = useState(false);\n\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n  const bank = useAppSelector(getBank);\n  const dispatch = useAppDispatch();\n  const { data, isFetching } = useGetAllItemsQuery({ page, limit: 9 });\n\n  useEffect(() => {\n    if (data !== undefined) {\n      if (page === 1) {\n        setItems(data?.items);\n        setTotal(data?.total);\n        setAllImages(data.items.length);\n      }\n\n      if (page !== 1) {\n        setItems(data.items);\n        setAllImages(prevState => prevState + data.items.length);\n      }\n    }\n  }, [data, page]);\n\n  const showMore = () => {\n    setPage(prevState => prevState + 1);\n    play({ id: 'counter_click' });\n  };\n\n  const comeBack = () => {\n    setPage(prevState => prevState - 1);\n    play({ id: 'counter_click' });\n  };\n\n  const openModalMoreInfo = (e: React.MouseEvent<HTMLDivElement>) => {\n    const id = e.currentTarget.dataset.id;\n    const title = e.currentTarget.children[0].textContent;\n\n    play({ id: 'counter_click' });\n    setCurrentTitle(title);\n    setShowMoreDetails(true);\n\n    if (id) {\n      setCurrentId(id);\n    }\n  };\n\n  const closeModalMoreInfo = () => {\n    setShowMoreDetails(false);\n    play({ id: 'counter_click' });\n  };\n\n  const openModalDialogWindow = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    const price = e.currentTarget.dataset.price;\n    const id = e.currentTarget.dataset.id;\n\n    if (price !== null && price !== undefined && id !== undefined) {\n      setCurrentAmount(Number(price));\n      setCurrentId(id);\n    }\n\n    play({ id: 'counter_click' });\n    setShowModalBuyItem(true);\n  };\n\n  const closeModalDialogWindow = () => {\n    setShowModalBuyItem(false);\n    play({ id: 'counter_click' });\n  };\n\n  const buy = (id: string, price: number) => {\n    if (bank !== null && bank !== undefined && price > bank) {\n      toast.error('Sorry, there is not enough money in your account.');\n      setShowModalBuyItem(false);\n      return;\n    }\n\n    if (bank !== null && bank !== undefined && price <= bank) {\n      dispatch(operations.buyItem({ id, price: -price }));\n      toast.success('The item has been successfully purchased. Thank you.');\n      setShowModalBuyItem(false);\n      play({ id: 'sound_victory' });\n      return;\n    }\n  };\n\n  return {\n    showMore,\n    comeBack,\n    openModalMoreInfo,\n    items,\n    page,\n    total,\n    allImages,\n    showMoreDetails,\n    currentTitle,\n    currentId,\n    isFetching,\n    closeModalMoreInfo,\n    buy,\n    showModalBuyItem,\n    openModalDialogWindow,\n    closeModalDialogWindow,\n    currentAmount,\n  };\n};\n\nexport default useStore;\n","import styled from '@emotion/styled';\n\nexport const PhotoWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const Photo = styled.img`\n  max-height: 500px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 30px;\n`;\n\nexport const Price = styled.p`\n  font-weight: 900;\n  font-size: 36px;\n  text-align: center;\n\n  color: var(--green-color);\n\n  margin-bottom: 15px;\n`;\n","import { useGetOneItemQuery } from 'redux/store/storeApi';\nimport bankFormatting from 'helpers/bankFormatting';\nimport useStore from 'hooks/useStore';\n\nimport Button from 'components/InterfaceElements/Button';\nimport Loader from 'components/InterfaceElements/Loader';\nimport Modal from '../Modal';\nimport DialogWindow from '../DialogWindow';\n\nimport { IProductStore } from 'types/IProductStore';\nimport { PhotoWrapper, Photo, Text, Price } from './ProductStore.styled';\n\nconst ProductStore: React.FC<IProductStore> = ({ id }) => {\n  const { data, isFetching } = useGetOneItemQuery(id);\n  const {\n    buy,\n    closeModalDialogWindow,\n    openModalDialogWindow,\n    showModalBuyItem,\n    currentId,\n    currentAmount,\n  } = useStore();\n\n  return (\n    <>\n      {isFetching && <Loader />}\n\n      <div>\n        <PhotoWrapper>\n          <Photo src={data?.item.imageURL} alt={data?.item.title} />\n        </PhotoWrapper>\n        <Text>{data?.item.description}</Text>\n        <Price>{bankFormatting(Number(data?.item.price).toFixed(2))} $</Price>\n        <Button\n          type=\"button\"\n          background=\"green\"\n          height=\"60px\"\n          width=\"100%\"\n          borderRadius=\"50px\"\n          shadow\n          onClick={openModalDialogWindow}\n        >\n          Buy\n        </Button>\n      </div>\n\n      {showModalBuyItem && (\n        <Modal\n          onClose={closeModalDialogWindow}\n          title=\"Do you want to buy this item?\"\n        >\n          <DialogWindow\n            onFailure={closeModalDialogWindow}\n            onSuccess={() => buy(currentId as string, currentAmount as number)}\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Buy\"\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ProductStore;\n","import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nexport const List = styled.ul`\n  padding: 10px;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    display: flex;\n    flex-wrap: wrap;\n\n    margin: -15px;\n    padding: 30px;\n  }\n`;\n\nexport const Item = styled.li`\n  cursor: pointer;\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 15px;\n\n    :last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    width: calc((100% - 4 * 15px) / 2);\n    margin: 15px;\n  }\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    width: calc((100% - 6 * 15px) / 3);\n    margin: 15px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: auto;\n`;\n\nexport const Title = styled.h2`\n  width: 100%;\n  margin-bottom: 15px;\n\n  font-weight: 900;\n  font-size: 24px;\n  text-align: center;\n`;\n\nexport const Photo = styled.img`\n  margin: 0 auto 40px auto;\n  max-height: 300px;\n`;\n\nexport const Description = styled.p`\n  margin-bottom: 15px;\n  overflow-y: auto;\n  height: 50px;\n`;\n\nexport const Price = styled.p`\n  width: 100%;\n  margin-bottom: 30px;\n\n  font-weight: 900;\n  text-align: center;\n\n  color: var(--green-color);\n`;\n\nexport const Navigation = styled.div`\n  display: flex;\n  justify-content: center;\n\n  width: 100%;\n`;\n","import bankFormatting from 'helpers/bankFormatting';\nimport useStore from 'hooks/useStore';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Button from 'components/InterfaceElements/Button';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport Modal from 'components/Modal';\nimport ProductStore from 'components/Modal/ProductStore';\nimport Loader from 'components/InterfaceElements/Loader';\nimport DialogWindow from 'components/Modal/DialogWindow';\n\nimport {\n  List,\n  Item,\n  Wrapper,\n  Title,\n  Photo,\n  Description,\n  Price,\n  Navigation,\n} from '../Store.styled';\n\nconst Mobile: React.FC<{}> = () => {\n  const {\n    allImages,\n    comeBack,\n    currentId,\n    currentTitle,\n    isFetching,\n    items,\n    openModalMoreInfo,\n    page,\n    showMore,\n    showMoreDetails,\n    total,\n    closeModalMoreInfo,\n    buy,\n    showModalBuyItem,\n    openModalDialogWindow,\n    closeModalDialogWindow,\n    currentAmount,\n  } = useStore();\n\n  return (\n    <>\n      {isFetching && <Loader />}\n\n      <List>\n        {items &&\n          items.map(({ _id, imageURL, title, description, price }) => {\n            return (\n              <Item key={_id} data-id={_id}>\n                <Container\n                  type=\"color\"\n                  width=\"100%\"\n                  padding=\"20px\"\n                  height=\"600px\"\n                >\n                  <Wrapper data-id={_id} onClick={openModalMoreInfo}>\n                    <Title>{title}</Title>\n                    <Photo src={imageURL} alt={title} />\n                    <Description>{description}</Description>\n                    <Price>{bankFormatting(Number(price).toFixed(2))} $</Price>\n                  </Wrapper>\n\n                  <Button\n                    type=\"button\"\n                    background=\"green\"\n                    height=\"60px\"\n                    width=\"100%\"\n                    borderRadius=\"50px\"\n                    shadow\n                    onClick={openModalDialogWindow}\n                    data-price={price}\n                    data-id={_id}\n                  >\n                    Buy\n                  </Button>\n                </Container>\n              </Item>\n            );\n          })}\n      </List>\n\n      <Container\n        type=\"transparent\"\n        width=\"300px\"\n        padding=\"10px\"\n        margin=\"0 0 80px 0\"\n      >\n        <Navigation>\n          {page > 1 && (\n            <Button\n              type=\"button\"\n              background=\"blue\"\n              borderRadius=\"10px\"\n              height=\"40px\"\n              width=\"100px\"\n              margin=\"0 50px 0 0\"\n              onClick={comeBack}\n            >\n              <IconSwitcher\n                name=\"arrowLeft\"\n                size=\"22px\"\n                fill=\"var(--white-color)\"\n              />\n            </Button>\n          )}\n          {allImages !== total && (\n            <Button\n              type=\"button\"\n              background=\"blue\"\n              borderRadius=\"10px\"\n              height=\"40px\"\n              width=\"100px\"\n              onClick={showMore}\n            >\n              <IconSwitcher\n                name=\"arrowRight\"\n                size=\"22px\"\n                fill=\"var(--white-color)\"\n              />\n            </Button>\n          )}\n        </Navigation>\n      </Container>\n\n      {showMoreDetails && (\n        <Modal\n          onClose={closeModalMoreInfo}\n          title={currentTitle ? currentTitle : ''}\n        >\n          <ProductStore id={currentId as string} />\n        </Modal>\n      )}\n\n      {showModalBuyItem && (\n        <Modal\n          onClose={closeModalDialogWindow}\n          title=\"Do you want to buy this item?\"\n        >\n          <DialogWindow\n            onFailure={closeModalDialogWindow}\n            onSuccess={() => buy(currentId as string, currentAmount as number)}\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Buy\"\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default Mobile;\n","import bankFormatting from 'helpers/bankFormatting';\nimport useStore from 'hooks/useStore';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Button from 'components/InterfaceElements/Button';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport Modal from 'components/Modal';\nimport ProductStore from 'components/Modal/ProductStore';\nimport Loader from 'components/InterfaceElements/Loader';\nimport DialogWindow from 'components/Modal/DialogWindow';\n\nimport {\n  List,\n  Item,\n  Wrapper,\n  Title,\n  Photo,\n  Description,\n  Price,\n  Navigation,\n} from '../Store.styled';\n\nconst Tablet: React.FC<{}> = () => {\n  const {\n    allImages,\n    comeBack,\n    currentId,\n    currentTitle,\n    isFetching,\n    items,\n    openModalMoreInfo,\n    page,\n    showMore,\n    showMoreDetails,\n    total,\n    closeModalMoreInfo,\n    buy,\n    showModalBuyItem,\n    openModalDialogWindow,\n    closeModalDialogWindow,\n    currentAmount,\n  } = useStore();\n\n  return (\n    <>\n      {isFetching && <Loader />}\n\n      <List>\n        {items &&\n          items.map(({ _id, imageURL, title, description, price }) => {\n            return (\n              <Item key={_id} data-id={_id}>\n                <Container\n                  type=\"color\"\n                  width=\"100%\"\n                  padding=\"20px\"\n                  height=\"600px\"\n                >\n                  <Wrapper data-id={_id} onClick={openModalMoreInfo}>\n                    <Title>{title}</Title>\n                    <Photo src={imageURL} alt={title} />\n                    <Description>{description}</Description>\n                    <Price>{bankFormatting(Number(price).toFixed(2))} $</Price>\n                  </Wrapper>\n\n                  <Button\n                    type=\"button\"\n                    background=\"green\"\n                    height=\"60px\"\n                    width=\"100%\"\n                    borderRadius=\"50px\"\n                    shadow\n                    onClick={openModalDialogWindow}\n                    data-price={price}\n                    data-id={_id}\n                  >\n                    Buy\n                  </Button>\n                </Container>\n              </Item>\n            );\n          })}\n      </List>\n\n      <Container\n        type=\"transparent\"\n        width=\"680px\"\n        padding=\"10px\"\n        margin=\"50px 0 80px 0\"\n      >\n        <Navigation>\n          {page > 1 && (\n            <Button\n              type=\"button\"\n              background=\"blue\"\n              borderRadius=\"10px\"\n              height=\"40px\"\n              width=\"150px\"\n              margin=\"0 50px 0 0\"\n              onClick={comeBack}\n            >\n              <IconSwitcher\n                name=\"arrowLeft\"\n                size=\"22px\"\n                fill=\"var(--white-color)\"\n              />\n            </Button>\n          )}\n          {allImages !== total && (\n            <Button\n              type=\"button\"\n              background=\"blue\"\n              borderRadius=\"10px\"\n              height=\"40px\"\n              width=\"150px\"\n              onClick={showMore}\n            >\n              <IconSwitcher\n                name=\"arrowRight\"\n                size=\"22px\"\n                fill=\"var(--white-color)\"\n              />\n            </Button>\n          )}\n        </Navigation>\n      </Container>\n\n      {showMoreDetails && (\n        <Modal\n          onClose={closeModalMoreInfo}\n          title={currentTitle ? currentTitle : ''}\n        >\n          <ProductStore id={currentId as string} />\n        </Modal>\n      )}\n\n      {showModalBuyItem && (\n        <Modal\n          onClose={closeModalDialogWindow}\n          title=\"Do you want to buy this item?\"\n        >\n          <DialogWindow\n            onFailure={closeModalDialogWindow}\n            onSuccess={() => buy(currentId as string, currentAmount as number)}\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Buy\"\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default Tablet;\n","import bankFormatting from 'helpers/bankFormatting';\nimport useStore from 'hooks/useStore';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Button from 'components/InterfaceElements/Button';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport Modal from 'components/Modal';\nimport ProductStore from 'components/Modal/ProductStore';\nimport Loader from 'components/InterfaceElements/Loader';\nimport DialogWindow from 'components/Modal/DialogWindow';\n\nimport {\n  List,\n  Item,\n  Wrapper,\n  Title,\n  Photo,\n  Description,\n  Price,\n  Navigation,\n} from '../Store.styled';\n\nconst Desktop: React.FC<{}> = () => {\n  const {\n    allImages,\n    comeBack,\n    currentId,\n    currentTitle,\n    isFetching,\n    items,\n    openModalMoreInfo,\n    page,\n    showMore,\n    showMoreDetails,\n    total,\n    closeModalMoreInfo,\n    buy,\n    showModalBuyItem,\n    openModalDialogWindow,\n    closeModalDialogWindow,\n    currentAmount,\n  } = useStore();\n\n  return (\n    <>\n      {isFetching && <Loader />}\n\n      <List>\n        {items &&\n          items.map(({ _id, imageURL, title, description, price }) => {\n            return (\n              <Item key={_id} data-id={_id}>\n                <Container\n                  type=\"color\"\n                  width=\"100%\"\n                  padding=\"20px\"\n                  height=\"600px\"\n                >\n                  <Wrapper data-id={_id} onClick={openModalMoreInfo}>\n                    <Title>{title}</Title>\n                    <Photo src={imageURL} alt={title} />\n                    <Description>{description}</Description>\n                    <Price>{bankFormatting(Number(price).toFixed(2))} $</Price>\n                  </Wrapper>\n\n                  <Button\n                    type=\"button\"\n                    background=\"green\"\n                    height=\"60px\"\n                    width=\"100%\"\n                    borderRadius=\"50px\"\n                    shadow\n                    onClick={openModalDialogWindow}\n                    data-price={price}\n                    data-id={_id}\n                  >\n                    Buy\n                  </Button>\n                </Container>\n              </Item>\n            );\n          })}\n      </List>\n\n      <Container\n        type=\"transparent\"\n        width=\"100%\"\n        alignItems=\"center\"\n        padding=\"15px\"\n        margin=\"15px\"\n      >\n        <Navigation>\n          {page > 1 && (\n            <Button\n              type=\"button\"\n              background=\"blue\"\n              borderRadius=\"10px\"\n              height=\"40px\"\n              width=\"150px\"\n              margin=\"0 50px 0 0\"\n              onClick={comeBack}\n            >\n              <IconSwitcher\n                name=\"arrowLeft\"\n                size=\"22px\"\n                fill=\"var(--white-color)\"\n              />\n            </Button>\n          )}\n          {allImages !== total && (\n            <Button\n              type=\"button\"\n              background=\"blue\"\n              borderRadius=\"10px\"\n              height=\"40px\"\n              width=\"150px\"\n              onClick={showMore}\n            >\n              <IconSwitcher\n                name=\"arrowRight\"\n                size=\"22px\"\n                fill=\"var(--white-color)\"\n              />\n            </Button>\n          )}\n        </Navigation>\n      </Container>\n\n      {showMoreDetails && (\n        <Modal\n          onClose={closeModalMoreInfo}\n          title={currentTitle ? currentTitle : ''}\n        >\n          <ProductStore id={currentId as string} />\n        </Modal>\n      )}\n\n      {showModalBuyItem && (\n        <Modal\n          onClose={closeModalDialogWindow}\n          title=\"Do you want to buy this item?\"\n        >\n          <DialogWindow\n            onFailure={closeModalDialogWindow}\n            onSuccess={() => buy(currentId as string, currentAmount as number)}\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Buy\"\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default Desktop;\n","import Media from 'react-media';\nimport screenWidth from 'helpers/screenWidth';\n\nimport Mobile from './Responsiv/Mobile';\nimport Tablet from './Responsiv/Tablet';\nimport Desktop from './Responsiv/Desktop';\n\nconst Store: React.FC<{}> = () => {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 767px)',\n        medium: `(min-width: ${screenWidth.tablet}) and (max-width: 1439px)`,\n        large: `(min-width: ${screenWidth.desktop})`,\n      }}\n    >\n      {matches => (\n        <>\n          {matches.small && <Mobile />}\n          {matches.medium && <Tablet />}\n          {matches.large && <Desktop />}\n        </>\n      )}\n    </Media>\n  );\n};\n\nexport default Store;\n","import Store from 'components/Store';\n\nconst StorePage: React.FC<{}> = () => {\n  return <Store />;\n};\n\nexport default StorePage;\n"],"names":["useState","items","setItems","page","setPage","total","setTotal","allImages","setAllImages","showMoreDetails","setShowMoreDetails","currentTitle","setCurrentTitle","currentId","setCurrentId","currentAmount","setCurrentAmount","showModalBuyItem","setShowModalBuyItem","soundOff","useAppSelector","getSoundOff","useSound","sounds","sprite","soundEnabled","play","bank","getBank","dispatch","useAppDispatch","useGetAllItemsQuery","limit","data","isFetching","useEffect","undefined","length","prevState","showMore","id","comeBack","openModalMoreInfo","e","currentTarget","dataset","title","children","textContent","closeModalMoreInfo","buy","price","toast","operations","openModalDialogWindow","Number","closeModalDialogWindow","PhotoWrapper","styled","Photo","Text","Price","useGetOneItemQuery","useStore","Loader","src","item","imageURL","alt","description","bankFormatting","toFixed","Button","type","background","height","width","borderRadius","shadow","onClick","onClose","DialogWindow","onFailure","onSuccess","failureBtnText","successBtnText","List","screenWidth","Item","Wrapper","Title","Description","Navigation","map","_id","Container","padding","margin","IconSwitcher","name","size","fill","Modal","alignItems","queries","small","medium","large","matches"],"sourceRoot":""}