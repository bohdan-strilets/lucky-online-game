{"version":3,"file":"static/js/680.0f5c09cc.chunk.js","mappings":"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","sources":["helpers/betTypes.ts","helpers/dateFormatting.ts","hooks/useCoefficient.ts","hooks/useProfile.ts","hooks/useEditAvatar.ts","components/Modal/EditAvatar/EditAvatar.styled.ts","components/Modal/EditAvatar/EditAvatar.tsx","hooks/useEditEmail.ts","helpers/validationSchemas/editEmailSchema.ts","components/Modal/EditEmail/EditEmail.styled.ts","components/Modal/EditEmail/EditEmail.tsx","hooks/useEditPassword.ts","helpers/validationSchemas/editPasswordSchema.ts","components/Modal/EditPassword/EditPassword.tsx","hooks/useEditComplexity.ts","helpers/validationSchemas/editComplexitySchema.ts","components/Modal/EditComplexity/EditComplexity.styled.ts","components/Modal/EditComplexity/EditComplexity.tsx","hooks/useMyItems.ts","components/Profile/MyItems/MyItems.styled.ts","components/Profile/MyItems/MyItems.tsx","components/Profile/EmptyList/EmptyList.styled.ts","components/Profile/EmptyList/Responsiv/Mobile.tsx","components/Profile/EmptyList/Responsiv/Tablet.tsx","components/Profile/EmptyList/Responsiv/Desktop.tsx","components/Profile/EmptyList/EmptyList.tsx","components/Profile/Profile.styled.ts","components/Profile/Responsiv/Mobile.tsx","components/Profile/Responsiv/Tablet.tsx","components/Profile/Responsiv/Desktop.tsx","components/Profile/Profile.tsx","pages/ProfilePage.tsx"],"sourcesContent":["const types = {\n  ZERO: 'zero',\n  NUMBER: 'number',\n  HIGH: 'high',\n  LOW: 'low',\n  EVEN: 'even',\n  ODD: 'odd',\n  BLACK: 'black',\n  RED: 'red',\n  DOZEN_1: 'dozen-1',\n  DOZEN_2: 'dozen-2',\n  DOZEN_3: 'dozen-3',\n  COLUMN_1: 'column-1',\n  COLUMN_2: 'column-2',\n  COLUMN_3: 'column-3',\n};\n\nexport default types;\n","const dateFormatting = (date: string) => {\n  if (date) {\n    return date.slice(0, 19).replace('T', ' ');\n  }\n};\n\nexport default dateFormatting;\n","import types from 'helpers/betTypes';\n\nconst useCoefficient = () => {\n  const coefficientInfo = {\n    low: {\n      type: 'low',\n      coefficient: {\n        number: 5.7,\n        bottomRow: 4.2,\n        oneFromTwo: 3.2,\n      },\n      initialFunds: 3200,\n      experience: 30,\n    },\n    medium: {\n      type: 'medium',\n      coefficient: {\n        number: 3.2,\n        bottomRow: 2.1,\n        oneFromTwo: 1.7,\n      },\n      initialFunds: 1600,\n      experience: 20,\n    },\n    high: {\n      type: 'high',\n      coefficient: {\n        number: 1.9,\n        bottomRow: 1.5,\n        oneFromTwo: 1.3,\n      },\n      initialFunds: 700,\n      experience: 10,\n    },\n  };\n\n  const getCoefficient = (\n    complexity: string | null | undefined,\n    type: string | null,\n  ) => {\n    switch (complexity) {\n      case coefficientInfo.low.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.low.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.low.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.low.coefficient.bottomRow;\n        }\n        return 0;\n\n      case coefficientInfo.medium.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.medium.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.medium.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.medium.coefficient.bottomRow;\n        }\n        return 0;\n\n      case coefficientInfo.high.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.high.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.high.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.high.coefficient.bottomRow;\n        }\n        return 0;\n\n      default:\n        return 0;\n    }\n  };\n\n  return {\n    coefficientInfo,\n    getCoefficient,\n  };\n};\n\nexport default useCoefficient;\n","import { useState } from 'react';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport { useGetLevelInfoQuery } from 'redux/level/levelApi';\nimport useSound from 'use-sound';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport { getUser, getProducts } from 'redux/user/userSelectors';\nimport moment from 'moment';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { IDeleteSessionRes } from 'types/IUserRessponse';\n\nconst useProfile = () => {\n  const [showEditAvatarModal, setShowEditAvatarModal] = useState(false);\n  const [showEditEmailModal, setShowEditEmailModal] = useState(false);\n  const [showEditPasswordModal, setShowEditPasswordModal] = useState(false);\n  const [showEditComplexityModal, setShowEditComplexityModal] = useState(false);\n  const [showDeleteSessionModal, setshowDeleteSessionModal] = useState(false);\n\n  const user = useAppSelector(getUser);\n  const products = useAppSelector(getProducts);\n  const dispatch = useAppDispatch();\n  const { data } = useGetLevelInfoQuery();\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  const age = () => {\n    if (user.dateBirth) {\n      return user.dateBirth?.length > 9\n        ? Number.parseInt(moment(user.dateBirth).fromNow(true))\n        : 0;\n    }\n  };\n\n  const deleteGameSession = async () => {\n    const res = await dispatch(operations.deleteSession());\n    play({ id: 'counter_click' });\n\n    if ((res.payload as IDeleteSessionRes).status === 'ok') {\n      setshowDeleteSessionModal(false);\n    }\n  };\n\n  const switchEditAvatarModal = (state: boolean) => {\n    setShowEditAvatarModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  const switchEditEmailModal = (state: boolean) => {\n    setShowEditEmailModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  const switchEditPasswordModal = (state: boolean) => {\n    setShowEditPasswordModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  const switchEditComplexityModal = (state: boolean) => {\n    setShowEditComplexityModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  const switchDeleteSessionModal = (state: boolean) => {\n    setshowDeleteSessionModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  return {\n    showEditAvatarModal,\n    switchEditAvatarModal,\n    showEditEmailModal,\n    switchEditEmailModal,\n    showEditPasswordModal,\n    switchEditPasswordModal,\n    showEditComplexityModal,\n    switchEditComplexityModal,\n    showDeleteSessionModal,\n    switchDeleteSessionModal,\n    data,\n    age,\n    deleteGameSession,\n    user,\n    products,\n  };\n};\n\nexport default useProfile;\n","import { useState, useRef } from 'react';\nimport { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport { IChangeAvatarRes } from 'types/IUserRessponse';\n\nconst useEditAvatar = (onClose: () => void) => {\n  const dispatch = useAppDispatch();\n  const hiddenFileInput = useRef<HTMLInputElement>(null);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [fileInputState, setFileInputState] = useState('');\n  const [selectedFile, setSelectedFile] = useState<null | File | Blob>(null);\n  const [previewSource, setPreviewSource] = useState<\n    string | ArrayBuffer | null\n  >('');\n\n  const changeAvatar = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (selectedFile) {\n      previewFile(selectedFile);\n      setIsLoading(true);\n      const data = new FormData();\n      data.append('avatar', selectedFile);\n\n      if (!data) return;\n\n      const res = await dispatch(operations.changeAvatar(data));\n\n      if ((res.payload as IChangeAvatarRes).status === 'ok') {\n        onClose();\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    hiddenFileInput?.current?.click();\n  };\n\n  const handleFileInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = (e.target.files as FileList)[0];\n    previewFile(file);\n    setSelectedFile(file);\n    setFileInputState(e.target.value);\n  };\n\n  const previewFile = (file: Blob) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  return {\n    changeAvatar,\n    previewSource,\n    handleFileInputChange,\n    fileInputState,\n    isLoading,\n    hiddenFileInput,\n    handleClick,\n  };\n};\n\nexport default useEditAvatar;\n","import styled from '@emotion/styled';\nimport { ImUpload3 } from 'react-icons/im';\n\nexport const Text = styled.p`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const Label = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 150px;\n  margin-bottom: 30px;\n\n  background-color: var(--brown-transparent);\n  border-radius: 30px;\n`;\n\nexport const Input = styled.input`\n  display: none;\n`;\n\nexport const DownloadButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 90%;\n  height: 40px;\n\n  background-color: var(--brown-transparent);\n  color: var(--brown-color);\n  border: 2px solid var(--brown-color);\n  border-radius: 10px;\n\n  font-family: inherit;\n  font-size: 20px;\n\n  cursor: pointer;\n  transition: background-color var(--hover-effect), color var(--hover-effect);\n\n  :hover,\n  :focus {\n    background-color: var(--brown-color);\n    color: var(--white-color);\n  }\n`;\n\nexport const Icon = styled(ImUpload3)`\n  margin-right: 7px;\n`;\n\nexport const Preview = styled.img`\n  width: 150px;\n  margin-left: 50%;\n  transform: translate(-50%);\n  margin-bottom: 50px;\n`;\n","import useEditAvatar from 'hooks/useEditAvatar';\n\nimport Button from 'components/InterfaceElements/Button';\nimport Loader from 'components/InterfaceElements/Loader';\n\nimport {\n  Text,\n  Label,\n  Input,\n  DownloadButton,\n  Icon,\n  Preview,\n} from './EditAvatar.styled';\n\nconst EditAvatar: React.FC<{ onClose(): void }> = ({ onClose }) => {\n  const {\n    changeAvatar,\n    previewSource,\n    handleFileInputChange,\n    fileInputState,\n    isLoading,\n    handleClick,\n    hiddenFileInput,\n  } = useEditAvatar(onClose);\n\n  return (\n    <form encType=\"multipart/from-data\" onSubmit={changeAvatar}>\n      <Text>\n        The selected file must be in one of the following formats \".jpg, .png,\n        .svg\". The file must not exceed 6MB. A square image is best.\n      </Text>\n      <Label>\n        <Input\n          type=\"file\"\n          name=\"avatar\"\n          ref={hiddenFileInput}\n          multiple\n          accept=\".jpg, .png, .svg\"\n          onChange={handleFileInputChange}\n          value={fileInputState}\n        />\n\n        <DownloadButton type=\"button\" onClick={handleClick}>\n          <Icon />\n          Choose a file...\n        </DownloadButton>\n      </Label>\n\n      {previewSource && <Preview src={previewSource as string} alt=\"chosen\" />}\n\n      <Button\n        type=\"submit\"\n        background=\"green\"\n        borderRadius=\"50px\"\n        height=\"50px\"\n        width=\"100%\"\n        shadow\n      >\n        change avatar\n      </Button>\n\n      {isLoading && <Loader />}\n    </form>\n  );\n};\n\nexport default EditAvatar;\n","import { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\n\nimport { IEditEmailData } from 'types/IProfile';\nimport { IChangeEmailRes } from 'types/IUserRessponse';\n\nconst useEditEmail = (onClose: () => void) => {\n  const dispatch = useAppDispatch();\n\n  const initialValues = {\n    email: '',\n  };\n\n  const changeEmail = async (values: IEditEmailData) => {\n    const res = await dispatch(operations.changeEmail(values));\n\n    if ((res.payload as IChangeEmailRes).status === 'ok') {\n      onClose();\n    }\n  };\n\n  return { initialValues, changeEmail };\n};\n\nexport default useEditEmail;\n","import * as yup from 'yup';\n\nconst editEmailSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('The email address must be valid and existing.')\n    .required('The email field is required and cannot be empty.'),\n});\n\nexport default editEmailSchema;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n","import useEditEmail from 'hooks/useEditEmail';\n\nimport { Formik, Form } from 'formik';\nimport EntryField from 'components/InterfaceElements/EntryField';\nimport Button from 'components/InterfaceElements/Button';\n\nimport editEmailSchema from 'helpers/validationSchemas/editEmailSchema';\nimport { Text } from './EditEmail.styled';\n\nconst EditEmail: React.FC<{ onClose(): void }> = ({ onClose }) => {\n  const { changeEmail, initialValues } = useEditEmail(onClose);\n\n  return (\n    <>\n      <Text>\n        After changing your email, you will need to re-verify your email.\n      </Text>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={changeEmail}\n        validationSchema={editEmailSchema}\n      >\n        {({ values, handleSubmit, handleChange }) => (\n          <Form onSubmit={handleSubmit}>\n            <EntryField\n              label=\"email\"\n              type=\"email\"\n              name=\"email\"\n              value={values.email}\n              onChange={handleChange}\n              placeholder=\"Enter your e-mail\"\n              required={true}\n              height=\"50px\"\n              width=\"100%\"\n              margin=\"0 0 30px 0\"\n            />\n\n            <Button\n              type=\"submit\"\n              background=\"green\"\n              width=\"100%\"\n              height=\"60px\"\n              borderRadius=\"50px\"\n              shadow\n            >\n              change email\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default EditEmail;\n","import { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\n\nimport { IEditPasswordData } from 'types/IProfile';\nimport { IChangePasswordRes } from 'types/IUserRessponse';\n\nconst useEditPassword = (onClose: () => void) => {\n  const dispatch = useAppDispatch();\n\n  const initialValues = {\n    password: '',\n    newPassword: '',\n    passwordAgain: '',\n  };\n\n  const changePassword = async (values: IEditPasswordData) => {\n    const passwords = {\n      password: values.password,\n      newPassword: values.newPassword,\n    };\n\n    const res = await dispatch(operations.changePassword(passwords));\n    if ((res.payload as IChangePasswordRes).status === 'ok') {\n      onClose();\n    }\n  };\n\n  return { initialValues, changePassword };\n};\n\nexport default useEditPassword;\n","import * as yup from 'yup';\n\nconst editPasswordSchema = yup.object().shape({\n  password: yup\n    .string()\n    .min(6, 'The minimum password length must be 6 characters.')\n    .max(12, 'The maximum password length must not exceed 12 characters.')\n    .required('The password field is required and cannot be empty.'),\n  newPassword: yup\n    .string()\n    .min(6, 'The minimum password length must be 6 characters.')\n    .max(12, 'The maximum password length must not exceed 12 characters.')\n    .required('The password field is required and cannot be empty.'),\n  passwordAgain: yup\n    .string()\n    .oneOf([yup.ref('newPassword')], 'Passwords must match'),\n});\n\nexport default editPasswordSchema;\n","import useEditPassword from 'hooks/useEditPassword';\n\nimport { Formik, Form } from 'formik';\nimport EntryField from 'components/InterfaceElements/EntryField';\nimport Button from 'components/InterfaceElements/Button';\n\nimport editPasswordSchema from 'helpers/validationSchemas/editPasswordSchema';\n\nconst EditPassword: React.FC<{ onClose(): void }> = ({ onClose }) => {\n  const { changePassword, initialValues } = useEditPassword(onClose);\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={changePassword}\n      validationSchema={editPasswordSchema}\n    >\n      {({ values, handleSubmit, handleChange }) => (\n        <Form onSubmit={handleSubmit}>\n          <EntryField\n            label=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n            required={true}\n            height=\"50px\"\n            width=\"100%\"\n            margin=\"0 0 30px 0\"\n          />\n\n          <EntryField\n            label=\"new password\"\n            type=\"password\"\n            name=\"newPassword\"\n            value={values.newPassword}\n            onChange={handleChange}\n            required={true}\n            height=\"50px\"\n            width=\"100%\"\n            margin=\"0 0 30px 0\"\n          />\n\n          <EntryField\n            label=\"password again\"\n            type=\"password\"\n            name=\"passwordAgain\"\n            value={values.passwordAgain}\n            onChange={handleChange}\n            required={true}\n            height=\"50px\"\n            width=\"100%\"\n            margin=\"0 0 30px 0\"\n          />\n\n          <Button\n            type=\"submit\"\n            background=\"green\"\n            width=\"100%\"\n            height=\"60px\"\n            borderRadius=\"50px\"\n            shadow\n          >\n            change password\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditPassword;\n","import { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport useCoefficient from 'hooks/useCoefficient';\n\nimport { IEditComplexityData } from 'types/IProfile';\nimport { IChangeComplexityRes } from 'types/IUserRessponse';\n\nconst useEditComplexity = (\n  onClose: () => void,\n  complexity?: 'low' | 'medium' | 'high' | null,\n) => {\n  const dispatch = useAppDispatch();\n  const { coefficientInfo } = useCoefficient();\n\n  const initialValues = {\n    complexity,\n  };\n\n  const changeComplexity = async (values: IEditComplexityData) => {\n    if (values.complexity !== null && values.complexity !== undefined) {\n      const res = await dispatch(\n        operations.changeComplexity({\n          complexity: values.complexity,\n          bank: coefficientInfo[values.complexity].initialFunds,\n        }),\n      );\n\n      if ((res.payload as IChangeComplexityRes).status === 'ok') {\n        onClose();\n      }\n    }\n  };\n\n  return { initialValues, changeComplexity };\n};\n\nexport default useEditComplexity;\n","import * as yup from 'yup';\n\nconst editComplexitySchema = yup.object().shape({\n  complexity: yup\n    .string()\n    .required('The complexity field is required and cannot be empty.'),\n});\n\nexport default editComplexitySchema;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  margin-bottom: 30px;\n`;\n","import useEditComplexity from 'hooks/useEditComplexity';\n\nimport { Formik, Form } from 'formik';\nimport Button from 'components/InterfaceElements/Button';\nimport RadioButton from 'components/InterfaceElements/RadioButton';\n\nimport editComplexitySchema from 'helpers/validationSchemas/editComplexitySchema';\nimport { IEditComplexityState } from 'types/IEditComplexity';\n\nimport { Text, Wrapper } from './EditComplexity.styled';\n\nconst EditComplexity: React.FC<IEditComplexityState> = ({\n  onClose,\n  complexity,\n}) => {\n  const { changeComplexity, initialValues } = useEditComplexity(\n    onClose,\n    complexity,\n  );\n\n  return (\n    <>\n      <Text>\n        After changing the difficulty level, the rules for calculating rewards\n        and experience will change.\n      </Text>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={changeComplexity}\n        validationSchema={editComplexitySchema}\n      >\n        {({ values, handleSubmit, handleChange }) => (\n          <Form onSubmit={handleSubmit}>\n            <Wrapper>\n              <RadioButton\n                label=\"low\"\n                name=\"complexity\"\n                value=\"low\"\n                checked={values.complexity === 'low'}\n              />\n\n              <RadioButton\n                label=\"medium\"\n                name=\"complexity\"\n                value=\"medium\"\n                checked={values.complexity === 'medium'}\n              />\n\n              <RadioButton\n                label=\"high\"\n                name=\"complexity\"\n                value=\"high\"\n                checked={values.complexity === 'high'}\n              />\n            </Wrapper>\n\n            <Button\n              type=\"submit\"\n              background=\"green\"\n              width=\"100%\"\n              height=\"60px\"\n              borderRadius=\"50px\"\n              shadow\n            >\n              change complexity\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default EditComplexity;\n","import { useState } from 'react';\nimport { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport useSound from 'use-sound';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { toast } from 'react-toastify';\n\nconst useMyItems = () => {\n  const [showDialog, setShowDialog] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState<null | number>(null);\n  const [currentPrice, setCurrentPrice] = useState<null | number>(null);\n  const [halfPrice, setHalfPrice] = useState(0);\n\n  const dispatch = useAppDispatch();\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  const openDialogWindow = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    setShowDialog(true);\n    play({ id: 'counter_click' });\n\n    const index = e.currentTarget.dataset.index;\n    const price = e.currentTarget.dataset.price;\n\n    if (index !== undefined && price !== undefined) {\n      setCurrentIndex(Number(index));\n      setCurrentPrice(Number(price));\n      setHalfPrice(Number(price) / 2);\n    }\n  };\n\n  const closeDialogWindow = () => {\n    setShowDialog(false);\n    play({ id: 'counter_click' });\n  };\n\n  const sell = () => {\n    if (currentIndex !== null && currentPrice !== null) {\n      dispatch(\n        operations.sellItem({ index: currentIndex, price: currentPrice / 2 }),\n      );\n      closeDialogWindow();\n      toast.success(\"You have successfully sold an item you don't want.\");\n      play({ id: 'sound_victory' });\n    }\n  };\n\n  return {\n    openDialogWindow,\n    closeDialogWindow,\n    sell,\n    showDialog,\n    currentPrice,\n    halfPrice,\n  };\n};\n\nexport default useMyItems;\n","import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nexport const List = styled.ul`\n  width: 100%;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    display: flex;\n    flex-wrap: wrap;\n\n    margin: -5px;\n  }\n`;\n\nexport const Item = styled.li`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 15px;\n\n  border: 3px solid var(--white-transparent);\n  border-radius: 10px;\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 10px;\n\n    :last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    width: calc((100% - 4 * 5px) / 2);\n    margin: 5px;\n  }\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    width: calc((100% - 8 * 5px) / 4);\n    margin: 5px;\n  }\n`;\n\nexport const Photo = styled.img`\n  max-height: 150px;\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.p`\n  font-weight: 900;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n`;\n\nexport const Price = styled.p`\n  color: var(--green-color);\n`;\n\nexport const ButtonWrapper = styled.div`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n`;\n","import useMyItems from 'hooks/useMyItems';\nimport bankFormatting from 'helpers/bankFormatting';\n\nimport Button from 'components/InterfaceElements/Button';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport Modal from 'components/Modal';\nimport DialogWindow from 'components/Modal/DialogWindow';\n\nimport { IItem } from 'types/IStore';\nimport { List, Item, Photo, Title, Price, ButtonWrapper } from './MyItems.styled';\n\nconst MyItems: React.FC<{ products: IItem[] }> = ({ products }) => {\n  const { closeDialogWindow, openDialogWindow, sell, currentPrice, halfPrice, showDialog } =\n    useMyItems();\n\n  return (\n    <>\n      <List>\n        {products.map(({ imageURL, title, price }, index) => (\n          <Item key={index}>\n            <Photo src={imageURL} alt={title} />\n            <Title>{title}</Title>\n            <Price>{bankFormatting(Number(price).toFixed(2))} $</Price>\n            <ButtonWrapper>\n              <Button\n                type=\"button\"\n                background=\"green\"\n                width=\"40px\"\n                height=\"40px\"\n                borderRadius=\"10px\"\n                onClick={openDialogWindow}\n                data-index={index}\n                data-price={price}\n              >\n                <IconSwitcher name=\"dollar\" size=\"22px\" fill=\"var(--white-color)\" />\n              </Button>\n            </ButtonWrapper>\n          </Item>\n        ))}\n      </List>\n\n      {showDialog && (\n        <Modal title=\"Are you sure you want to sell this item?\" onClose={closeDialogWindow}>\n          <DialogWindow\n            successBtnText=\"Sell\"\n            failureBtnText=\"Cancel\"\n            onFailure={closeDialogWindow}\n            onSuccess={sell}\n            text={`The price of this item on the market is ${bankFormatting(\n              Number(currentPrice).toFixed(2),\n            )} $ do you really want to sell it for half the price? You can only get ${bankFormatting(\n              Number(halfPrice).toFixed(2),\n            )} $`}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default MyItems;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 100%;\n  padding: 40px;\n\n  border: 3px solid var(--white-transparent);\n  border-radius: 20px;\n`;\n\nexport const Text = styled.p`\n  font-size: 22px;\n  font-weight: 900;\n  margin-bottom: 25px;\n`;\n","import { useNavigate } from 'react-router-dom';\nimport Button from 'components/InterfaceElements/Button';\nimport { Wrapper, Text } from '../EmptyList.styled';\n\nconst Mobile: React.FC<{}> = () => {\n  const navigate = useNavigate();\n\n  return (\n    <Wrapper>\n      <Text>You haven't bought anything yet.... :(</Text>\n\n      <Button\n        type=\"button\"\n        background=\"green\"\n        height=\"60px\"\n        width=\"230px\"\n        borderRadius=\"50px\"\n        shadow\n        onClick={() => navigate('/store')}\n      >\n        go to the store\n      </Button>\n    </Wrapper>\n  );\n};\n\nexport default Mobile;\n","import { useNavigate } from 'react-router-dom';\nimport Button from 'components/InterfaceElements/Button';\nimport { Wrapper, Text } from '../EmptyList.styled';\n\nconst Tablet: React.FC<{}> = () => {\n  const navigate = useNavigate();\n\n  return (\n    <Wrapper>\n      <Text>You haven't bought anything yet.... :(</Text>\n\n      <Button\n        type=\"button\"\n        background=\"green\"\n        height=\"60px\"\n        width=\"550px\"\n        borderRadius=\"50px\"\n        shadow\n        onClick={() => navigate('/store')}\n      >\n        go to the store\n      </Button>\n    </Wrapper>\n  );\n};\n\nexport default Tablet;\n","import { useNavigate } from 'react-router-dom';\nimport Button from 'components/InterfaceElements/Button';\nimport { Wrapper, Text } from '../EmptyList.styled';\n\nconst Desktop: React.FC<{}> = () => {\n  const navigate = useNavigate();\n\n  return (\n    <Wrapper>\n      <Text>You haven't bought anything yet.... :(</Text>\n\n      <Button\n        type=\"button\"\n        background=\"green\"\n        height=\"60px\"\n        width=\"650px\"\n        borderRadius=\"50px\"\n        shadow\n        onClick={() => navigate('/store')}\n      >\n        go to the store\n      </Button>\n    </Wrapper>\n  );\n};\n\nexport default Desktop;\n","import Media from 'react-media';\nimport screenWidth from 'helpers/screenWidth';\n\nimport Mobile from './Responsiv/Mobile';\nimport Tablet from './Responsiv/Tablet';\nimport Desktop from './Responsiv/Desktop';\n\nconst EmptyList: React.FC<{}> = () => {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 767px)',\n        medium: `(min-width: ${screenWidth.tablet}) and (max-width: 1439px)`,\n        large: `(min-width: ${screenWidth.desktop})`,\n      }}\n    >\n      {matches => (\n        <>\n          {matches.small && <Mobile />}\n          {matches.medium && <Tablet />}\n          {matches.large && <Desktop />}\n        </>\n      )}\n    </Media>\n  );\n};\n\nexport default EmptyList;\n","import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  padding-bottom: 50px;\n`;\n\nexport const Header = styled.div`\n  margin-bottom: 50px;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const Controllers = styled.ul`\n  display: flex;\n  margin-bottom: 15px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  margin-bottom: 30px;\n\n  border-bottom: 2px dotted var(--brown-color);\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Avatar = styled.img`\n  width: 100%;\n  height: auto;\n\n  opacity: 1;\n\n  cursor: pointer;\n  transition: border-color var(--hover-effect), opacity var(--hover-effect);\n\n  :hover,\n  :focus {\n    border-color: var(--brown-color);\n    opacity: 0.7;\n  }\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 30px;\n  }\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    position: absolute;\n    top: -50px;\n    left: 50px;\n\n    width: 93px;\n    height: 93px;\n\n    border-radius: 50%;\n    border: 3px solid var(--white-color);\n  }\n`;\n\nexport const Name = styled.p`\n  font-size: 30px;\n  font-weight: 900;\n  margin-bottom: 50px;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    font-size: 34px;\n  }\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    font-size: 44px;\n  }\n`;\n\nexport const Nickname = styled.span`\n  font-size: 18px;\n  color: var(--green-color);\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    font-size: 20px;\n  }\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    font-size: 24px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 12px;\n  margin-bottom: 15px;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    font-size: 20px;\n  }\n`;\n\nexport const Value = styled.span`\n  margin-right: 5px;\n\n  @media screen and (max-width: 767px) {\n    font-size: 12px;\n    margin-right: 10px;\n  }\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    text-transform: uppercase;\n  }\n`;\n\nexport const EditBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: transparent;\n  border: none;\n  outline: none;\n\n  cursor: pointer;\n  transition: opacity var(--hover-effect);\n\n  :hover,\n  :focus {\n    opacity: 0.5;\n  }\n`;\n","import useProfile from 'hooks/useProfile';\nimport useProfileControllers from 'hooks/useProfileControllers';\nimport dateFormatting from 'helpers/dateFormatting';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Modal from 'components/Modal';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport EditAvatar from 'components/Modal/EditAvatar';\nimport EditEmail from 'components/Modal/EditEmail';\nimport EditPassword from 'components/Modal/EditPassword';\nimport EditComplexity from 'components/Modal/EditComplexity';\nimport DialogWindow from 'components/Modal/DialogWindow';\nimport MyItems from '../MyItems';\nimport EmptyList from '../EmptyList';\nimport Button from 'components/InterfaceElements/Button';\nimport EditProfile from 'components/Modal/EditProfile';\n\nimport {\n  Wrapper,\n  Header,\n  Controllers,\n  Item,\n  Avatar,\n  Nickname,\n  Name,\n  Text,\n  Value,\n  EditBtn,\n} from '../Profile.styled';\n\nconst Mobile: React.FC<{}> = () => {\n  const {\n    age,\n    data,\n    deleteGameSession,\n    switchEditAvatarModal,\n    switchEditComplexityModal,\n    switchEditEmailModal,\n    switchEditPasswordModal,\n    showDeleteSessionModal,\n    showEditAvatarModal,\n    showEditComplexityModal,\n    showEditEmailModal,\n    showEditPasswordModal,\n    switchDeleteSessionModal,\n    user,\n    products,\n  } = useProfile();\n\n  const {\n    switchEditProfileModal,\n    switchDialogModal,\n    showDialogModal,\n    showEditProfileModal,\n    deleteAccount,\n  } = useProfileControllers();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"280px\"\n      padding=\"10px\"\n      margin=\"0 0 80px 0\"\n    >\n      {user.name && (\n        <Wrapper>\n          <Header>\n            <Text>ID: {user._id}</Text>\n\n            <div>\n              <p>Account creation date:</p>\n              <Text>\n                {user.createdAt && dateFormatting(user.createdAt as string)}\n              </Text>\n              <p>Last update date:</p>\n              <Text>\n                {user.updatedAt && dateFormatting(user.updatedAt as string)}\n              </Text>\n            </div>\n          </Header>\n\n          <Controllers>\n            <li>\n              <Button\n                type=\"button\"\n                background=\"blue\"\n                borderRadius=\"10px\"\n                height=\"40px\"\n                width=\"40px\"\n                margin=\"0 10px 0 0 \"\n                onClick={() => switchEditProfileModal(true)}\n              >\n                <IconSwitcher\n                  name=\"adjust\"\n                  size=\"18px\"\n                  fill=\"var(--white-color)\"\n                />\n              </Button>\n            </li>\n            <li>\n              <Button\n                type=\"button\"\n                background=\"blue\"\n                borderRadius=\"10px\"\n                height=\"40px\"\n                width=\"40px\"\n                onClick={() => switchDialogModal(true)}\n              >\n                <IconSwitcher\n                  name=\"delete\"\n                  size=\"18px\"\n                  fill=\"var(--white-color)\"\n                />\n              </Button>\n            </li>\n          </Controllers>\n\n          <Avatar\n            src={user.avatarURL as string}\n            alt={`${user.name} user avatar`}\n            onClick={() => switchEditAvatarModal(true)}\n          />\n\n          <Name>\n            {user.name}\n            <br />\n            <Nickname>{user.nickname}</Nickname>\n          </Name>\n\n          <ul>\n            <Item>\n              <Text>Email:</Text>\n              <div>\n                <Value>{user.email}</Value>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() => switchEditEmailModal(true)}\n                >\n                  <IconSwitcher\n                    name=\"pen\"\n                    size=\"12px\"\n                    fill=\"var(--green-color)\"\n                  />\n                </EditBtn>\n              </div>\n            </Item>\n            <Item>\n              <Text>Password:</Text>\n              <div>\n                <Value>******</Value>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() => switchEditPasswordModal(true)}\n                >\n                  <IconSwitcher\n                    name=\"pen\"\n                    size=\"12px\"\n                    fill=\"var(--green-color)\"\n                  />\n                </EditBtn>\n              </div>\n            </Item>\n            <Item>\n              <Text>Gender:</Text>\n              <Value>{user.gender}</Value>\n            </Item>\n            <Item>\n              <Text>Date of birth:</Text>\n              <Value>{`${user.dateBirth} | ${age()}`}</Value>\n            </Item>\n            <Item>\n              <Text>Complexity:</Text>\n              <div>\n                <Value>\n                  {user.complexity\n                    ? user.complexity\n                    : 'The game session has not yet been created.'}\n                </Value>\n                {user.inGame && (\n                  <>\n                    <EditBtn\n                      type=\"button\"\n                      onClick={() => switchEditComplexityModal(true)}\n                    >\n                      <IconSwitcher\n                        name=\"pen\"\n                        size=\"12px\"\n                        fill=\"var(--green-color)\"\n                      />\n                    </EditBtn>\n                    <EditBtn\n                      type=\"button\"\n                      onClick={() => switchDeleteSessionModal(true)}\n                    >\n                      <IconSwitcher\n                        name=\"delete\"\n                        size=\"12px\"\n                        fill=\"var(--green-color)\"\n                      />\n                    </EditBtn>\n                  </>\n                )}\n              </div>\n            </Item>\n            <Item>\n              <Text>Game session:</Text>\n              <Value>\n                {user.inGame &&\n                  `Game creation date: ${\n                    data && dateFormatting(data?.level.createdAt as string)\n                  }`}\n                {!user.inGame && 'Start a new game'}\n              </Value>\n            </Item>\n          </ul>\n        </Wrapper>\n      )}\n\n      {products && products.length > 0 ? (\n        <MyItems products={products} />\n      ) : (\n        <EmptyList />\n      )}\n\n      {showEditAvatarModal && (\n        <Modal\n          title=\"Choose a new avatar\"\n          onClose={() => switchEditAvatarModal(false)}\n        >\n          <EditAvatar onClose={() => switchEditAvatarModal(false)} />\n        </Modal>\n      )}\n\n      {showEditEmailModal && (\n        <Modal title=\"Change email\" onClose={() => switchEditEmailModal(false)}>\n          <EditEmail onClose={() => switchEditEmailModal(false)} />\n        </Modal>\n      )}\n\n      {showEditPasswordModal && (\n        <Modal\n          title=\"Change password\"\n          onClose={() => switchEditPasswordModal(false)}\n        >\n          <EditPassword onClose={() => switchEditPasswordModal(false)} />\n        </Modal>\n      )}\n\n      {showEditComplexityModal && (\n        <Modal\n          title=\"Change complexity\"\n          onClose={() => switchEditComplexityModal(false)}\n        >\n          <EditComplexity\n            onClose={() => switchEditComplexityModal(false)}\n            complexity={user.complexity}\n          />\n        </Modal>\n      )}\n\n      {showDeleteSessionModal && (\n        <Modal\n          title=\"Delete current game session?\"\n          onClose={() => switchDeleteSessionModal(false)}\n        >\n          <DialogWindow\n            onFailure={() => switchDeleteSessionModal(false)}\n            onSuccess={deleteGameSession}\n            text=\"After deleting a game session, data such as betting history, statistics and game level will be lost. Are you sure you want to continue?\"\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Delete\"\n          />\n        </Modal>\n      )}\n\n      {showDialogModal && (\n        <Modal onClose={() => switchDialogModal(false)} title=\"Delete account?\">\n          <DialogWindow\n            onFailure={() => switchDialogModal(false)}\n            onSuccess={deleteAccount}\n            text='Do you really want to delete your account and all data associated with it. All game progress will be lost, including statistics. Instead, you can use the delete \"game session\" function.'\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Delete\"\n          />\n        </Modal>\n      )}\n\n      {showEditProfileModal && (\n        <Modal\n          onClose={() => switchEditProfileModal(false)}\n          title=\"Edit personal data\"\n        >\n          <EditProfile onClose={() => switchEditProfileModal(false)} />\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default Mobile;\n","import useProfile from 'hooks/useProfile';\nimport useProfileControllers from 'hooks/useProfileControllers';\nimport dateFormatting from 'helpers/dateFormatting';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Modal from 'components/Modal';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport EditAvatar from 'components/Modal/EditAvatar';\nimport EditEmail from 'components/Modal/EditEmail';\nimport EditPassword from 'components/Modal/EditPassword';\nimport EditComplexity from 'components/Modal/EditComplexity';\nimport DialogWindow from 'components/Modal/DialogWindow';\nimport MyItems from '../MyItems';\nimport EmptyList from '../EmptyList';\nimport Button from 'components/InterfaceElements/Button';\n\nimport {\n  Wrapper,\n  Header,\n  Controllers,\n  Item,\n  Avatar,\n  Nickname,\n  Name,\n  Text,\n  Value,\n  EditBtn,\n} from '../Profile.styled';\n\nconst Tablet: React.FC<{}> = () => {\n  const {\n    age,\n    data,\n    deleteGameSession,\n    switchEditAvatarModal,\n    switchEditComplexityModal,\n    switchEditEmailModal,\n    switchEditPasswordModal,\n    showDeleteSessionModal,\n    showEditAvatarModal,\n    showEditComplexityModal,\n    showEditEmailModal,\n    showEditPasswordModal,\n    switchDeleteSessionModal,\n    user,\n    products,\n  } = useProfile();\n\n  const { switchEditProfileModal, switchDialogModal } = useProfileControllers();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"680px\"\n      padding=\"40px 10px 10px 10px\"\n      margin=\"50px 0 80px 0\"\n    >\n      {user.name && (\n        <Wrapper>\n          <Header>\n            <p>ID: {user._id}</p>\n\n            <div>\n              <p>\n                Account creation date:{' '}\n                {user.createdAt && dateFormatting(user.createdAt as string)}\n              </p>\n              <p>\n                Last update date:{' '}\n                {user.updatedAt && dateFormatting(user.updatedAt as string)}\n              </p>\n            </div>\n          </Header>\n\n          <Controllers>\n            <li>\n              <Button\n                type=\"button\"\n                background=\"blue\"\n                borderRadius=\"10px\"\n                height=\"40px\"\n                width=\"40px\"\n                margin=\"0 10px 0 0 \"\n                onClick={() => switchEditProfileModal(true)}\n              >\n                <IconSwitcher\n                  name=\"adjust\"\n                  size=\"18px\"\n                  fill=\"var(--white-color)\"\n                />\n              </Button>\n            </li>\n            <li>\n              <Button\n                type=\"button\"\n                background=\"blue\"\n                borderRadius=\"10px\"\n                height=\"40px\"\n                width=\"40px\"\n                onClick={() => switchDialogModal(true)}\n              >\n                <IconSwitcher\n                  name=\"delete\"\n                  size=\"18px\"\n                  fill=\"var(--white-color)\"\n                />\n              </Button>\n            </li>\n          </Controllers>\n\n          <Avatar\n            src={user.avatarURL as string}\n            alt={`${user.name} user avatar`}\n            onClick={() => switchEditAvatarModal(true)}\n          />\n\n          <Name>\n            {user.name} <Nickname>{user.nickname}</Nickname>\n          </Name>\n\n          <ul>\n            <Item>\n              <Text>Email:</Text>\n              <div>\n                <Value>{user.email}</Value>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() => switchEditEmailModal(true)}\n                >\n                  <IconSwitcher\n                    name=\"pen\"\n                    size=\"16px\"\n                    fill=\"var(--green-color)\"\n                  />\n                </EditBtn>\n              </div>\n            </Item>\n            <Item>\n              <Text>Password:</Text>\n              <div>\n                <Value>******</Value>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() => switchEditPasswordModal(true)}\n                >\n                  <IconSwitcher\n                    name=\"pen\"\n                    size=\"16px\"\n                    fill=\"var(--green-color)\"\n                  />\n                </EditBtn>\n              </div>\n            </Item>\n            <Item>\n              <Text>Gender:</Text>\n              <Value>{user.gender}</Value>\n            </Item>\n            <Item>\n              <Text>Date of birth:</Text>\n              <Value>{`${user.dateBirth} | ${age()}`}</Value>\n            </Item>\n            <Item>\n              <Text>Complexity:</Text>\n              <div>\n                <Value>\n                  {user.complexity\n                    ? user.complexity\n                    : 'The game session has not yet been created.'}\n                </Value>\n                {user.inGame && (\n                  <>\n                    <EditBtn\n                      type=\"button\"\n                      onClick={() => switchEditComplexityModal(true)}\n                    >\n                      <IconSwitcher\n                        name=\"pen\"\n                        size=\"16px\"\n                        fill=\"var(--green-color)\"\n                      />\n                    </EditBtn>\n                    <EditBtn\n                      type=\"button\"\n                      onClick={() => switchDeleteSessionModal(true)}\n                    >\n                      <IconSwitcher\n                        name=\"delete\"\n                        size=\"16px\"\n                        fill=\"var(--green-color)\"\n                      />\n                    </EditBtn>\n                  </>\n                )}\n              </div>\n            </Item>\n            <Item>\n              <Text>Game session:</Text>\n              <Value>\n                {user.inGame &&\n                  `Game creation date: ${\n                    data && dateFormatting(data?.level.createdAt as string)\n                  }`}\n                {!user.inGame && 'Start a new game'}\n              </Value>\n            </Item>\n          </ul>\n        </Wrapper>\n      )}\n\n      {products && products.length > 0 ? (\n        <MyItems products={products} />\n      ) : (\n        <EmptyList />\n      )}\n\n      {showEditAvatarModal && (\n        <Modal\n          title=\"Choose a new avatar\"\n          onClose={() => switchEditAvatarModal(false)}\n        >\n          <EditAvatar onClose={() => switchEditAvatarModal(false)} />\n        </Modal>\n      )}\n\n      {showEditEmailModal && (\n        <Modal title=\"Change email\" onClose={() => switchEditEmailModal(false)}>\n          <EditEmail onClose={() => switchEditEmailModal(false)} />\n        </Modal>\n      )}\n\n      {showEditPasswordModal && (\n        <Modal\n          title=\"Change password\"\n          onClose={() => switchEditPasswordModal(false)}\n        >\n          <EditPassword onClose={() => switchEditPasswordModal(false)} />\n        </Modal>\n      )}\n\n      {showEditComplexityModal && (\n        <Modal\n          title=\"Change complexity\"\n          onClose={() => switchEditComplexityModal(false)}\n        >\n          <EditComplexity\n            onClose={() => switchEditComplexityModal(false)}\n            complexity={user.complexity}\n          />\n        </Modal>\n      )}\n\n      {showDeleteSessionModal && (\n        <Modal\n          title=\"Delete current game session?\"\n          onClose={() => switchDeleteSessionModal(false)}\n        >\n          <DialogWindow\n            onFailure={() => switchDeleteSessionModal(false)}\n            onSuccess={deleteGameSession}\n            text=\"After deleting a game session, data such as betting history, statistics and game level will be lost. Are you sure you want to continue?\"\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Delete\"\n          />\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default Tablet;\n","import useProfile from 'hooks/useProfile';\nimport dateFormatting from 'helpers/dateFormatting';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Controllers from '../Controllers';\nimport Modal from 'components/Modal';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport EditAvatar from 'components/Modal/EditAvatar';\nimport EditEmail from 'components/Modal/EditEmail';\nimport EditPassword from 'components/Modal/EditPassword';\nimport EditComplexity from 'components/Modal/EditComplexity';\nimport DialogWindow from 'components/Modal/DialogWindow';\nimport MyItems from '../MyItems';\nimport EmptyList from '../EmptyList';\n\nimport {\n  Wrapper,\n  Header,\n  Item,\n  Avatar,\n  Nickname,\n  Name,\n  Text,\n  Value,\n  EditBtn,\n} from '../Profile.styled';\n\nconst Desktop: React.FC<{}> = () => {\n  const {\n    age,\n    data,\n    deleteGameSession,\n    switchEditAvatarModal,\n    switchEditComplexityModal,\n    switchEditEmailModal,\n    switchEditPasswordModal,\n    showDeleteSessionModal,\n    showEditAvatarModal,\n    showEditComplexityModal,\n    showEditEmailModal,\n    showEditPasswordModal,\n    switchDeleteSessionModal,\n    user,\n    products,\n  } = useProfile();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"1050px\"\n      padding=\"70px 50px\"\n      margin=\"50px\"\n    >\n      <Controllers />\n\n      {user.name && (\n        <Wrapper>\n          <Header>\n            <p>ID: {user._id}</p>\n\n            <div>\n              <p>\n                Account creation date:{' '}\n                {user.createdAt && dateFormatting(user.createdAt as string)}\n              </p>\n              <p>\n                Last update date:{' '}\n                {user.updatedAt && dateFormatting(user.updatedAt as string)}\n              </p>\n            </div>\n          </Header>\n\n          <Avatar\n            src={user.avatarURL as string}\n            alt={`${user.name} user avatar`}\n            onClick={() => switchEditAvatarModal(true)}\n          />\n\n          <Name>\n            {user.name} <Nickname>{user.nickname}</Nickname>\n          </Name>\n\n          <ul>\n            <Item>\n              <Text>Email:</Text>\n              <div>\n                <Value>{user.email}</Value>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() => switchEditEmailModal(true)}\n                >\n                  <IconSwitcher\n                    name=\"pen\"\n                    size=\"16px\"\n                    fill=\"var(--green-color)\"\n                  />\n                </EditBtn>\n              </div>\n            </Item>\n            <Item>\n              <Text>Password:</Text>\n              <div>\n                <Value>******</Value>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() => switchEditPasswordModal(true)}\n                >\n                  <IconSwitcher\n                    name=\"pen\"\n                    size=\"16px\"\n                    fill=\"var(--green-color)\"\n                  />\n                </EditBtn>\n              </div>\n            </Item>\n            <Item>\n              <Text>Gender:</Text>\n              <Value>{user.gender}</Value>\n            </Item>\n            <Item>\n              <Text>Date of birth:</Text>\n              <Value>{`${user.dateBirth} | ${age()}`}</Value>\n            </Item>\n            <Item>\n              <Text>Complexity:</Text>\n              <div>\n                <Value>\n                  {user.complexity\n                    ? user.complexity\n                    : 'The game session has not yet been created.'}\n                </Value>\n                {user.inGame && (\n                  <>\n                    <EditBtn\n                      type=\"button\"\n                      onClick={() => switchEditComplexityModal(true)}\n                    >\n                      <IconSwitcher\n                        name=\"pen\"\n                        size=\"16px\"\n                        fill=\"var(--green-color)\"\n                      />\n                    </EditBtn>\n                    <EditBtn\n                      type=\"button\"\n                      onClick={() => switchDeleteSessionModal(true)}\n                    >\n                      <IconSwitcher\n                        name=\"delete\"\n                        size=\"16px\"\n                        fill=\"var(--green-color)\"\n                      />\n                    </EditBtn>\n                  </>\n                )}\n              </div>\n            </Item>\n            <Item>\n              <Text>Game session:</Text>\n              <Value>\n                {user.inGame &&\n                  `Game creation date: ${\n                    data && dateFormatting(data?.level.createdAt as string)\n                  }`}\n                {!user.inGame && 'Start a new game'}\n              </Value>\n            </Item>\n          </ul>\n        </Wrapper>\n      )}\n\n      {products && products.length > 0 ? (\n        <MyItems products={products} />\n      ) : (\n        <EmptyList />\n      )}\n\n      {showEditAvatarModal && (\n        <Modal\n          title=\"Choose a new avatar\"\n          onClose={() => switchEditAvatarModal(false)}\n        >\n          <EditAvatar onClose={() => switchEditAvatarModal(false)} />\n        </Modal>\n      )}\n\n      {showEditEmailModal && (\n        <Modal title=\"Change email\" onClose={() => switchEditEmailModal(false)}>\n          <EditEmail onClose={() => switchEditEmailModal(false)} />\n        </Modal>\n      )}\n\n      {showEditPasswordModal && (\n        <Modal\n          title=\"Change password\"\n          onClose={() => switchEditPasswordModal(false)}\n        >\n          <EditPassword onClose={() => switchEditPasswordModal(false)} />\n        </Modal>\n      )}\n\n      {showEditComplexityModal && (\n        <Modal\n          title=\"Change complexity\"\n          onClose={() => switchEditComplexityModal(false)}\n        >\n          <EditComplexity\n            onClose={() => switchEditComplexityModal(false)}\n            complexity={user.complexity}\n          />\n        </Modal>\n      )}\n\n      {showDeleteSessionModal && (\n        <Modal\n          title=\"Delete current game session?\"\n          onClose={() => switchDeleteSessionModal(false)}\n        >\n          <DialogWindow\n            onFailure={() => switchDeleteSessionModal(false)}\n            onSuccess={deleteGameSession}\n            text=\"After deleting a game session, data such as betting history, statistics and game level will be lost. Are you sure you want to continue?\"\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Delete\"\n          />\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default Desktop;\n","import Media from 'react-media';\nimport screenWidth from 'helpers/screenWidth';\n\nimport Mobile from './Responsiv/Mobile';\nimport Tablet from './Responsiv/Tablet';\nimport Desktop from './Responsiv/Desktop';\n\nconst Profile: React.FC<{}> = () => {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 767px)',\n        medium: `(min-width: ${screenWidth.tablet}) and (max-width: 1439px)`,\n        large: `(min-width: ${screenWidth.desktop})`,\n      }}\n    >\n      {matches => (\n        <>\n          {matches.small && <Mobile />}\n          {matches.medium && <Tablet />}\n          {matches.large && <Desktop />}\n        </>\n      )}\n    </Media>\n  );\n};\n\nexport default Profile;\n","import Profile from 'components/Profile';\n\nconst ProfilePage: React.FC<{}> = () => {\n  return <Profile />;\n};\n\nexport default ProfilePage;\n"],"names":["ZERO","NUMBER","HIGH","LOW","EVEN","ODD","BLACK","RED","DOZEN_1","DOZEN_2","DOZEN_3","COLUMN_1","COLUMN_2","COLUMN_3","date","slice","replace","coefficientInfo","low","type","coefficient","number","bottomRow","oneFromTwo","initialFunds","experience","medium","high","getCoefficient","complexity","types","useState","showEditAvatarModal","setShowEditAvatarModal","showEditEmailModal","setShowEditEmailModal","showEditPasswordModal","setShowEditPasswordModal","showEditComplexityModal","setShowEditComplexityModal","showDeleteSessionModal","setshowDeleteSessionModal","user","useAppSelector","getUser","products","getProducts","dispatch","useAppDispatch","data","useGetLevelInfoQuery","soundOff","getSoundOff","useSound","sounds","sprite","soundEnabled","play","deleteGameSession","operations","res","id","payload","status","switchEditAvatarModal","state","switchEditEmailModal","switchEditPasswordModal","switchEditComplexityModal","switchDeleteSessionModal","age","dateBirth","length","Number","parseInt","moment","fromNow","onClose","hiddenFileInput","useRef","isLoading","setIsLoading","fileInputState","setFileInputState","selectedFile","setSelectedFile","previewSource","setPreviewSource","changeAvatar","e","preventDefault","previewFile","FormData","append","file","reader","FileReader","readAsDataURL","onloadend","result","handleFileInputChange","target","files","value","handleClick","current","click","Text","styled","Label","Input","DownloadButton","Icon","ImUpload3","Preview","useEditAvatar","encType","onSubmit","name","ref","multiple","accept","onChange","onClick","src","alt","Button","background","borderRadius","height","width","shadow","Loader","changeEmail","values","initialValues","email","yup","shape","required","useEditEmail","validationSchema","editEmailSchema","handleSubmit","handleChange","EntryField","label","placeholder","margin","changePassword","passwords","password","newPassword","passwordAgain","min","max","oneOf","useEditPassword","editPasswordSchema","useCoefficient","changeComplexity","undefined","bank","Wrapper","useEditComplexity","editComplexitySchema","RadioButton","checked","showDialog","setShowDialog","currentIndex","setCurrentIndex","currentPrice","setCurrentPrice","halfPrice","setHalfPrice","closeDialogWindow","openDialogWindow","index","currentTarget","dataset","price","sell","toast","List","screenWidth","Item","Photo","Title","Price","ButtonWrapper","useMyItems","map","imageURL","title","bankFormatting","toFixed","IconSwitcher","size","fill","Modal","DialogWindow","successBtnText","failureBtnText","onFailure","onSuccess","text","navigate","useNavigate","queries","small","large","matches","Header","Controllers","Avatar","Name","Nickname","Value","EditBtn","useProfile","useProfileControllers","switchEditProfileModal","switchDialogModal","showDialogModal","showEditProfileModal","deleteAccount","Container","padding","_id","createdAt","dateFormatting","updatedAt","avatarURL","nickname","gender","inGame","level","EditProfile"],"sourceRoot":""}