{"version":3,"file":"static/js/871.923f7ae2.chunk.js","mappings":"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","sources":["components/Auth/AuthNav/AuthNav.styled.ts","components/Auth/AuthNav/AuthNav.tsx","components/InterfaceElements/EntryField/EntryField.styled.ts","components/InterfaceElements/EntryField/EntryField.tsx","helpers/validationSchemas/signupSchema.ts","hooks/useRegistration.ts","components/Auth/SignupForm/SignupForm.styled.ts","components/Auth/SignupForm/SignupForm.tsx","pages/SignupPage.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-bottom: 30px;\n`;\n\nexport const Item = styled.li`\n  margin-right: 30px;\n\n  :last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const AuthLink = styled(NavLink)`\n  font-weight: 900;\n  font-size: 42px;\n  text-transform: uppercase;\n\n  color: var(--brown-color);\n\n  &.active {\n    opacity: 0.7;\n  }\n`;\n","import useSound from 'use-sound';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\n\nimport { List, Item, AuthLink } from './AuthNav.styled';\n\nconst AuthNav: React.FC<{}> = () => {\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  return (\n    <List>\n      <Item>\n        <AuthLink to=\"/sign-in\" onClick={() => play({ id: 'counter_click' })}>\n          Sign in\n        </AuthLink>\n      </Item>\n      <Item>\n        <AuthLink to=\"/sign-up\" onClick={() => play({ id: 'counter_click' })}>\n          Sign up\n        </AuthLink>\n      </Item>\n    </List>\n  );\n};\n\nexport default AuthNav;\n","import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\nimport { IWrapperStyled, IInputStyled } from 'types/IEntryField';\n\nexport const Wrapper = styled.label<IWrapperStyled>`\n  display: flex;\n  flex-direction: column;\n  margin: ${({ margin }) => (margin ? margin : '')};\n`;\n\nexport const Label = styled.span`\n  font-size: 15px;\n  text-transform: uppercase;\n  color: var(--brown-color);\n\n  margin-bottom: 6px;\n`;\n\nexport const Input = styled(Field)<IInputStyled>`\n  width: ${({ width }) => (width ? width : '')};\n  height: ${({ height }) => (height ? height : '')};\n  padding: 0 15px;\n\n  font-family: inherit;\n  font-weight: 700;\n  font-size: 19px;\n\n  color: var(--brown-color);\n  background: var(--white-transparent);\n  border: 2px solid var(--brown-color);\n  border-radius: 8px;\n  outline: none;\n\n  :focus {\n    border: 2px solid rgba(105, 74, 4, 0.7);\n  }\n\n  ::placeholder {\n    font-size: 19px;\n    color: var(--brown-color);\n    opacity: 0.5;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  margin-top: 5px;\n  color: red;\n`;\n","import { IEntryFieldState } from 'types/IEntryField';\nimport { Wrapper, Label, Input, Error } from './EntryField.styled';\n\nconst EntryField: React.FC<IEntryFieldState> = ({\n  label,\n  type,\n  name,\n  value,\n  onChange,\n  required,\n  placeholder,\n  width,\n  height,\n  margin,\n}) => {\n  return (\n    <Wrapper margin={margin}>\n      <Label>{label}</Label>\n      <Input\n        type={type}\n        name={name}\n        value={value}\n        onChange={onChange}\n        required={required}\n        placeholder={placeholder}\n        width={width}\n        height={height}\n      />\n      <Error name={name} component=\"div\" />\n    </Wrapper>\n  );\n};\n\nexport default EntryField;\n","import * as yup from 'yup';\n\nconst signupSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'The minimum name length must be 3 characters.')\n    .max(15, 'The maximum name length should not exceed 15 characters.')\n    .required('The name field is required and cannot be empty.'),\n  email: yup\n    .string()\n    .email('The email address must be valid and existing.')\n    .required('The email field is required and cannot be empty.'),\n  password: yup\n    .string()\n    .min(6, 'The minimum password length must be 6 characters.')\n    .max(12, 'The maximum password length must not exceed 12 characters.')\n    .required('The password field is required and cannot be empty.'),\n  passwordAgain: yup\n    .string()\n    .oneOf([yup.ref('password')], 'Passwords must match'),\n});\n\nexport default signupSchema;\n","import { useAppDispatch } from 'hooks/useAppDispatch';\nimport { useNavigate } from 'react-router-dom';\nimport operations from 'redux/user/userOperations';\nimport useSound from 'use-sound';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { toast } from 'react-toastify';\n\nimport { ISignupData } from 'types/IProfile';\nimport { IAuthRes } from 'types/IUserRessponse';\nimport signupSchema from 'helpers/validationSchemas/signupSchema';\n\nconst useRegistration = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    passwordAgain: '',\n  };\n\n  const registration = async (values: ISignupData) => {\n    const user = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n\n    const res = await dispatch(operations.signup(user));\n\n    (res.payload as IAuthRes).status === 'ok'\n      ? navigate('/welcome')\n      : toast.warning('Sorry something went wrong... Please try again.');\n  };\n\n  return { signupSchema, initialValues, registration, play };\n};\n\nexport default useRegistration;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Tuple = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 30px;\n`;\n\nexport const Text = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n\n  color: var(--brown-color);\n\n  margin-top: 30px;\n`;\n\nexport const PolicyLink = styled(Link)`\n  color: var(--green-color);\n`;\n","import useRegistration from 'hooks/useRegistration';\n\nimport { Formik, Form } from 'formik';\nimport EntryField from 'components/InterfaceElements/EntryField';\nimport Button from 'components/InterfaceElements/Button';\nimport Container from 'components/InterfaceElements/Container';\nimport AuthNav from '../AuthNav';\n\nimport { Tuple, Text, PolicyLink } from './SignupForm.styled';\n\nconst SignupForm: React.FC<{}> = () => {\n  const { initialValues, registration, signupSchema, play } = useRegistration();\n\n  return (\n    <Container\n      type=\"transparent\"\n      alignItems=\"center\"\n      width=\"856px\"\n      padding=\"50px\"\n    >\n      <Formik\n        initialValues={initialValues}\n        onSubmit={registration}\n        validationSchema={signupSchema}\n      >\n        {({ values, handleSubmit, handleChange }) => (\n          <Form onSubmit={handleSubmit}>\n            <AuthNav />\n\n            <Tuple>\n              <EntryField\n                label=\"name\"\n                type=\"text\"\n                name=\"name\"\n                value={values.name}\n                onChange={handleChange}\n                placeholder=\"Enter your name\"\n                required={true}\n                height=\"50px\"\n                width=\"363px\"\n              />\n\n              <EntryField\n                label=\"email\"\n                type=\"email\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                placeholder=\"Enter your e-mail\"\n                required={true}\n                height=\"50px\"\n                width=\"363px\"\n              />\n            </Tuple>\n\n            <Tuple>\n              <EntryField\n                label=\"password\"\n                type=\"password\"\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                required={true}\n                height=\"50px\"\n                width=\"363px\"\n              />\n\n              <EntryField\n                label=\"password again\"\n                type=\"password\"\n                name=\"passwordAgain\"\n                value={values.passwordAgain}\n                onChange={handleChange}\n                required={true}\n                height=\"50px\"\n                width=\"363px\"\n              />\n            </Tuple>\n\n            <Button\n              type=\"submit\"\n              background=\"green\"\n              width=\"756px\"\n              height=\"60px\"\n              borderRadius=\"50px\"\n              shadow\n              onClick={() => play({ id: 'counter_click' })}\n            >\n              Sign up\n            </Button>\n          </Form>\n        )}\n      </Formik>\n\n      <Text>\n        By registering on the site, you agree to the{' '}\n        <PolicyLink to=\"/terms-and-conditions\">Terms and Conditions</PolicyLink>{' '}\n        and <PolicyLink to=\"/privacy-policy\">Privacy Policy</PolicyLink>\n      </Text>\n    </Container>\n  );\n};\n\nexport default SignupForm;\n","import SignupForm from 'components/Auth/SignupForm';\n\nconst SignupPage: React.FC<{}> = () => {\n  return <SignupForm />;\n};\n\nexport default SignupPage;\n"],"names":["List","styled","Item","AuthLink","NavLink","soundOff","useAppSelector","getSoundOff","useSound","sounds","sprite","soundEnabled","play","to","onClick","id","Wrapper","margin","Label","Input","Field","width","height","Error","ErrorMessage","label","type","name","value","onChange","required","placeholder","component","yup","shape","min","max","email","password","passwordAgain","oneOf","dispatch","useAppDispatch","navigate","useNavigate","registration","values","user","operations","payload","status","toast","signupSchema","initialValues","Tuple","Text","PolicyLink","Link","useRegistration","Container","alignItems","padding","onSubmit","validationSchema","handleSubmit","handleChange","AuthNav","EntryField","Button","background","borderRadius","shadow"],"sourceRoot":""}