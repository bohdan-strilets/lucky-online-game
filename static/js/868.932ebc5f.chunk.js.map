{"version":3,"file":"static/js/868.932ebc5f.chunk.js","mappings":"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","sources":["components/Auth/AuthNav/AuthNav.styled.ts","components/Auth/AuthNav/AuthNav.tsx","helpers/validationSchemas/signupSchema.ts","hooks/useRegistration.ts","components/Auth/SignupForm/SignupForm.styled.ts","components/Auth/SignupForm/Responsiv/Mobile.tsx","components/Auth/SignupForm/Responsiv/Tablet.tsx","components/Auth/SignupForm/Responsiv/Desktop.tsx","components/Auth/SignupForm/SignupForm.tsx","pages/SignupPage.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-bottom: 30px;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    flex-direction: row;\n    justify-content: center;\n  }\n`;\n\nexport const Item = styled.li`\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    margin-right: 30px;\n\n    :last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const AuthLink = styled(NavLink)`\n  font-weight: 900;\n  font-size: 30px;\n  text-transform: uppercase;\n\n  color: var(--brown-color);\n\n  &.active {\n    opacity: 0.7;\n  }\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    font-size: 42px;\n  }\n`;\n","import useSound from 'use-sound';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\n\nimport { List, Item, AuthLink } from './AuthNav.styled';\n\nconst AuthNav: React.FC<{}> = () => {\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  return (\n    <List>\n      <Item>\n        <AuthLink to=\"/sign-in\" onClick={() => play({ id: 'counter_click' })}>\n          Sign in\n        </AuthLink>\n      </Item>\n      <Item>\n        <AuthLink to=\"/sign-up\" onClick={() => play({ id: 'counter_click' })}>\n          Sign up\n        </AuthLink>\n      </Item>\n    </List>\n  );\n};\n\nexport default AuthNav;\n","import * as yup from 'yup';\n\nconst signupSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'The minimum name length must be 3 characters.')\n    .max(15, 'The maximum name length should not exceed 15 characters.')\n    .required('The name field is required and cannot be empty.'),\n  email: yup\n    .string()\n    .email('The email address must be valid and existing.')\n    .required('The email field is required and cannot be empty.'),\n  password: yup\n    .string()\n    .min(6, 'The minimum password length must be 6 characters.')\n    .max(12, 'The maximum password length must not exceed 12 characters.')\n    .required('The password field is required and cannot be empty.'),\n  passwordAgain: yup\n    .string()\n    .oneOf([yup.ref('password')], 'Passwords must match'),\n});\n\nexport default signupSchema;\n","import { useAppDispatch } from 'hooks/useAppDispatch';\nimport { useNavigate } from 'react-router-dom';\nimport operations from 'redux/user/userOperations';\nimport useSound from 'use-sound';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { toast } from 'react-toastify';\n\nimport { ISignupData } from 'types/IProfile';\nimport { IAuthRes } from 'types/IUserRessponse';\nimport signupSchema from 'helpers/validationSchemas/signupSchema';\n\nconst useRegistration = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    passwordAgain: '',\n  };\n\n  const registration = async (values: ISignupData) => {\n    const user = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n\n    const res = await dispatch(operations.signup(user));\n\n    (res.payload as IAuthRes).status === 'ok'\n      ? navigate('/welcome')\n      : toast.warning('Sorry something went wrong... Please try again.');\n  };\n\n  return { signupSchema, initialValues, registration, play };\n};\n\nexport default useRegistration;\n","import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nimport { Link } from 'react-router-dom';\n\nexport const Tuple = styled.div`\n  margin-bottom: 30px;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const Text = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n\n  color: var(--brown-color);\n\n  margin-top: 30px;\n`;\n\nexport const PolicyLink = styled(Link)`\n  color: var(--green-color);\n`;\n","import useRegistration from 'hooks/useRegistration';\n\nimport { Formik, Form } from 'formik';\nimport EntryField from 'components/InterfaceElements/EntryField';\nimport Button from 'components/InterfaceElements/Button';\nimport Container from 'components/InterfaceElements/Container';\nimport AuthNav from '../../AuthNav';\n\nimport { Tuple, Text, PolicyLink } from '../SignupForm.styled';\n\nconst Mobile: React.FC<{}> = () => {\n  const { initialValues, registration, signupSchema, play } = useRegistration();\n\n  return (\n    <Container\n      type=\"transparent\"\n      alignItems=\"center\"\n      width=\"300px\"\n      padding=\"50px\"\n    >\n      <Formik\n        initialValues={initialValues}\n        onSubmit={registration}\n        validationSchema={signupSchema}\n      >\n        {({ values, handleSubmit, handleChange }) => (\n          <Form onSubmit={handleSubmit}>\n            <AuthNav />\n\n            <Tuple>\n              <EntryField\n                label=\"name\"\n                type=\"text\"\n                name=\"name\"\n                value={values.name}\n                onChange={handleChange}\n                placeholder=\"Enter your name\"\n                required={true}\n                height=\"50px\"\n                width=\"280px\"\n                margin=\"0 0 25px 0\"\n              />\n\n              <EntryField\n                label=\"email\"\n                type=\"email\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                placeholder=\"Enter your e-mail\"\n                required={true}\n                height=\"50px\"\n                width=\"280px\"\n                margin=\"0 0 25px 0\"\n              />\n            </Tuple>\n\n            <Tuple>\n              <EntryField\n                label=\"password\"\n                type=\"password\"\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                required={true}\n                height=\"50px\"\n                width=\"280px\"\n                margin=\"0 0 25px 0\"\n              />\n\n              <EntryField\n                label=\"password again\"\n                type=\"password\"\n                name=\"passwordAgain\"\n                value={values.passwordAgain}\n                onChange={handleChange}\n                required={true}\n                height=\"50px\"\n                width=\"280px\"\n              />\n            </Tuple>\n\n            <Button\n              type=\"submit\"\n              background=\"green\"\n              width=\"100%\"\n              height=\"60px\"\n              borderRadius=\"50px\"\n              shadow\n              onClick={() => play({ id: 'counter_click' })}\n            >\n              Sign up\n            </Button>\n          </Form>\n        )}\n      </Formik>\n\n      <Text>\n        By registering on the site, you agree to the{' '}\n        <PolicyLink to=\"/terms-and-conditions\">Terms and Conditions</PolicyLink>{' '}\n        and <PolicyLink to=\"/privacy-policy\">Privacy Policy</PolicyLink>\n      </Text>\n    </Container>\n  );\n};\n\nexport default Mobile;\n","import useRegistration from 'hooks/useRegistration';\n\nimport { Formik, Form } from 'formik';\nimport EntryField from 'components/InterfaceElements/EntryField';\nimport Button from 'components/InterfaceElements/Button';\nimport Container from 'components/InterfaceElements/Container';\nimport AuthNav from '../../AuthNav';\n\nimport { Tuple, Text, PolicyLink } from '../SignupForm.styled';\n\nconst Tablet: React.FC<{}> = () => {\n  const { initialValues, registration, signupSchema, play } = useRegistration();\n\n  return (\n    <Container\n      type=\"transparent\"\n      alignItems=\"center\"\n      width=\"560px\"\n      padding=\"50px\"\n    >\n      <Formik\n        initialValues={initialValues}\n        onSubmit={registration}\n        validationSchema={signupSchema}\n      >\n        {({ values, handleSubmit, handleChange }) => (\n          <Form onSubmit={handleSubmit}>\n            <AuthNav />\n\n            <Tuple>\n              <EntryField\n                label=\"name\"\n                type=\"text\"\n                name=\"name\"\n                value={values.name}\n                onChange={handleChange}\n                placeholder=\"Enter your name\"\n                required={true}\n                height=\"50px\"\n                width=\"250px\"\n              />\n\n              <EntryField\n                label=\"email\"\n                type=\"email\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                placeholder=\"Enter your e-mail\"\n                required={true}\n                height=\"50px\"\n                width=\"250px\"\n              />\n            </Tuple>\n\n            <Tuple>\n              <EntryField\n                label=\"password\"\n                type=\"password\"\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                required={true}\n                height=\"50px\"\n                width=\"250px\"\n              />\n\n              <EntryField\n                label=\"password again\"\n                type=\"password\"\n                name=\"passwordAgain\"\n                value={values.passwordAgain}\n                onChange={handleChange}\n                required={true}\n                height=\"50px\"\n                width=\"250px\"\n              />\n            </Tuple>\n\n            <Button\n              type=\"submit\"\n              background=\"green\"\n              width=\"520px\"\n              height=\"60px\"\n              borderRadius=\"50px\"\n              shadow\n              onClick={() => play({ id: 'counter_click' })}\n            >\n              Sign up\n            </Button>\n          </Form>\n        )}\n      </Formik>\n\n      <Text>\n        By registering on the site, you agree to the{' '}\n        <PolicyLink to=\"/terms-and-conditions\">Terms and Conditions</PolicyLink>{' '}\n        and <PolicyLink to=\"/privacy-policy\">Privacy Policy</PolicyLink>\n      </Text>\n    </Container>\n  );\n};\n\nexport default Tablet;\n","import useRegistration from 'hooks/useRegistration';\n\nimport { Formik, Form } from 'formik';\nimport EntryField from 'components/InterfaceElements/EntryField';\nimport Button from 'components/InterfaceElements/Button';\nimport Container from 'components/InterfaceElements/Container';\nimport AuthNav from '../../AuthNav';\n\nimport { Tuple, Text, PolicyLink } from '../SignupForm.styled';\n\nconst Desktop: React.FC<{}> = () => {\n  const { initialValues, registration, signupSchema, play } = useRegistration();\n\n  return (\n    <Container\n      type=\"transparent\"\n      alignItems=\"center\"\n      width=\"856px\"\n      padding=\"50px\"\n    >\n      <Formik\n        initialValues={initialValues}\n        onSubmit={registration}\n        validationSchema={signupSchema}\n      >\n        {({ values, handleSubmit, handleChange }) => (\n          <Form onSubmit={handleSubmit}>\n            <AuthNav />\n\n            <Tuple>\n              <EntryField\n                label=\"name\"\n                type=\"text\"\n                name=\"name\"\n                value={values.name}\n                onChange={handleChange}\n                placeholder=\"Enter your name\"\n                required={true}\n                height=\"50px\"\n                width=\"363px\"\n              />\n\n              <EntryField\n                label=\"email\"\n                type=\"email\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                placeholder=\"Enter your e-mail\"\n                required={true}\n                height=\"50px\"\n                width=\"363px\"\n              />\n            </Tuple>\n\n            <Tuple>\n              <EntryField\n                label=\"password\"\n                type=\"password\"\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                required={true}\n                height=\"50px\"\n                width=\"363px\"\n              />\n\n              <EntryField\n                label=\"password again\"\n                type=\"password\"\n                name=\"passwordAgain\"\n                value={values.passwordAgain}\n                onChange={handleChange}\n                required={true}\n                height=\"50px\"\n                width=\"363px\"\n              />\n            </Tuple>\n\n            <Button\n              type=\"submit\"\n              background=\"green\"\n              width=\"756px\"\n              height=\"60px\"\n              borderRadius=\"50px\"\n              shadow\n              onClick={() => play({ id: 'counter_click' })}\n            >\n              Sign up\n            </Button>\n          </Form>\n        )}\n      </Formik>\n\n      <Text>\n        By registering on the site, you agree to the{' '}\n        <PolicyLink to=\"/terms-and-conditions\">Terms and Conditions</PolicyLink>{' '}\n        and <PolicyLink to=\"/privacy-policy\">Privacy Policy</PolicyLink>\n      </Text>\n    </Container>\n  );\n};\n\nexport default Desktop;\n","import Media from 'react-media';\nimport screenWidth from 'helpers/screenWidth';\n\nimport Mobile from './Responsiv/Mobile';\nimport Tablet from './Responsiv/Tablet';\nimport Desktop from './Responsiv/Desktop';\n\nconst SignupForm: React.FC<{}> = () => {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 767px)',\n        medium: `(min-width: ${screenWidth.tablet}) and (max-width: 1439px)`,\n        large: `(min-width: ${screenWidth.desktop})`,\n      }}\n    >\n      {matches => (\n        <>\n          {matches.small && <Mobile />}\n          {matches.medium && <Tablet />}\n          {matches.large && <Desktop />}\n        </>\n      )}\n    </Media>\n  );\n};\n\nexport default SignupForm;\n","import SignupForm from 'components/Auth/SignupForm';\n\nconst SignupPage: React.FC<{}> = () => {\n  return <SignupForm />;\n};\n\nexport default SignupPage;\n"],"names":["List","styled","screenWidth","Item","AuthLink","NavLink","soundOff","useAppSelector","getSoundOff","useSound","sounds","sprite","soundEnabled","play","to","onClick","id","yup","shape","name","min","max","required","email","password","passwordAgain","oneOf","dispatch","useAppDispatch","navigate","useNavigate","registration","values","user","operations","payload","status","toast","signupSchema","initialValues","Tuple","Text","PolicyLink","Link","useRegistration","Container","type","alignItems","width","padding","onSubmit","validationSchema","handleSubmit","handleChange","AuthNav","EntryField","label","value","onChange","placeholder","height","margin","Button","background","borderRadius","shadow","queries","small","medium","large","matches"],"sourceRoot":""}