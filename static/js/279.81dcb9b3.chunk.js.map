{"version":3,"file":"static/js/279.81dcb9b3.chunk.js","mappings":"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","sources":["helpers/betTypes.ts","hooks/useCoefficient.ts","helpers/randomNumberGenerator.ts","hooks/useMakeMove.ts","hooks/useGame.ts","hooks/useCounter.ts","components/InterfaceElements/Counter/Counter.styled.ts","components/InterfaceElements/Counter/Counter.tsx","components/Game/GameWheel/GameWheel.styled.ts","components/Game/GameWheel/GameWheel.tsx","components/Modal/Success/Success.styled.ts","components/Modal/Success/Success.tsx","components/Game/Game.styled.ts","components/Game/Responsiv/Mobile.tsx","components/Game/Responsiv/Tablet.tsx","components/Game/Responsiv/Desktop.tsx","components/Game/Game.tsx","pages/GamePage.tsx"],"sourcesContent":["const types = {\n  ZERO: 'zero',\n  NUMBER: 'number',\n  HIGH: 'high',\n  LOW: 'low',\n  EVEN: 'even',\n  ODD: 'odd',\n  BLACK: 'black',\n  RED: 'red',\n  DOZEN_1: 'dozen-1',\n  DOZEN_2: 'dozen-2',\n  DOZEN_3: 'dozen-3',\n  COLUMN_1: 'column-1',\n  COLUMN_2: 'column-2',\n  COLUMN_3: 'column-3',\n};\n\nexport default types;\n","import types from 'helpers/betTypes';\n\nconst useCoefficient = () => {\n  const coefficientInfo = {\n    low: {\n      type: 'low',\n      coefficient: {\n        number: 5.7,\n        bottomRow: 4.2,\n        oneFromTwo: 3.2,\n      },\n      initialFunds: 3200,\n      experience: 30,\n    },\n    medium: {\n      type: 'medium',\n      coefficient: {\n        number: 3.2,\n        bottomRow: 2.1,\n        oneFromTwo: 1.7,\n      },\n      initialFunds: 1600,\n      experience: 20,\n    },\n    high: {\n      type: 'high',\n      coefficient: {\n        number: 1.9,\n        bottomRow: 1.5,\n        oneFromTwo: 1.3,\n      },\n      initialFunds: 700,\n      experience: 10,\n    },\n  };\n\n  const getCoefficient = (\n    complexity: string | null | undefined,\n    type: string | null,\n  ) => {\n    switch (complexity) {\n      case coefficientInfo.low.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.low.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.low.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.low.coefficient.bottomRow;\n        }\n        return 0;\n\n      case coefficientInfo.medium.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.medium.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.medium.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.medium.coefficient.bottomRow;\n        }\n        return 0;\n\n      case coefficientInfo.high.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.high.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.high.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.high.coefficient.bottomRow;\n        }\n        return 0;\n\n      default:\n        return 0;\n    }\n  };\n\n  return {\n    coefficientInfo,\n    getCoefficient,\n  };\n};\n\nexport default useCoefficient;\n","const randomNumberGenerator = () => {\n  const min = 0;\n  const max = 36;\n\n  const number = min + Math.random() * (max + 1 - min);\n  return Math.floor(number);\n};\n\nexport default randomNumberGenerator;\n","import { useState } from 'react';\nimport randomNumberGenerator from 'helpers/randomNumberGenerator';\nimport { useChangeExperienceMutation } from 'redux/level/levelApi';\nimport useCoefficient from './useCoefficient';\nimport useExperience from './useExperience';\nimport { useAppSelector } from './useAppSelector';\nimport { getUser } from 'redux/user/userSelectors';\nimport numbers from 'data/numbers.json';\nimport { useAppDispatch } from './useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport { useGetLevelInfoQuery } from 'redux/level/levelApi';\nimport betsOperations from 'redux/bets/betsOperations';\nimport types from 'helpers/betTypes';\nimport useSound from 'use-sound';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { IChangeBetRes } from 'types/IBetsApi';\n\nconst useMakeMove = () => {\n  const dispatch = useAppDispatch();\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  const [changeExperience] = useChangeExperienceMutation();\n  const { coefficientInfo } = useCoefficient();\n  const { complexity } = useAppSelector(getUser);\n  const { updateLevel, updateRank } = useExperience();\n  const { data: levelInfo } = useGetLevelInfoQuery();\n\n  const [randomNumber, setRandomNumber] = useState(() =>\n    randomNumberGenerator(),\n  );\n\n  const getWinner = async (type: string, number: number, id: string) => {\n    let num = null;\n    let experience = null;\n\n    switch (type) {\n      case types.ZERO:\n        setRandomNumber(randomNumberGenerator());\n\n        if (number === randomNumber) {\n          if (complexity) {\n            experience =\n              coefficientInfo[complexity].coefficient.number *\n              coefficientInfo[complexity].experience;\n            changeExperience({ experience });\n          }\n\n          const data = await dispatch(\n            betsOperations.changeBet({ betId: id, isWon: true }),\n          );\n\n          if (levelInfo) {\n            updateLevel({\n              currentLevel: levelInfo?.level.level,\n              currentExperience: levelInfo?.level.experience,\n            });\n            updateRank(levelInfo.level.level);\n          }\n\n          if (data) {\n            dispatch(\n              operations.changeBank({\n                bank: (data.payload as IChangeBetRes).bet.winningAmount,\n              }),\n            );\n          }\n\n          play({ id: 'sound_victory' });\n          return {\n            isWon: true,\n            randomNumber,\n            money: (data.payload as IChangeBetRes).bet.winningAmount,\n            experience,\n          };\n        }\n        return { isWon: false, randomNumber };\n\n      case types.NUMBER:\n        setRandomNumber(randomNumberGenerator());\n\n        if (number === randomNumber) {\n          if (complexity) {\n            experience =\n              coefficientInfo[complexity].coefficient.number *\n              coefficientInfo[complexity].experience;\n            changeExperience({ experience });\n          }\n\n          const data = await dispatch(\n            betsOperations.changeBet({ betId: id, isWon: true }),\n          );\n\n          if (levelInfo) {\n            updateLevel({\n              currentLevel: levelInfo?.level.level,\n              currentExperience: levelInfo?.level.experience,\n            });\n            updateRank(levelInfo.level.level);\n          }\n\n          if (data) {\n            dispatch(\n              operations.changeBank({\n                bank: (data.payload as IChangeBetRes).bet.winningAmount,\n              }),\n            );\n          }\n\n          play({ id: 'sound_victory' });\n          return {\n            isWon: true,\n            randomNumber,\n            money: (data.payload as IChangeBetRes).bet.winningAmount,\n            experience,\n          };\n        }\n        return { isWon: false, randomNumber };\n\n      case types.HIGH:\n        setRandomNumber(randomNumberGenerator());\n        num = numbers.find(item => item.number === randomNumber);\n\n        if (num?.high) {\n          if (complexity) {\n            experience =\n              coefficientInfo[complexity].coefficient.oneFromTwo *\n              coefficientInfo[complexity].experience;\n            changeExperience({ experience });\n          }\n\n          const data = await dispatch(\n            betsOperations.changeBet({ betId: id, isWon: true }),\n          );\n\n          if (levelInfo) {\n            updateLevel({\n              currentLevel: levelInfo?.level.level,\n              currentExperience: levelInfo?.level.experience,\n            });\n            updateRank(levelInfo.level.level);\n          }\n\n          if (data) {\n            dispatch(\n              operations.changeBank({\n                bank: (data.payload as IChangeBetRes).bet.winningAmount,\n              }),\n            );\n          }\n\n          play({ id: 'sound_victory' });\n          return {\n            isWon: true,\n            randomNumber,\n            money: (data.payload as IChangeBetRes).bet.winningAmount,\n            experience,\n          };\n        }\n        return { isWon: false, randomNumber };\n\n      case types.LOW:\n        setRandomNumber(randomNumberGenerator());\n        num = numbers.find(item => item.number === randomNumber);\n\n        if (num?.low) {\n          if (complexity) {\n            experience =\n              coefficientInfo[complexity].coefficient.oneFromTwo *\n              coefficientInfo[complexity].experience;\n            changeExperience({ experience });\n          }\n\n          const data = await dispatch(\n            betsOperations.changeBet({ betId: id, isWon: true }),\n          );\n\n          if (levelInfo) {\n            updateLevel({\n              currentLevel: levelInfo?.level.level,\n              currentExperience: levelInfo?.level.experience,\n            });\n            updateRank(levelInfo.level.level);\n          }\n\n          if (data) {\n            dispatch(\n              operations.changeBank({\n                bank: (data.payload as IChangeBetRes).bet.winningAmount,\n              }),\n            );\n          }\n\n          play({ id: 'sound_victory' });\n          return {\n            isWon: true,\n            randomNumber,\n            money: (data.payload as IChangeBetRes).bet.winningAmount,\n            experience,\n          };\n        }\n        return { isWon: false, randomNumber };\n\n      case types.EVEN:\n        setRandomNumber(randomNumberGenerator());\n        num = numbers.find(item => item.number === randomNumber);\n\n        if (num?.even) {\n          if (complexity) {\n            experience =\n              coefficientInfo[complexity].coefficient.oneFromTwo *\n              coefficientInfo[complexity].experience;\n            changeExperience({ experience });\n          }\n\n          const data = await dispatch(\n            betsOperations.changeBet({ betId: id, isWon: true }),\n          );\n\n          if (levelInfo) {\n            updateLevel({\n              currentLevel: levelInfo?.level.level,\n              currentExperience: levelInfo?.level.experience,\n            });\n            updateRank(levelInfo.level.level);\n          }\n\n          if (data) {\n            dispatch(\n              operations.changeBank({\n                bank: (data.payload as IChangeBetRes).bet.winningAmount,\n              }),\n            );\n          }\n\n          play({ id: 'sound_victory' });\n          return {\n            isWon: true,\n            randomNumber,\n            money: (data.payload as IChangeBetRes).bet.winningAmount,\n            experience,\n          };\n        }\n        return { isWon: false, randomNumber };\n\n      case types.ODD:\n        setRandomNumber(randomNumberGenerator());\n        num = numbers.find(item => item.number === randomNumber);\n\n        if (num?.odd) {\n          if (complexity) {\n            experience =\n              coefficientInfo[complexity].coefficient.oneFromTwo *\n              coefficientInfo[complexity].experience;\n            changeExperience({ experience });\n          }\n\n          const data = await dispatch(\n            betsOperations.changeBet({ betId: id, isWon: true }),\n          );\n\n          if (levelInfo) {\n            updateLevel({\n              currentLevel: levelInfo?.level.level,\n              currentExperience: levelInfo?.level.experience,\n            });\n            updateRank(levelInfo.level.level);\n          }\n\n          if (data) {\n            dispatch(\n              operations.changeBank({\n                bank: (data.payload as IChangeBetRes).bet.winningAmount,\n              }),\n            );\n          }\n\n          play({ id: 'sound_victory' });\n          return {\n            isWon: true,\n            randomNumber,\n            money: (data.payload as IChangeBetRes).bet.winningAmount,\n            experience,\n          };\n        }\n        return { isWon: false, randomNumber };\n\n      case types.BLACK:\n        setRandomNumber(randomNumberGenerator());\n        num = numbers.find(item => item.number === randomNumber);\n\n        if (num?.color === 'black') {\n          if (complexity) {\n            experience =\n              coefficientInfo[complexity].coefficient.oneFromTwo *\n              coefficientInfo[complexity].experience;\n            changeExperience({ experience });\n          }\n\n          const data = await dispatch(\n            betsOperations.changeBet({ betId: id, isWon: true }),\n          );\n\n          if (levelInfo) {\n            updateLevel({\n              currentLevel: levelInfo?.level.level,\n              currentExperience: levelInfo?.level.experience,\n            });\n            updateRank(levelInfo.level.level);\n          }\n\n          if (data) {\n            dispatch(\n              operations.changeBank({\n                bank: (data.payload as IChangeBetRes).bet.winningAmount,\n              }),\n            );\n          }\n\n          play({ id: 'sound_victory' });\n          return {\n            isWon: true,\n            randomNumber,\n            money: (data.payload as IChangeBetRes).bet.winningAmount,\n            experience,\n          };\n        }\n        return { isWon: false, randomNumber };\n\n      case types.RED:\n        setRandomNumber(randomNumberGenerator());\n        num = numbers.find(item => item.number === randomNumber);\n\n        if (num?.color === 'red') {\n          if (complexity) {\n            experience =\n              coefficientInfo[complexity].coefficient.oneFromTwo *\n              coefficientInfo[complexity].experience;\n            changeExperience({ experience });\n          }\n\n          const data = await dispatch(\n            betsOperations.changeBet({ betId: id, isWon: true }),\n          );\n\n          if (levelInfo) {\n            updateLevel({\n              currentLevel: levelInfo?.level.level,\n              currentExperience: levelInfo?.level.experience,\n            });\n            updateRank(levelInfo.level.level);\n          }\n\n          if (data) {\n            dispatch(\n              operations.changeBank({\n                bank: (data.payload as IChangeBetRes).bet.winningAmount,\n              }),\n            );\n          }\n\n          play({ id: 'sound_victory' });\n          return {\n            isWon: true,\n            randomNumber,\n            money: (data.payload as IChangeBetRes).bet.winningAmount,\n            experience,\n          };\n        }\n        return { isWon: false, randomNumber };\n\n      case types.DOZEN_1:\n        setRandomNumber(randomNumberGenerator());\n        num = numbers.find(item => item.number === randomNumber);\n\n        if (num?.['dozen-1']) {\n          if (complexity) {\n            experience =\n              coefficientInfo[complexity].coefficient.bottomRow *\n              coefficientInfo[complexity].experience;\n            changeExperience({ experience });\n          }\n\n          const data = await dispatch(\n            betsOperations.changeBet({ betId: id, isWon: true }),\n          );\n\n          if (levelInfo) {\n            updateLevel({\n              currentLevel: levelInfo?.level.level,\n              currentExperience: levelInfo?.level.experience,\n            });\n            updateRank(levelInfo.level.level);\n          }\n\n          if (data) {\n            dispatch(\n              operations.changeBank({\n                bank: (data.payload as IChangeBetRes).bet.winningAmount,\n              }),\n            );\n          }\n\n          play({ id: 'sound_victory' });\n          return {\n            isWon: true,\n            randomNumber,\n            money: (data.payload as IChangeBetRes).bet.winningAmount,\n            experience,\n          };\n        }\n        return { isWon: false, randomNumber };\n\n      case types.DOZEN_2:\n        setRandomNumber(randomNumberGenerator());\n        num = numbers.find(item => item.number === randomNumber);\n\n        if (num?.['dozen-2']) {\n          if (complexity) {\n            experience =\n              coefficientInfo[complexity].coefficient.bottomRow *\n              coefficientInfo[complexity].experience;\n            changeExperience({ experience });\n          }\n\n          const data = await dispatch(\n            betsOperations.changeBet({ betId: id, isWon: true }),\n          );\n\n          if (levelInfo) {\n            updateLevel({\n              currentLevel: levelInfo?.level.level,\n              currentExperience: levelInfo?.level.experience,\n            });\n            updateRank(levelInfo.level.level);\n          }\n\n          if (data) {\n            dispatch(\n              operations.changeBank({\n                bank: (data.payload as IChangeBetRes).bet.winningAmount,\n              }),\n            );\n          }\n\n          play({ id: 'sound_victory' });\n          return {\n            isWon: true,\n            randomNumber,\n            money: (data.payload as IChangeBetRes).bet.winningAmount,\n            experience,\n          };\n        }\n        return { isWon: false, randomNumber };\n\n      case types.DOZEN_3:\n        setRandomNumber(randomNumberGenerator());\n        num = numbers.find(item => item.number === randomNumber);\n\n        if (num?.['dozen-3']) {\n          if (complexity) {\n            experience =\n              coefficientInfo[complexity].coefficient.bottomRow *\n              coefficientInfo[complexity].experience;\n            changeExperience({ experience });\n          }\n\n          const data = await dispatch(\n            betsOperations.changeBet({ betId: id, isWon: true }),\n          );\n\n          if (levelInfo) {\n            updateLevel({\n              currentLevel: levelInfo?.level.level,\n              currentExperience: levelInfo?.level.experience,\n            });\n            updateRank(levelInfo.level.level);\n          }\n\n          if (data) {\n            dispatch(\n              operations.changeBank({\n                bank: (data.payload as IChangeBetRes).bet.winningAmount,\n              }),\n            );\n          }\n\n          play({ id: 'sound_victory' });\n          return {\n            isWon: true,\n            randomNumber,\n            money: (data.payload as IChangeBetRes).bet.winningAmount,\n            experience,\n          };\n        }\n        return { isWon: false, randomNumber };\n\n      case types.COLUMN_1:\n        setRandomNumber(randomNumberGenerator());\n        num = numbers.find(item => item.number === randomNumber);\n\n        if (num?.['column-1']) {\n          if (complexity) {\n            experience =\n              coefficientInfo[complexity].coefficient.bottomRow *\n              coefficientInfo[complexity].experience;\n            changeExperience({ experience });\n          }\n\n          const data = await dispatch(\n            betsOperations.changeBet({ betId: id, isWon: true }),\n          );\n\n          if (levelInfo) {\n            updateLevel({\n              currentLevel: levelInfo?.level.level,\n              currentExperience: levelInfo?.level.experience,\n            });\n            updateRank(levelInfo.level.level);\n          }\n\n          if (data) {\n            dispatch(\n              operations.changeBank({\n                bank: (data.payload as IChangeBetRes).bet.winningAmount,\n              }),\n            );\n          }\n\n          play({ id: 'sound_victory' });\n          return {\n            isWon: true,\n            randomNumber,\n            money: (data.payload as IChangeBetRes).bet.winningAmount,\n            experience,\n          };\n        }\n        return { isWon: false, randomNumber };\n\n      case types.COLUMN_2:\n        setRandomNumber(randomNumberGenerator());\n        num = numbers.find(item => item.number === randomNumber);\n\n        if (num?.['column-2']) {\n          if (complexity) {\n            experience =\n              coefficientInfo[complexity].coefficient.bottomRow *\n              coefficientInfo[complexity].experience;\n            changeExperience({ experience });\n          }\n\n          const data = await dispatch(\n            betsOperations.changeBet({ betId: id, isWon: true }),\n          );\n\n          if (levelInfo) {\n            updateLevel({\n              currentLevel: levelInfo?.level.level,\n              currentExperience: levelInfo?.level.experience,\n            });\n            updateRank(levelInfo.level.level);\n          }\n\n          if (data) {\n            dispatch(\n              operations.changeBank({\n                bank: (data.payload as IChangeBetRes).bet.winningAmount,\n              }),\n            );\n          }\n\n          play({ id: 'sound_victory' });\n          return {\n            isWon: true,\n            randomNumber,\n            money: (data.payload as IChangeBetRes).bet.winningAmount,\n            experience,\n          };\n        }\n        return { isWon: false, randomNumber };\n\n      case types.COLUMN_3:\n        setRandomNumber(randomNumberGenerator());\n        num = numbers.find(item => item.number === randomNumber);\n\n        if (num?.['column-3']) {\n          if (complexity) {\n            experience =\n              coefficientInfo[complexity].coefficient.bottomRow *\n              coefficientInfo[complexity].experience;\n            changeExperience({ experience });\n          }\n\n          const data = await dispatch(\n            betsOperations.changeBet({ betId: id, isWon: true }),\n          );\n\n          if (levelInfo) {\n            updateLevel({\n              currentLevel: levelInfo?.level.level,\n              currentExperience: levelInfo?.level.experience,\n            });\n            updateRank(levelInfo.level.level);\n          }\n\n          if (data) {\n            dispatch(\n              operations.changeBank({\n                bank: (data.payload as IChangeBetRes).bet.winningAmount,\n              }),\n            );\n          }\n\n          play({ id: 'sound_victory' });\n          return {\n            isWon: true,\n            randomNumber,\n            money: (data.payload as IChangeBetRes).bet.winningAmount,\n            experience,\n          };\n        }\n        return { isWon: false, randomNumber };\n\n      default:\n        return console.log('No such type exists.');\n    }\n  };\n\n  return { getWinner, types };\n};\n\nexport default useMakeMove;\n","import { useState, useEffect } from 'react';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { getUser } from 'redux/user/userSelectors';\nimport useCoefficient from 'hooks/useCoefficient';\nimport useMakeMove from 'hooks/useMakeMove';\nimport { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport betsOperations from 'redux/bets/betsOperations';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport { toast } from 'react-toastify';\n\nimport useSound from 'use-sound';\nimport sounds from 'sounds/sounds.mp3';\n\nimport { ICreateBetRes } from 'types/IBetsApi';\nimport sprite from 'sounds/sprite';\n\nconst useGame = () => {\n  const dispatch = useAppDispatch();\n\n  const { complexity, bank } = useAppSelector(getUser);\n  const { getCoefficient } = useCoefficient();\n  const { getWinner } = useMakeMove();\n\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  const [type, setType] = useState<string | null>(null);\n  const [color, setColor] = useState<string | null>(null);\n  const [number, setNumber] = useState<number | null>(null);\n  const [amount, setAmount] = useState<number | null>(0);\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [isWon, setIsWon] = useState(false);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [experienceGained, setExperienceGained] = useState(0);\n  const [receivedMoney, setReceivedMoney] = useState(0);\n\n  useEffect(() => {\n    if (isWon) {\n      setShowSuccessModal(true);\n      setIsWon(false);\n    }\n  }, [isWon]);\n\n  const toggleSuccesModal = () => setShowSuccessModal(prevState => !prevState);\n\n  const rateHandler = (e: React.MouseEvent<HTMLInputElement>) => {\n    const type = e.currentTarget.dataset.type;\n    const color = e.currentTarget.dataset.color;\n    const number = e.currentTarget.dataset.number;\n\n    setType(type !== undefined ? type : null);\n    setColor(color !== undefined ? color : null);\n    setNumber(number !== undefined ? Number(number) : null);\n  };\n\n  const amountHandler = (value: number) => setAmount(value);\n\n  const submitHandler = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const rate = {\n      type,\n      color,\n      number,\n      betAmount: amount,\n      coefficient: getCoefficient(complexity && complexity, type),\n    };\n\n    if (\n      rate.betAmount !== null &&\n      rate.betAmount > 0 &&\n      bank &&\n      bank >= rate.betAmount\n    ) {\n      dispatch(operations.changeBank({ bank: -rate.betAmount }));\n      const data = await dispatch(betsOperations.createBet(rate));\n\n      const result = await getWinner(\n        rate.type as string,\n        rate.number as number,\n        (data.payload as ICreateBetRes).bet._id,\n      );\n      setRandomNumber(result?.randomNumber as number);\n      setIsWon(result?.isWon as boolean);\n      setExperienceGained(result?.experience as number);\n      setReceivedMoney(result?.money as number);\n\n      return;\n    }\n\n    return toast.error(\n      'The amount of the bet must be greater than zero, and this amount must also be in your account.',\n    );\n  };\n\n  return {\n    rateHandler,\n    amountHandler,\n    submitHandler,\n    randomNumber,\n    showSuccessModal,\n    experienceGained,\n    receivedMoney,\n    isWon,\n    toggleSuccesModal,\n    play,\n  };\n};\n\nexport default useGame;\n","import { useState } from 'react';\nimport useSound from 'use-sound';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\n\nconst useCounter = () => {\n  const [value, setValue] = useState(0);\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  const increment = () => {\n    play({ id: 'counter_click' });\n    setValue(prevstate => prevstate + 1);\n  };\n\n  const decrement = () => {\n    play({ id: 'counter_click' });\n    setValue(prevstate => prevstate - 1);\n  };\n\n  const addedValue = (e: React.MouseEvent<HTMLButtonElement>) => {\n    play({ id: 'counter_click' });\n    const value = Number(e.currentTarget.textContent);\n    setValue(prevState => prevState + value);\n  };\n\n  const resetValue = () => {\n    play({ id: 'counter_click' });\n    setValue(0);\n  };\n\n  return { increment, decrement, value, addedValue, resetValue };\n};\n\nexport default useCounter;\n","import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nimport { IWrapperStyled } from 'types/ICounter';\n\nexport const Wrapper = styled.div<IWrapperStyled>`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin: ${({ margin }) => (margin ? margin : '')};\n  padding: 10px;\n  width: 270px;\n\n  background: var(--brown-transparent);\n  border: 2px solid var(--brown-color);\n  border-radius: 8px;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    width: 100%;\n  }\n`;\n\nexport const MainField = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n`;\n\nexport const Button = styled.button<{ width: string; margin?: string }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: ${({ width }) => (width ? width : '')};\n  height: 30px;\n  margin: ${({ margin }) => (margin ? margin : '')};\n\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 700;\n\n  color: var(--brown-color);\n  background: #fde3a7;\n  border-radius: 8px;\n  border: none;\n\n  cursor: pointer;\n  transition: opacity var(--hover-effect);\n\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n  }\n`;\n\nexport const Value = styled.span`\n  font-size: 19px;\n  margin: 0 70px 0 70px;\n`;\n\nexport const Option = styled.div`\n  display: flex;\n`;\n","import { useEffect } from 'react';\nimport useCounter from 'hooks/useCounter';\n\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\n\nimport { ICounterState } from 'types/ICounter';\nimport { Wrapper, MainField, Button, Value, Option } from './Counter.styled';\n\nconst Counter: React.FC<ICounterState> = ({ margin, getValue }) => {\n  const { addedValue, decrement, increment, resetValue, value } = useCounter();\n\n  useEffect(() => {\n    (() => getValue(value))();\n  }, [getValue, value]);\n\n  return (\n    <Wrapper margin={margin}>\n      <MainField>\n        <Button type=\"button\" onClick={decrement} width=\"30px\">\n          <IconSwitcher name=\"minus\" size=\"16px\" fill=\"var(--brown-color)\" />\n        </Button>\n        <Value>{value}</Value>\n        <Button type=\"button\" onClick={increment} width=\"30px\">\n          <IconSwitcher name=\"plus\" size=\"16px\" fill=\"var(--brown-color)\" />\n        </Button>\n      </MainField>\n\n      <Option>\n        <Button\n          type=\"button\"\n          onClick={resetValue}\n          width=\"50px\"\n          margin=\"0 15px 0 0\"\n        >\n          0\n        </Button>\n        <Button\n          type=\"button\"\n          onClick={addedValue}\n          width=\"50px\"\n          margin=\"0 15px 0 0\"\n        >\n          +100\n        </Button>\n        <Button\n          type=\"button\"\n          onClick={addedValue}\n          width=\"50px\"\n          margin=\"0 15px 0 0\"\n        >\n          +500\n        </Button>\n        <Button type=\"button\" onClick={addedValue} width=\"50px\">\n          +1000\n        </Button>\n      </Option>\n    </Wrapper>\n  );\n};\n\nexport default Counter;\n","import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nimport { IInnerCircleStyled } from 'types/IGameWheel';\n\nexport const OuterCircle = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 270px;\n  height: 270px;\n\n  background: var(--blue-gradient);\n  border: 10px solid var(--1white-transparent);\n  border-radius: 50%;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    width: 500px;\n    height: 500px;\n  }\n`;\n\nexport const InnerCircle = styled.div<IInnerCircleStyled>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 180px;\n  height: 180px;\n\n  background: ${({ isWon }) =>\n    isWon ? 'var(--green-color)' : 'var(--red-color)'};\n  border: 15px solid var(--white-transparent);\n  border-radius: 50%;\n  box-shadow: 0px 0px 15px 5px rgba(0, 0, 0, 0.5) inset;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    width: 330px;\n    height: 330px;\n  }\n`;\n\nexport const Value = styled.span`\n  font-size: 80px;\n  font-weight: 900;\n\n  color: var(--white-color);\n  text-shadow: 5px 5px 3px rgba(0, 0, 0, 0.2);\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    font-size: 130px;\n  }\n`;\n","import { IGameWheelState } from 'types/IGameWheel';\nimport { OuterCircle, InnerCircle, Value } from './GameWheel.styled';\n\nconst GameWheel: React.FC<IGameWheelState> = ({ value, isWon }) => {\n  return (\n    <OuterCircle>\n      <InnerCircle isWon={isWon}>\n        <Value>{value}</Value>\n      </InnerCircle>\n    </OuterCircle>\n  );\n};\n\nexport default GameWheel;\n","import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const Message = styled.div`\n  position: absolute;\n  top: 33%;\n  left: -10px;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    top: 5%;\n    left: 53%;\n  }\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    top: 5%;\n    left: 50%;\n  }\n`;\n","import Container from 'components/InterfaceElements/Container';\nimport personage from 'images/success/success.png';\n\nimport { ISuccessState } from 'types/ISuccess';\nimport { Wrapper, Message } from './Success.styled';\n\nconst Success: React.FC<ISuccessState> = ({ experience, money }) => {\n  return (\n    <Wrapper>\n      <img src={personage} alt=\"Character boy and girl.\" />\n      <Message>\n        <Container type=\"transparent\" width=\"270px\" padding=\"15px\">\n          <p>Great job, you managed to earn some money and experience.</p>\n          <br />\n          <p>- Experience: {`${experience}XP`}</p>\n          <p>- Money: ${`${money}$`}</p>\n          <br />\n          <p>Continue in the same spirit.</p>\n        </Container>\n      </Message>\n    </Wrapper>\n  );\n};\n\nexport default Success;\n","import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nimport { IWrapperStyled, IItemStyled, ILabel } from 'types/IGame';\n\nexport const Form = styled.form`\n  width: 270px;\n  margin-bottom: 15px;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    width: 650px;\n    margin-bottom: 30px;\n  }\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    width: 600px;\n  }\n`;\n\nexport const Wrapper = styled.div<IWrapperStyled>`\n  display: flex;\n  flex-direction: ${({ direction }) => (direction ? direction : 'row')};\n  flex-wrap: ${({ wrap }) => (wrap ? 'wrap' : '')};\n\n  width: ${({ width }) => (width ? width : '')};\n  height: ${({ height }) => (height ? height : '')};\n`;\n\nexport const Item = styled.label<IItemStyled>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: ${({ width }) => (width ? width : '')};\n  height: ${({ height }) => (height ? height : '')};\n  margin: ${({ margin }) => (margin ? margin : '')};\n\n  background-color: ${({ background }) => {\n    if (background === 'red') {\n      return 'var(--red-color)';\n    }\n\n    if (background === 'black') {\n      return 'var(--black-color)';\n    }\n\n    return 'var(--green-color)';\n  }};\n\n  box-shadow: inset 0px 25px 0px rgba(255, 255, 255, 0.1);\n  color: var(--white-color);\n  border: 3px solid var(--white-transparent);\n\n  border-top-right-radius: ${({ topRightRadius }) =>\n    topRightRadius ? topRightRadius : '10px'};\n  border-top-left-radius: ${({ topLeftRadius }) =>\n    topLeftRadius ? topLeftRadius : '10px'};\n  border-bottom-right-radius: ${({ bottomRightRadius }) =>\n    bottomRightRadius ? bottomRightRadius : '10px'};\n  border-bottom-left-radius: ${({ bottomLeftRadius }) =>\n    bottomLeftRadius ? bottomLeftRadius : '10px'};\n\n  cursor: pointer;\n  transition: box-shadow var(--hover-effect);\n\n  :hover,\n  :focus {\n    box-shadow: none;\n  }\n`;\n\nexport const Input = styled.input`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const Label = styled.span<ILabel>`\n  font-weight: 900;\n  font-size: ${({ fontSize }) => (fontSize ? fontSize : '24px')};\n  text-align: center;\n  text-transform: uppercase;\n\n  color: var(--white-color);\n  text-shadow: 0px 2px 3px rgba(0, 0, 0, 0.2);\n`;\n","import useGame from 'hooks/useGame';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Button from 'components/InterfaceElements/Button';\nimport Counter from 'components/InterfaceElements/Counter';\nimport GameWheel from '../GameWheel';\nimport Modal from 'components/Modal';\nimport Success from 'components/Modal/Success';\n\nimport numbers from 'data/numbers.json';\nimport { Form, Wrapper, Item, Input, Label } from '../Game.styled';\n\nconst Mobile: React.FC<{}> = () => {\n  const {\n    amountHandler,\n    experienceGained,\n    randomNumber,\n    rateHandler,\n    receivedMoney,\n    showSuccessModal,\n    submitHandler,\n    isWon,\n    toggleSuccesModal,\n    play,\n  } = useGame();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"300px\"\n      padding=\"10px\"\n      margin=\"0 0 80px 0\"\n    >\n      <Form onSubmit={submitHandler}>\n        <Item\n          width=\"150px\"\n          height=\"50px\"\n          margin=\"0 0 0 60px\"\n          topLeftRadius=\"30px\"\n          topRightRadius=\"30px\"\n          onClick={() => play({ id: 'mouse_click' })}\n        >\n          <Input\n            type=\"radio\"\n            name=\"rate\"\n            data-type=\"zero\"\n            data-color={null}\n            data-number={0}\n            onClick={rateHandler}\n          />\n          <Label fontSize=\"20px\">0</Label>\n        </Item>\n\n        <Wrapper>\n          <Wrapper direction=\"column\">\n            <Item\n              width=\"60px\"\n              height=\"160px\"\n              topLeftRadius=\"70px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"high\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label fontSize=\"16px\">high</Label>\n            </Item>\n            <Item\n              width=\"60px\"\n              height=\"160px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"even\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label fontSize=\"16px\">even</Label>\n            </Item>\n            <Item\n              width=\"60px\"\n              height=\"160px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"black\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label fontSize=\"16px\">black</Label>\n            </Item>\n          </Wrapper>\n\n          <Wrapper wrap=\"wrap\" width=\"150px\">\n            {numbers.map(({ number, color }) => {\n              return (\n                <Item\n                  key={number}\n                  width=\"calc(100% / 3)\"\n                  height=\"40px\"\n                  background={color}\n                  onClick={() => play({ id: 'mouse_click' })}\n                >\n                  <Input\n                    type=\"radio\"\n                    name=\"rate\"\n                    data-type=\"number\"\n                    data-color={color}\n                    data-number={number}\n                    onClick={rateHandler}\n                  />\n                  <Label fontSize=\"20px\">{number}</Label>\n                </Item>\n              );\n            })}\n          </Wrapper>\n\n          <Wrapper direction=\"column\">\n            <Item\n              width=\"60px\"\n              height=\"160px\"\n              topRightRadius=\"70px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"low\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label fontSize=\"16px\">low</Label>\n            </Item>\n            <Item\n              width=\"60px\"\n              height=\"160px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"odd\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label fontSize=\"16px\">odd</Label>\n            </Item>\n            <Item\n              width=\"60px\"\n              height=\"160px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"red\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label fontSize=\"16px\">red</Label>\n            </Item>\n          </Wrapper>\n        </Wrapper>\n\n        <Wrapper>\n          <Item\n            width=\"30px\"\n            height=\"60px\"\n            bottomLeftRadius=\"30px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-1\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"12px\">12P</Label>\n          </Item>\n          <Item\n            width=\"30px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-2\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"12px\">12M</Label>\n          </Item>\n          <Item\n            width=\"30px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-3\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"12px\">12D</Label>\n          </Item>\n          <Item\n            width=\"30px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"column-1\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n          </Item>\n          <Item\n            width=\"30px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"column-2\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n          </Item>\n          <Item\n            width=\"30px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"column-3\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n          </Item>\n          <Item\n            width=\"30px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-3\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"12px\">12D</Label>\n          </Item>\n          <Item\n            width=\"30px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-2\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"12px\">12M</Label>\n          </Item>\n          <Item\n            width=\"30px\"\n            height=\"60px\"\n            bottomRightRadius=\"30px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-1\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"12px\">12P</Label>\n          </Item>\n        </Wrapper>\n\n        <Counter getValue={amountHandler} margin=\"30px 0 0 0\" />\n\n        <Button\n          type=\"submit\"\n          background=\"green\"\n          width=\"100%\"\n          height=\"50px\"\n          borderRadius=\"50px\"\n          margin=\"30px 0 0 0\"\n          shadow\n          onClick={() => play({ id: 'counter_click' })}\n        >\n          Make a bet\n        </Button>\n      </Form>\n\n      <GameWheel value={randomNumber} isWon={isWon} />\n\n      {showSuccessModal && (\n        <Modal title=\"Congratulations, you've won.\" onClose={toggleSuccesModal}>\n          <Success experience={experienceGained} money={receivedMoney} />\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default Mobile;\n","import useGame from 'hooks/useGame';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Button from 'components/InterfaceElements/Button';\nimport Counter from 'components/InterfaceElements/Counter';\nimport GameWheel from '../GameWheel';\nimport Modal from 'components/Modal';\nimport Success from 'components/Modal/Success';\n\nimport numbers from 'data/numbers.json';\nimport { Form, Wrapper, Item, Input, Label } from '../Game.styled';\n\nconst Tablet: React.FC<{}> = () => {\n  const {\n    amountHandler,\n    experienceGained,\n    randomNumber,\n    rateHandler,\n    receivedMoney,\n    showSuccessModal,\n    submitHandler,\n    isWon,\n    toggleSuccesModal,\n    play,\n  } = useGame();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"680px\"\n      padding=\"40px 10px 10px 10px\"\n      margin=\"50px 0 80px 0\"\n      alignItems=\"center\"\n    >\n      <Form onSubmit={submitHandler}>\n        <Item\n          width=\"346px\"\n          height=\"60px\"\n          margin=\"0 0 0 150px\"\n          topLeftRadius=\"30px\"\n          topRightRadius=\"30px\"\n          onClick={() => play({ id: 'mouse_click' })}\n        >\n          <Input\n            type=\"radio\"\n            name=\"rate\"\n            data-type=\"zero\"\n            data-color={null}\n            data-number={0}\n            onClick={rateHandler}\n          />\n          <Label fontSize=\"30px\">0</Label>\n        </Item>\n\n        <Wrapper>\n          <Wrapper direction=\"column\">\n            <Item\n              width=\"150px\"\n              height=\"240px\"\n              topLeftRadius=\"70px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"high\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label>high</Label>\n            </Item>\n            <Item\n              width=\"150px\"\n              height=\"240px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"even\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label>even</Label>\n            </Item>\n            <Item\n              width=\"150px\"\n              height=\"240px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"black\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label>black</Label>\n            </Item>\n          </Wrapper>\n\n          <Wrapper wrap=\"wrap\">\n            {numbers.map(({ number, color }) => {\n              return (\n                <Item\n                  key={number}\n                  width=\"calc(100% / 3)\"\n                  height=\"60px\"\n                  background={color}\n                  onClick={() => play({ id: 'mouse_click' })}\n                >\n                  <Input\n                    type=\"radio\"\n                    name=\"rate\"\n                    data-type=\"number\"\n                    data-color={color}\n                    data-number={number}\n                    onClick={rateHandler}\n                  />\n                  <Label fontSize=\"30px\">{number}</Label>\n                </Item>\n              );\n            })}\n          </Wrapper>\n\n          <Wrapper direction=\"column\">\n            <Item\n              width=\"150px\"\n              height=\"240px\"\n              topRightRadius=\"70px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"low\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label>low</Label>\n            </Item>\n            <Item\n              width=\"150px\"\n              height=\"240px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"odd\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label>odd</Label>\n            </Item>\n            <Item\n              width=\"150px\"\n              height=\"240px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"red\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label>red</Label>\n            </Item>\n          </Wrapper>\n        </Wrapper>\n\n        <Wrapper>\n          <Item\n            width=\"50px\"\n            height=\"60px\"\n            bottomLeftRadius=\"30px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-1\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"20px\">12P</Label>\n          </Item>\n          <Item\n            width=\"50px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-2\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"20px\">12M</Label>\n          </Item>\n          <Item\n            width=\"50px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-3\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"20px\">12D</Label>\n          </Item>\n          <Item\n            width=\"100px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"column-1\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n          </Item>\n          <Item\n            width=\"100px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"column-2\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n          </Item>\n          <Item\n            width=\"100px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"column-3\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n          </Item>\n          <Item\n            width=\"50px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-3\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"20px\">12D</Label>\n          </Item>\n          <Item\n            width=\"50px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-2\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"20px\">12M</Label>\n          </Item>\n          <Item\n            width=\"50px\"\n            height=\"60px\"\n            bottomRightRadius=\"30px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-1\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"20px\">12P</Label>\n          </Item>\n        </Wrapper>\n\n        <Counter getValue={amountHandler} margin=\"30px 0 0 0\" />\n\n        <Button\n          type=\"submit\"\n          background=\"green\"\n          width=\"100%\"\n          height=\"50px\"\n          borderRadius=\"50px\"\n          margin=\"30px 0 0 0\"\n          shadow\n          onClick={() => play({ id: 'counter_click' })}\n        >\n          Make a bet\n        </Button>\n      </Form>\n\n      <GameWheel value={randomNumber} isWon={isWon} />\n\n      {showSuccessModal && (\n        <Modal title=\"Congratulations, you've won.\" onClose={toggleSuccesModal}>\n          <Success experience={experienceGained} money={receivedMoney} />\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default Tablet;\n","import useGame from 'hooks/useGame';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Button from 'components/InterfaceElements/Button';\nimport Counter from 'components/InterfaceElements/Counter';\nimport GameWheel from '../GameWheel';\nimport Modal from 'components/Modal';\nimport Success from 'components/Modal/Success';\n\nimport numbers from 'data/numbers.json';\nimport { Form, Wrapper, Item, Input, Label } from '../Game.styled';\n\nconst Desktop: React.FC<{}> = () => {\n  const {\n    amountHandler,\n    experienceGained,\n    randomNumber,\n    rateHandler,\n    receivedMoney,\n    showSuccessModal,\n    submitHandler,\n    isWon,\n    toggleSuccesModal,\n    play,\n  } = useGame();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"1250px\"\n      padding=\"50px\"\n      direction=\"row\"\n      justifyContent=\"space-between\"\n    >\n      <Form onSubmit={submitHandler}>\n        <Item\n          width=\"300px\"\n          height=\"60px\"\n          margin=\"0 0 0 150px\"\n          topLeftRadius=\"30px\"\n          topRightRadius=\"30px\"\n          onClick={() => play({ id: 'mouse_click' })}\n        >\n          <Input\n            type=\"radio\"\n            name=\"rate\"\n            data-type=\"zero\"\n            data-color={null}\n            data-number={0}\n            onClick={rateHandler}\n          />\n          <Label fontSize=\"30px\">0</Label>\n        </Item>\n\n        <Wrapper>\n          <Wrapper direction=\"column\">\n            <Item\n              width=\"150px\"\n              height=\"240px\"\n              topLeftRadius=\"70px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"high\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label>high</Label>\n            </Item>\n            <Item\n              width=\"150px\"\n              height=\"240px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"even\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label>even</Label>\n            </Item>\n            <Item\n              width=\"150px\"\n              height=\"240px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"black\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label>black</Label>\n            </Item>\n          </Wrapper>\n\n          <Wrapper wrap=\"wrap\">\n            {numbers.map(({ number, color }) => {\n              return (\n                <Item\n                  key={number}\n                  width=\"calc(100% / 3)\"\n                  height=\"60px\"\n                  background={color}\n                  onClick={() => play({ id: 'mouse_click' })}\n                >\n                  <Input\n                    type=\"radio\"\n                    name=\"rate\"\n                    data-type=\"number\"\n                    data-color={color}\n                    data-number={number}\n                    onClick={rateHandler}\n                  />\n                  <Label fontSize=\"30px\">{number}</Label>\n                </Item>\n              );\n            })}\n          </Wrapper>\n\n          <Wrapper direction=\"column\">\n            <Item\n              width=\"150px\"\n              height=\"240px\"\n              topRightRadius=\"70px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"low\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label>low</Label>\n            </Item>\n            <Item\n              width=\"150px\"\n              height=\"240px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"odd\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label>odd</Label>\n            </Item>\n            <Item\n              width=\"150px\"\n              height=\"240px\"\n              onClick={() => play({ id: 'mouse_click' })}\n            >\n              <Input\n                type=\"radio\"\n                name=\"rate\"\n                data-type=\"red\"\n                data-color={null}\n                data-number={null}\n                onClick={rateHandler}\n              />\n              <Label>red</Label>\n            </Item>\n          </Wrapper>\n        </Wrapper>\n\n        <Wrapper>\n          <Item\n            width=\"50px\"\n            height=\"60px\"\n            bottomLeftRadius=\"30px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-1\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"20px\">12P</Label>\n          </Item>\n          <Item\n            width=\"50px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-2\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"20px\">12M</Label>\n          </Item>\n          <Item\n            width=\"50px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-3\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"20px\">12D</Label>\n          </Item>\n          <Item\n            width=\"100px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"column-1\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n          </Item>\n          <Item\n            width=\"100px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"column-2\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n          </Item>\n          <Item\n            width=\"100px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"column-3\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n          </Item>\n          <Item\n            width=\"50px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-3\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"20px\">12D</Label>\n          </Item>\n          <Item\n            width=\"50px\"\n            height=\"60px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-2\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"20px\">12M</Label>\n          </Item>\n          <Item\n            width=\"50px\"\n            height=\"60px\"\n            bottomRightRadius=\"30px\"\n            onClick={() => play({ id: 'mouse_click' })}\n          >\n            <Input\n              type=\"radio\"\n              name=\"rate\"\n              data-type=\"dozen-1\"\n              data-color={null}\n              data-number={null}\n              onClick={rateHandler}\n            />\n            <Label fontSize=\"20px\">12P</Label>\n          </Item>\n        </Wrapper>\n\n        <Counter getValue={amountHandler} margin=\"30px 0 0 0\" />\n\n        <Button\n          type=\"submit\"\n          background=\"green\"\n          width=\"100%\"\n          height=\"50px\"\n          borderRadius=\"50px\"\n          margin=\"30px 0 0 0\"\n          shadow\n          onClick={() => play({ id: 'counter_click' })}\n        >\n          Make a bet\n        </Button>\n      </Form>\n\n      <GameWheel value={randomNumber} isWon={isWon} />\n\n      {showSuccessModal && (\n        <Modal title=\"Congratulations, you've won.\" onClose={toggleSuccesModal}>\n          <Success experience={experienceGained} money={receivedMoney} />\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default Desktop;\n","import Media from 'react-media';\nimport screenWidth from 'helpers/screenWidth';\n\nimport Mobile from './Responsiv/Mobile';\nimport Tablet from './Responsiv/Tablet';\nimport Desktop from './Responsiv/Desktop';\n\nconst Game: React.FC<{}> = () => {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 767px)',\n        medium: `(min-width: ${screenWidth.tablet}) and (max-width: 1439px)`,\n        large: `(min-width: ${screenWidth.desktop})`,\n      }}\n    >\n      {matches => (\n        <>\n          {matches.small && <Mobile />}\n          {matches.medium && <Tablet />}\n          {matches.large && <Desktop />}\n        </>\n      )}\n    </Media>\n  );\n};\n\nexport default Game;\n","import Game from 'components/Game';\n\nconst GamePage: React.FC<{}> = () => {\n  return <Game />;\n};\n\nexport default GamePage;\n"],"names":["ZERO","NUMBER","HIGH","LOW","EVEN","ODD","BLACK","RED","DOZEN_1","DOZEN_2","DOZEN_3","COLUMN_1","COLUMN_2","COLUMN_3","coefficientInfo","low","type","coefficient","number","bottomRow","oneFromTwo","initialFunds","experience","medium","high","getCoefficient","complexity","types","Math","random","floor","dispatch","useAppDispatch","soundOff","useAppSelector","getSoundOff","useSound","sounds","sprite","soundEnabled","play","useChangeExperienceMutation","changeExperience","useCoefficient","getUser","useExperience","updateLevel","updateRank","levelInfo","useGetLevelInfoQuery","data","useState","randomNumberGenerator","randomNumber","setRandomNumber","getWinner","id","num","betsOperations","betId","isWon","currentLevel","level","currentExperience","operations","bank","payload","bet","winningAmount","money","numbers","item","even","odd","color","console","log","useMakeMove","setType","setColor","setNumber","amount","setAmount","setIsWon","showSuccessModal","setShowSuccessModal","experienceGained","setExperienceGained","receivedMoney","setReceivedMoney","useEffect","submitHandler","e","preventDefault","rate","betAmount","_id","result","toast","rateHandler","currentTarget","dataset","undefined","Number","amountHandler","value","toggleSuccesModal","prevState","setValue","increment","prevstate","decrement","addedValue","textContent","resetValue","Wrapper","styled","margin","screenWidth","MainField","Button","width","Value","Option","getValue","useCounter","onClick","IconSwitcher","name","size","fill","OuterCircle","InnerCircle","Message","src","personage","alt","Container","padding","Form","direction","wrap","height","Item","background","topRightRadius","topLeftRadius","bottomRightRadius","bottomLeftRadius","Input","Label","fontSize","useGame","onSubmit","borderRadius","shadow","Modal","title","onClose","alignItems","justifyContent","queries","small","large","matches"],"sourceRoot":""}