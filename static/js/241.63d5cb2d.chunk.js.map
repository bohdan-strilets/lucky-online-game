{"version":3,"file":"static/js/241.63d5cb2d.chunk.js","mappings":"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","sources":["helpers/betTypes.ts","hooks/useCoefficient.ts","hooks/useCreateNewGame.ts","components/CreateNewGame/CreateNewGame.styled.ts","components/CreateNewGame/Responsiv/Mobile.tsx","components/CreateNewGame/Responsiv/Tablet.tsx","components/CreateNewGame/Responsiv/Desktop.tsx","components/CreateNewGame/CreateNewGame.tsx","pages/CreateNewGamePage.tsx"],"sourcesContent":["const types = {\n  ZERO: 'zero',\n  NUMBER: 'number',\n  HIGH: 'high',\n  LOW: 'low',\n  EVEN: 'even',\n  ODD: 'odd',\n  BLACK: 'black',\n  RED: 'red',\n  DOZEN_1: 'dozen-1',\n  DOZEN_2: 'dozen-2',\n  DOZEN_3: 'dozen-3',\n  COLUMN_1: 'column-1',\n  COLUMN_2: 'column-2',\n  COLUMN_3: 'column-3',\n};\n\nexport default types;\n","import types from 'helpers/betTypes';\n\nconst useCoefficient = () => {\n  const coefficientInfo = {\n    low: {\n      type: 'low',\n      coefficient: {\n        number: 5.7,\n        bottomRow: 4.2,\n        oneFromTwo: 3.2,\n      },\n      initialFunds: 3200,\n      experience: 30,\n    },\n    medium: {\n      type: 'medium',\n      coefficient: {\n        number: 3.2,\n        bottomRow: 2.1,\n        oneFromTwo: 1.7,\n      },\n      initialFunds: 1600,\n      experience: 20,\n    },\n    high: {\n      type: 'high',\n      coefficient: {\n        number: 1.9,\n        bottomRow: 1.5,\n        oneFromTwo: 1.3,\n      },\n      initialFunds: 700,\n      experience: 10,\n    },\n  };\n\n  const getCoefficient = (\n    complexity: string | null | undefined,\n    type: string | null,\n  ) => {\n    switch (complexity) {\n      case coefficientInfo.low.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.low.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.low.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.low.coefficient.bottomRow;\n        }\n        return 0;\n\n      case coefficientInfo.medium.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.medium.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.medium.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.medium.coefficient.bottomRow;\n        }\n        return 0;\n\n      case coefficientInfo.high.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.high.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.high.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.high.coefficient.bottomRow;\n        }\n        return 0;\n\n      default:\n        return 0;\n    }\n  };\n\n  return {\n    coefficientInfo,\n    getCoefficient,\n  };\n};\n\nexport default useCoefficient;\n","import { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport { useNavigate } from 'react-router-dom';\nimport useCoefficient from 'hooks/useCoefficient';\nimport useSound from 'use-sound';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { IChangeBankRes } from 'types/IUserRessponse';\n\nconst useCreateNewGame = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { coefficientInfo } = useCoefficient();\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  const createNewGame = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    const value = e.currentTarget.textContent as 'low' | 'medium' | 'high';\n    play({ id: 'counter_click' });\n\n    const res = await dispatch(\n      operations.createSession({\n        complexity: value,\n        bank: coefficientInfo?.[value].initialFunds,\n      }),\n    );\n\n    if ((res.payload as IChangeBankRes).status === 'ok') {\n      navigate('/game');\n    }\n  };\n\n  return { createNewGame };\n};\n\nexport default useCreateNewGame;\n","import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 40px;\n  text-transform: uppercase;\n\n  width: 100%;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n\n  margin-bottom: 15px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 100%;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n\nexport const Item = styled.li`\n  @media screen and (max-width: 767px) {\n    margin-bottom: 15px;\n\n    :last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\n","import useCreateNewGame from 'hooks/useCreateNewGame';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Button from 'components/InterfaceElements/Button';\n\nimport { Title, Text, List, Item } from '../CreateNewGame.styled';\n\nconst Mobile: React.FC<{}> = () => {\n  const { createNewGame } = useCreateNewGame();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"300px\"\n      padding=\"10px\"\n      margin=\"0 0 80px 0\"\n    >\n      <Title>Create a new game</Title>\n      <Text>\n        Choose the level of difficulty. What will determine the coefficient that\n        will be applied to the amount of winnings and the experience that you\n        get for the bet.\n      </Text>\n\n      <List>\n        <Item>\n          <Button\n            type=\"button\"\n            background=\"blue\"\n            borderRadius=\"50px\"\n            height=\"50px\"\n            width=\"200px\"\n            onClick={createNewGame}\n          >\n            low\n          </Button>\n        </Item>\n        <Item>\n          <Button\n            type=\"button\"\n            background=\"blue\"\n            borderRadius=\"50px\"\n            height=\"50px\"\n            width=\"200px\"\n            onClick={createNewGame}\n          >\n            medium\n          </Button>\n        </Item>\n        <Item>\n          <Button\n            type=\"button\"\n            background=\"blue\"\n            borderRadius=\"50px\"\n            height=\"50px\"\n            width=\"200px\"\n            onClick={createNewGame}\n          >\n            high\n          </Button>\n        </Item>\n      </List>\n    </Container>\n  );\n};\nexport default Mobile;\n","import useCreateNewGame from 'hooks/useCreateNewGame';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Button from 'components/InterfaceElements/Button';\n\nimport { Title, Text, List, Item } from '../CreateNewGame.styled';\n\nconst Tablet: React.FC<{}> = () => {\n  const { createNewGame } = useCreateNewGame();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"680px\"\n      padding=\"40px 10px 10px 10px\"\n      margin=\"50px 0 80px 0\"\n    >\n      <Title>Create a new game</Title>\n      <Text>\n        Choose the level of difficulty. What will determine the coefficient that\n        will be applied to the amount of winnings and the experience that you\n        get for the bet.\n      </Text>\n\n      <List>\n        <Item>\n          <Button\n            type=\"button\"\n            background=\"blue\"\n            borderRadius=\"50px\"\n            height=\"50px\"\n            width=\"200px\"\n            onClick={createNewGame}\n          >\n            low\n          </Button>\n        </Item>\n        <Item>\n          <Button\n            type=\"button\"\n            background=\"blue\"\n            borderRadius=\"50px\"\n            height=\"50px\"\n            width=\"200px\"\n            onClick={createNewGame}\n          >\n            medium\n          </Button>\n        </Item>\n        <Item>\n          <Button\n            type=\"button\"\n            background=\"blue\"\n            borderRadius=\"50px\"\n            height=\"50px\"\n            width=\"200px\"\n            onClick={createNewGame}\n          >\n            high\n          </Button>\n        </Item>\n      </List>\n    </Container>\n  );\n};\nexport default Tablet;\n","import useCreateNewGame from 'hooks/useCreateNewGame';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Button from 'components/InterfaceElements/Button';\n\nimport { Title, Text, List } from '../CreateNewGame.styled';\n\nconst Desktop: React.FC<{}> = () => {\n  const { createNewGame } = useCreateNewGame();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"856px\"\n      padding=\"50px 100px\"\n      alignItems=\"center\"\n    >\n      <Title>Create a new game</Title>\n      <Text>\n        Choose the level of difficulty. What will determine the coefficient that\n        will be applied to the amount of winnings and the experience that you\n        get for the bet.\n      </Text>\n\n      <List>\n        <li>\n          <Button\n            type=\"button\"\n            background=\"blue\"\n            borderRadius=\"50px\"\n            height=\"50px\"\n            width=\"200px\"\n            onClick={createNewGame}\n          >\n            low\n          </Button>\n        </li>\n        <li>\n          <Button\n            type=\"button\"\n            background=\"blue\"\n            borderRadius=\"50px\"\n            height=\"50px\"\n            width=\"200px\"\n            onClick={createNewGame}\n          >\n            medium\n          </Button>\n        </li>\n        <li>\n          <Button\n            type=\"button\"\n            background=\"blue\"\n            borderRadius=\"50px\"\n            height=\"50px\"\n            width=\"200px\"\n            onClick={createNewGame}\n          >\n            high\n          </Button>\n        </li>\n      </List>\n    </Container>\n  );\n};\nexport default Desktop;\n","import Media from 'react-media';\nimport screenWidth from 'helpers/screenWidth';\n\nimport Mobile from './Responsiv/Mobile';\nimport Tablet from './Responsiv/Tablet';\nimport Desktop from './Responsiv/Desktop';\n\nconst CreateNewGame: React.FC<{}> = () => {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 767px)',\n        medium: `(min-width: ${screenWidth.tablet}) and (max-width: 1439px)`,\n        large: `(min-width: ${screenWidth.desktop})`,\n      }}\n    >\n      {matches => (\n        <>\n          {matches.small && <Mobile />}\n          {matches.medium && <Tablet />}\n          {matches.large && <Desktop />}\n        </>\n      )}\n    </Media>\n  );\n};\n\nexport default CreateNewGame;\n","import CreateNewGame from 'components/CreateNewGame';\n\nconst CreateNewGamePage: React.FC<{}> = () => {\n  return <CreateNewGame />;\n};\n\nexport default CreateNewGamePage;\n"],"names":["ZERO","NUMBER","HIGH","LOW","EVEN","ODD","BLACK","RED","DOZEN_1","DOZEN_2","DOZEN_3","COLUMN_1","COLUMN_2","COLUMN_3","coefficientInfo","low","type","coefficient","number","bottomRow","oneFromTwo","initialFunds","experience","medium","high","getCoefficient","complexity","types","dispatch","useAppDispatch","navigate","useNavigate","useCoefficient","soundOff","useAppSelector","getSoundOff","useSound","sounds","sprite","soundEnabled","play","createNewGame","e","value","currentTarget","textContent","id","operations","bank","payload","status","Title","styled","Text","List","screenWidth","Item","useCreateNewGame","Container","width","padding","margin","Button","background","borderRadius","height","onClick","alignItems","queries","small","large","matches"],"sourceRoot":""}