{"version":3,"file":"static/js/484.0289430a.chunk.js","mappings":"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","sources":["helpers/getAllUsers.ts","hooks/useRating.ts","components/Rating/ListItem/ListItem.styled.ts","components/Rating/ListItem/ListItem.tsx","components/InterfaceElements/DropDownList/DropDownList.styled.ts","components/InterfaceElements/DropDownList/DropDownList.tsx","components/Rating/Rating.styled.ts","components/Rating/Responsiv/Mobile.tsx","components/Rating/Responsiv/Tablet.tsx","components/Rating/Responsiv/Desktop.tsx","components/Rating/Rating.tsx","pages/RatingPage.tsx"],"sourcesContent":["import api from 'api';\nimport { API_URL } from 'api';\n\nconst getAllUsers = async (page: number) => {\n  try {\n    const { data } = await api.get(\n      `${API_URL}api/v1/user/get-all-users/?page=${page}`,\n    );\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getAllUsers;\n","import { useEffect, useState } from 'react';\nimport getAllUsers from 'helpers/getAllUsers';\nimport useSound from 'use-sound';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { IUser } from 'types/IUserState';\n\nconst useRating = () => {\n  const [page, setPage] = useState(1);\n  const [users, setUsers] = useState<null | IUser[] | undefined>(null);\n  const [totalUsers, setTotalUsers] = useState(null);\n  const [sortOption, setSortOption] = useState<string | null>(null);\n\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  useEffect(() => {\n    (async () => {\n      if (page === 1) {\n        const { allUsers, total } = await getAllUsers(page);\n        setUsers(allUsers);\n        setTotalUsers(total);\n      }\n\n      if (page !== 1) {\n        const { allUsers } = await getAllUsers(page);\n        setUsers(prevState =>\n          prevState !== null && prevState !== undefined\n            ? [...prevState, ...allUsers]\n            : [],\n        );\n      }\n    })();\n  }, [page]);\n\n  const showMore = () => {\n    setPage(prevState => prevState + 1);\n    play({ id: 'counter_click' });\n  };\n\n  const disabledbutton = () => {\n    if (users !== undefined && users !== null && totalUsers !== null) {\n      return users?.length + 1 >= totalUsers;\n    }\n  };\n\n  const sorting = () => {\n    const types = {\n      experience: 'EXPERIENCE',\n      level: 'LEVEL',\n      bank: 'BANK',\n      totalBets: 'TOTAL BETS',\n      wonBets: 'WON BETS',\n      lostBets: 'LOST BETS',\n    };\n\n    if (users) {\n      switch (sortOption) {\n        case types.experience:\n          users.sort((a, b) => {\n            if (\n              a.level !== null &&\n              a.level !== undefined &&\n              b.level !== null &&\n              b.level !== undefined\n            ) {\n              return b.level?.experience - a.level?.experience;\n            }\n            return 1;\n          });\n          break;\n\n        case types.level:\n          users.sort((a, b) => {\n            if (\n              a.level !== null &&\n              a.level !== undefined &&\n              b.level !== null &&\n              b.level !== undefined\n            ) {\n              return b.level?.level - a.level?.level;\n            }\n            return 1;\n          });\n          break;\n\n        case types.bank:\n          users.sort((a, b) => {\n            if (\n              a.bank !== null &&\n              a.bank !== undefined &&\n              b.bank !== null &&\n              b.bank !== undefined\n            ) {\n              return b.bank - a.bank;\n            }\n            return 1;\n          });\n          break;\n\n        case types.totalBets:\n          users.sort((a, b) => {\n            if (\n              a.statistics !== null &&\n              a.statistics !== undefined &&\n              b.statistics !== null &&\n              b.statistics !== undefined\n            ) {\n              return b.statistics?.totalBets - a.statistics?.totalBets;\n            }\n            return 1;\n          });\n          break;\n\n        case types.wonBets:\n          users.sort((a, b) => {\n            if (\n              a.statistics !== null &&\n              a.statistics !== undefined &&\n              b.statistics !== null &&\n              b.statistics !== undefined\n            ) {\n              return b.statistics?.wonBets - a.statistics?.wonBets;\n            }\n            return 1;\n          });\n          break;\n\n        case types.lostBets:\n          users.sort((a, b) => {\n            if (\n              a.statistics !== null &&\n              a.statistics !== undefined &&\n              b.statistics !== null &&\n              b.statistics !== undefined\n            ) {\n              return b.statistics?.lostBets - a.statistics?.lostBets;\n            }\n            return 1;\n          });\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const getSortOption = (value: string) => {\n    setSortOption(value);\n\n    if (users && sortOption) {\n    }\n  };\n\n  return { showMore, disabledbutton, sorting, getSortOption, users };\n};\n\nexport default useRating;\n","import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nimport greenPositionBg from 'images/rating/greenPositionBg.png';\nimport bluePositionBg from 'images/rating/bluePositionBg.png';\n\nimport { IListItemStyled } from 'types/IListItem';\n\nexport const Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 100%;\n`;\n\nexport const Position = styled.div<IListItemStyled>`\n  position: absolute;\n  top: 5px;\n  left: -18px;\n\n  width: 60px;\n  height: 36px;\n\n  background: ${({ position }) =>\n    position > 3 ? `url(${bluePositionBg})` : `url(${greenPositionBg})`};\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    top: 5px;\n    left: -60px;\n\n    width: 90px;\n    height: 56px;\n  }\n`;\n\nexport const Number = styled.span`\n  position: absolute;\n  top: 45%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  font-size: 24px;\n  color: var(--white-color);\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 50px;\n`;\n\nexport const Avatar = styled.img`\n  width: 60px;\n  height: 60px;\n  margin-right: 15px;\n\n  border: 3px solid #f4f8fc;\n  border-radius: 50%;\n`;\n\nexport const Name = styled.p`\n  font-size: 20px;\n  color: var(--brown-color);\n`;\n\nexport const UserMetrics = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Value = styled.p`\n  width: 70px;\n  text-align: center;\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    width: 90px;\n  }\n`;\n","import { IListItemState } from 'types/IListItem';\n\nimport {\n  Wrapper,\n  Position,\n  Number,\n  UserInfo,\n  Avatar,\n  Name,\n  UserMetrics,\n  Value,\n} from './ListItem.styled';\n\nconst ListItem: React.FC<IListItemState> = ({\n  position,\n  avatar,\n  name,\n  experience,\n  level,\n  bank,\n  totalBets,\n  wonBets,\n  lostBets,\n}) => {\n  return (\n    <Wrapper>\n      <Position position={position}>\n        <Number>{position}</Number>\n      </Position>\n\n      <UserInfo>\n        <Avatar src={avatar} alt={`Avatar by ${name}`} />\n        <Name>{name}</Name>\n      </UserInfo>\n\n      <UserMetrics>\n        {experience && <Value>{`${experience} XP`}</Value>}\n        {level && <Value>{level}</Value>}\n        {bank && <Value>{`${bank} $`}</Value>}\n        {totalBets && <Value>{totalBets}</Value>}\n        {wonBets && <Value>{wonBets}</Value>}\n        {lostBets && <Value>{lostBets}</Value>}\n      </UserMetrics>\n    </Wrapper>\n  );\n};\n\nexport default ListItem;\n","import styled from '@emotion/styled';\nimport { IWrapper } from 'types/IDropDownListState';\n\nexport const Wrapper = styled.div<IWrapper>`\n  position: absolute;\n  top: ${({ top }) => (top ? top : '')};\n  right: ${({ right }) => (right ? right : '')};\n  left: ${({ left }) => (left ? left : '')};\n  bottom: ${({ bottom }) => (bottom ? bottom : '')};\n\n  width: 227px;\n\n  border: 3px solid var(--brown-color);\n  border-radius: 8px;\n  color: var(--brown-color);\n\n  font-size: 19px;\n  line-height: 24px;\n\n  cursor: default;\n  overflow: hidden;\n  z-index: 99;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 10px;\n`;\n\nexport const Option = styled.div`\n  background-color: #fff9ed;\n  padding: 10px;\n\n  transition: background var(--hover-effect);\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background: #fde3a7;\n  }\n`;\n","import { useState } from 'react';\n\nimport IconSwitcher from '../IconSwitcher';\n\nimport { IDropDownListState } from 'types/IDropDownListState';\nimport { Wrapper, Header, Option } from './DropDownList.styled';\n\nconst DropDownList: React.FC<IDropDownListState> = ({\n  options,\n  label,\n  getValue,\n  top,\n  bottom,\n  left,\n  right,\n}) => {\n  const [option, setOption] = useState<null | string>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const selectOption = (e: React.MouseEvent<HTMLParagraphElement>) => {\n    const value = e.currentTarget.textContent;\n    setOption(value);\n    getValue(value as string);\n  };\n\n  const toogle = () => setIsOpen(prevState => !prevState);\n\n  return (\n    <Wrapper top={top} bottom={bottom} left={left} right={right}>\n      <div onClick={toogle}>\n        <Header>\n          <p>{option ? option : label}</p>\n          <IconSwitcher\n            name=\"arrowdown\"\n            size=\"24px\"\n            fill=\"var(--brown-color)\"\n          />\n        </Header>\n        {isOpen && (\n          <div>\n            {options.map(item => (\n              <Option key={item} onClick={selectOption}>\n                {item}\n              </Option>\n            ))}\n          </div>\n        )}\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default DropDownList;\n","import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const Title = styled.h1`\n  text-transform: uppercase;\n  font-size: 30px;\n  font-weight: 900;\n\n  margin-bottom: 10px;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const CategoriesList = styled.ul`\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const CategoriesItem = styled.li`\n  width: 90px;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nexport const List = styled.ul`\n  width: 100%;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 15px;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n","import useRating from 'hooks/useRating';\n\nimport Container from 'components/InterfaceElements/Container';\nimport ListItem from '../ListItem';\nimport Button from 'components/InterfaceElements/Button';\nimport DropDownList from 'components/InterfaceElements/DropDownList';\n\nimport { Wrapper, Title, List, Item } from '../Rating.styled';\n\nconst Mobile: React.FC<{}> = () => {\n  const { disabledbutton, getSortOption, showMore, sorting, users } =\n    useRating();\n  sorting();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"300px\"\n      padding=\"100px 10px 10px 10px\"\n      margin=\"0 0 80px 0\"\n    >\n      <Wrapper>\n        <DropDownList\n          options={[\n            'EXPERIENCE',\n            'LEVEL',\n            'BANK',\n            'TOTAL BETS',\n            'WON BETS',\n            'LOST BETS',\n          ]}\n          label=\"Sort by...\"\n          top=\"15px\"\n          right=\"15px\"\n          getValue={getSortOption}\n        />\n        <Title>Rating</Title>\n      </Wrapper>\n\n      <List>\n        {users &&\n          users.map((user, item) => {\n            return (\n              <Item key={user._id}>\n                <ListItem\n                  position={item + 1}\n                  avatar={user.avatarURL ? user.avatarURL : ''}\n                  name={user.name ? user.name : ''}\n                />\n              </Item>\n            );\n          })}\n      </List>\n\n      <Button\n        type=\"button\"\n        background=\"green\"\n        borderRadius=\"50px\"\n        height=\"60px\"\n        width=\"100%\"\n        shadow\n        margin=\"50px auto 0 auto\"\n        onClick={showMore}\n        disabled={disabledbutton()}\n      >\n        Show more\n      </Button>\n    </Container>\n  );\n};\nexport default Mobile;\n","import useRating from 'hooks/useRating';\n\nimport Container from 'components/InterfaceElements/Container';\nimport ListItem from '../ListItem';\nimport Button from 'components/InterfaceElements/Button';\nimport DropDownList from 'components/InterfaceElements/DropDownList';\n\nimport {\n  Wrapper,\n  Title,\n  CategoriesList,\n  CategoriesItem,\n  List,\n  Item,\n} from '../Rating.styled';\n\nconst Tablet: React.FC<{}> = () => {\n  const { disabledbutton, getSortOption, showMore, sorting, users } =\n    useRating();\n  sorting();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"680px\"\n      padding=\"40px 10px 10px 10px\"\n      margin=\"50px 0 80px 0\"\n    >\n      <Wrapper>\n        <DropDownList\n          options={[\n            'EXPERIENCE',\n            'LEVEL',\n            'BANK',\n            'TOTAL BETS',\n            'WON BETS',\n            'LOST BETS',\n          ]}\n          label=\"Sort by...\"\n          top=\"15px\"\n          right=\"15px\"\n          getValue={getSortOption}\n        />\n        <Title>Rating</Title>\n        <CategoriesList>\n          <CategoriesItem>Experience</CategoriesItem>\n          <CategoriesItem>Level</CategoriesItem>\n          <CategoriesItem>Bank</CategoriesItem>\n          <CategoriesItem>Total bets</CategoriesItem>\n          <CategoriesItem>Won bets</CategoriesItem>\n          <CategoriesItem>Lost Bets</CategoriesItem>\n        </CategoriesList>\n      </Wrapper>\n\n      <List>\n        {users &&\n          users.map((user, item) => {\n            return (\n              <Item key={user._id}>\n                <ListItem\n                  position={item + 1}\n                  avatar={user.avatarURL ? user.avatarURL : ''}\n                  name={user.name ? user.name : ''}\n                  bank={user.bank ? user.bank : 0}\n                  experience={\n                    user.level?.experience ? user.level?.experience : 0\n                  }\n                  level={user.level?.level ? user.level?.level : 0}\n                  lostBets={\n                    user.statistics?.lostBets ? user.statistics?.lostBets : 0\n                  }\n                  totalBets={\n                    user.statistics?.totalBets ? user.statistics?.totalBets : 0\n                  }\n                  wonBets={\n                    user.statistics?.wonBets ? user.statistics?.wonBets : 0\n                  }\n                />\n              </Item>\n            );\n          })}\n      </List>\n\n      <Button\n        type=\"button\"\n        background=\"green\"\n        borderRadius=\"50px\"\n        height=\"60px\"\n        width=\"500px\"\n        shadow\n        margin=\"50px auto 0 auto\"\n        onClick={showMore}\n        disabled={disabledbutton()}\n      >\n        Show more\n      </Button>\n    </Container>\n  );\n};\nexport default Tablet;\n","import useRating from 'hooks/useRating';\n\nimport Container from 'components/InterfaceElements/Container';\nimport ListItem from '../ListItem';\nimport Button from 'components/InterfaceElements/Button';\nimport DropDownList from 'components/InterfaceElements/DropDownList';\n\nimport {\n  Wrapper,\n  Title,\n  CategoriesList,\n  CategoriesItem,\n  List,\n  Item,\n} from '../Rating.styled';\n\nconst Desktop: React.FC<{}> = () => {\n  const { disabledbutton, getSortOption, showMore, sorting, users } =\n    useRating();\n  sorting();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"1050px\"\n      padding=\"70px 50px\"\n      margin=\"50px\"\n    >\n      <Wrapper>\n        <DropDownList\n          options={[\n            'EXPERIENCE',\n            'LEVEL',\n            'BANK',\n            'TOTAL BETS',\n            'WON BETS',\n            'LOST BETS',\n          ]}\n          label=\"Sort by...\"\n          top=\"15px\"\n          right=\"15px\"\n          getValue={getSortOption}\n        />\n        <Title>Rating</Title>\n        <CategoriesList>\n          <CategoriesItem>Experience</CategoriesItem>\n          <CategoriesItem>Level</CategoriesItem>\n          <CategoriesItem>Bank</CategoriesItem>\n          <CategoriesItem>Total bets</CategoriesItem>\n          <CategoriesItem>Won bets</CategoriesItem>\n          <CategoriesItem>Lost Bets</CategoriesItem>\n        </CategoriesList>\n      </Wrapper>\n\n      <List>\n        {users &&\n          users.map((user, item) => {\n            return (\n              <Item key={user._id}>\n                <ListItem\n                  position={item + 1}\n                  avatar={user.avatarURL ? user.avatarURL : ''}\n                  name={user.name ? user.name : ''}\n                  bank={user.bank ? user.bank : 0}\n                  experience={\n                    user.level?.experience ? user.level?.experience : 0\n                  }\n                  level={user.level?.level ? user.level?.level : 0}\n                  lostBets={\n                    user.statistics?.lostBets ? user.statistics?.lostBets : 0\n                  }\n                  totalBets={\n                    user.statistics?.totalBets ? user.statistics?.totalBets : 0\n                  }\n                  wonBets={\n                    user.statistics?.wonBets ? user.statistics?.wonBets : 0\n                  }\n                />\n              </Item>\n            );\n          })}\n      </List>\n\n      <Button\n        type=\"button\"\n        background=\"green\"\n        borderRadius=\"50px\"\n        height=\"60px\"\n        width=\"500px\"\n        shadow\n        margin=\"50px auto 0 auto\"\n        onClick={showMore}\n        disabled={disabledbutton()}\n      >\n        Show more\n      </Button>\n    </Container>\n  );\n};\nexport default Desktop;\n","import Media from 'react-media';\nimport screenWidth from 'helpers/screenWidth';\n\nimport Mobile from './Responsiv/Mobile';\nimport Tablet from './Responsiv/Tablet';\nimport Desktop from './Responsiv/Desktop';\n\nconst Rating: React.FC<{}> = () => {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 767px)',\n        medium: `(min-width: ${screenWidth.tablet}) and (max-width: 1439px)`,\n        large: `(min-width: ${screenWidth.desktop})`,\n      }}\n    >\n      {matches => (\n        <>\n          {matches.small && <Mobile />}\n          {matches.medium && <Tablet />}\n          {matches.large && <Desktop />}\n        </>\n      )}\n    </Media>\n  );\n};\n\nexport default Rating;\n","import Rating from 'components/Rating';\n\nconst RatingPage: React.FC<{}> = () => {\n  return <Rating />;\n};\n\nexport default RatingPage;\n"],"names":["getAllUsers","page","api","API_URL","data","console","log","useState","setPage","users","setUsers","totalUsers","setTotalUsers","sortOption","setSortOption","soundOff","useAppSelector","getSoundOff","useSound","sounds","sprite","soundEnabled","play","useEffect","allUsers","total","prevState","undefined","showMore","id","disabledbutton","length","sorting","sort","a","b","level","experience","bank","statistics","totalBets","wonBets","lostBets","getSortOption","value","Wrapper","styled","Position","position","bluePositionBg","greenPositionBg","screenWidth","Number","UserInfo","Avatar","Name","UserMetrics","Value","avatar","name","src","alt","top","right","left","bottom","Header","Option","options","label","getValue","option","setOption","isOpen","setIsOpen","selectOption","e","currentTarget","textContent","onClick","IconSwitcher","size","fill","map","item","Title","CategoriesList","CategoriesItem","List","Item","useRating","Container","type","width","padding","margin","user","avatarURL","_id","Button","background","borderRadius","height","shadow","disabled","queries","small","medium","large","matches"],"sourceRoot":""}