{"version":3,"file":"static/js/747.fd12a348.chunk.js","mappings":"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","sources":["helpers/betTypes.ts","helpers/dateFormatting.ts","hooks/useCoefficient.ts","hooks/useProfile.ts","hooks/useEditAvatar.ts","components/Modal/EditAvatar/EditAvatar.styled.ts","components/Modal/EditAvatar/EditAvatar.tsx","hooks/useEditEmail.ts","helpers/validationSchemas/editEmailSchema.ts","components/Modal/EditEmail/EditEmail.styled.ts","components/Modal/EditEmail/EditEmail.tsx","hooks/useEditPassword.ts","helpers/validationSchemas/editPasswordSchema.ts","components/Modal/EditPassword/EditPassword.tsx","hooks/useEditComplexity.ts","helpers/validationSchemas/editComplexitySchema.ts","components/Modal/EditComplexity/EditComplexity.styled.ts","components/Modal/EditComplexity/EditComplexity.tsx","hooks/useMyItems.ts","components/Profile/MyItems/MyItems.styled.ts","components/Profile/MyItems/MyItems.tsx","components/Profile/EmptyList/EmptyList.styled.ts","components/Profile/EmptyList/EmptyList.tsx","components/Profile/Profile.styled.ts","components/Profile/Responsiv/Mobile.tsx","components/Profile/Responsiv/Tablet.tsx","components/Profile/Responsiv/Desktop.tsx","components/Profile/Profile.tsx","pages/ProfilePage.tsx"],"sourcesContent":["const types = {\n  ZERO: 'zero',\n  NUMBER: 'number',\n  HIGH: 'high',\n  LOW: 'low',\n  EVEN: 'even',\n  ODD: 'odd',\n  BLACK: 'black',\n  RED: 'red',\n  DOZEN_1: 'dozen-1',\n  DOZEN_2: 'dozen-2',\n  DOZEN_3: 'dozen-3',\n  COLUMN_1: 'column-1',\n  COLUMN_2: 'column-2',\n  COLUMN_3: 'column-3',\n};\n\nexport default types;\n","const dateFormatting = (date: string) => {\n  if (date) {\n    return date.slice(0, 19).replace('T', ' ');\n  }\n};\n\nexport default dateFormatting;\n","import types from 'helpers/betTypes';\n\nconst useCoefficient = () => {\n  const coefficientInfo = {\n    low: {\n      type: 'low',\n      coefficient: {\n        number: 5.7,\n        bottomRow: 4.2,\n        oneFromTwo: 3.2,\n      },\n      initialFunds: 3200,\n      experience: 30,\n    },\n    medium: {\n      type: 'medium',\n      coefficient: {\n        number: 3.2,\n        bottomRow: 2.1,\n        oneFromTwo: 1.7,\n      },\n      initialFunds: 1600,\n      experience: 20,\n    },\n    high: {\n      type: 'high',\n      coefficient: {\n        number: 1.9,\n        bottomRow: 1.5,\n        oneFromTwo: 1.3,\n      },\n      initialFunds: 700,\n      experience: 10,\n    },\n  };\n\n  const getCoefficient = (\n    complexity: string | null | undefined,\n    type: string | null,\n  ) => {\n    switch (complexity) {\n      case coefficientInfo.low.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.low.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.low.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.low.coefficient.bottomRow;\n        }\n        return 0;\n\n      case coefficientInfo.medium.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.medium.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.medium.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.medium.coefficient.bottomRow;\n        }\n        return 0;\n\n      case coefficientInfo.high.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.high.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.high.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.high.coefficient.bottomRow;\n        }\n        return 0;\n\n      default:\n        return 0;\n    }\n  };\n\n  return {\n    coefficientInfo,\n    getCoefficient,\n  };\n};\n\nexport default useCoefficient;\n","import { useState } from 'react';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport { useGetLevelInfoQuery } from 'redux/level/levelApi';\nimport useSound from 'use-sound';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport { getUser, getProducts } from 'redux/user/userSelectors';\nimport moment from 'moment';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { IDeleteSessionRes } from 'types/IUserRessponse';\n\nconst useProfile = () => {\n  const [showEditAvatarModal, setShowEditAvatarModal] = useState(false);\n  const [showEditEmailModal, setShowEditEmailModal] = useState(false);\n  const [showEditPasswordModal, setShowEditPasswordModal] = useState(false);\n  const [showEditComplexityModal, setShowEditComplexityModal] = useState(false);\n  const [showDeleteSessionModal, setshowDeleteSessionModal] = useState(false);\n\n  const user = useAppSelector(getUser);\n  const products = useAppSelector(getProducts);\n  const dispatch = useAppDispatch();\n  const { data } = useGetLevelInfoQuery();\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  const age = () => {\n    if (user.dateBirth) {\n      return user.dateBirth?.length > 9\n        ? Number.parseInt(moment(user.dateBirth).fromNow(true))\n        : 0;\n    }\n  };\n\n  const deleteGameSession = async () => {\n    const res = await dispatch(operations.deleteSession());\n    play({ id: 'counter_click' });\n\n    if ((res.payload as IDeleteSessionRes).status === 'ok') {\n      setshowDeleteSessionModal(false);\n    }\n  };\n\n  const switchEditAvatarModal = (state: boolean) => {\n    setShowEditAvatarModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  const switchEditEmailModal = (state: boolean) => {\n    setShowEditEmailModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  const switchEditPasswordModal = (state: boolean) => {\n    setShowEditPasswordModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  const switchEditComplexityModal = (state: boolean) => {\n    setShowEditComplexityModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  const switchDeleteSessionModal = (state: boolean) => {\n    setshowDeleteSessionModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  return {\n    showEditAvatarModal,\n    switchEditAvatarModal,\n    showEditEmailModal,\n    switchEditEmailModal,\n    showEditPasswordModal,\n    switchEditPasswordModal,\n    showEditComplexityModal,\n    switchEditComplexityModal,\n    showDeleteSessionModal,\n    switchDeleteSessionModal,\n    data,\n    age,\n    deleteGameSession,\n    user,\n    products,\n  };\n};\n\nexport default useProfile;\n","import { useState } from 'react';\nimport { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport { IChangeAvatarRes } from 'types/IUserRessponse';\n\nconst useEditAvatar = (onClose: () => void) => {\n  const dispatch = useAppDispatch();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [fileInputState, setFileInputState] = useState('');\n  const [selectedFile, setSelectedFile] = useState<null | File | Blob>(null);\n  const [previewSource, setPreviewSource] = useState<\n    string | ArrayBuffer | null\n  >('');\n\n  const changeAvatar = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (selectedFile) {\n      previewFile(selectedFile);\n      setIsLoading(true);\n      const data = new FormData();\n      data.append('avatar', selectedFile);\n\n      if (!data) return;\n\n      const res = await dispatch(operations.changeAvatar(data));\n\n      if ((res.payload as IChangeAvatarRes).status === 'ok') {\n        onClose();\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const handleFileInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = (e.target.files as FileList)[0];\n    previewFile(file);\n    setSelectedFile(file);\n    setFileInputState(e.target.value);\n  };\n\n  const previewFile = (file: Blob) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  return {\n    changeAvatar,\n    previewSource,\n    handleFileInputChange,\n    fileInputState,\n    isLoading,\n  };\n};\n\nexport default useEditAvatar;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 150px;\n  margin-bottom: 50px;\n\n  background-color: var(--brown-transparent);\n  border-radius: 30px;\n`;\n\nexport const Input = styled.input`\n  font-size: 26px;\n  font-weight: 900;\n  font-family: inherit;\n\n  color: var(--white-color);\n  background-color: var(--brown-color);\n`;\n\nexport const Preview = styled.img`\n  width: 150px;\n  margin-left: 50%;\n  transform: translate(-50%);\n  margin-bottom: 50px;\n`;\n","import useEditAvatar from 'hooks/useEditAvatar';\n\nimport Button from 'components/InterfaceElements/Button';\nimport Loader from 'components/InterfaceElements/Loader';\n\nimport { Text, Label, Input, Preview } from './EditAvatar.styled';\n\nconst EditAvatar: React.FC<{ onClose(): void }> = ({ onClose }) => {\n  const {\n    changeAvatar,\n    previewSource,\n    handleFileInputChange,\n    fileInputState,\n    isLoading,\n  } = useEditAvatar(onClose);\n\n  return (\n    <form encType=\"multipart/from-data\" onSubmit={changeAvatar}>\n      <Text>\n        The selected file must be in one of the following formats \".jpg, .png,\n        .svg\". The file must not exceed 2MB. A square image is best.\n      </Text>\n      <Label>\n        <Input\n          type=\"file\"\n          name=\"avatar\"\n          multiple\n          accept=\".jpg, .png, .svg\"\n          onChange={handleFileInputChange}\n          value={fileInputState}\n        />\n      </Label>\n\n      {previewSource && <Preview src={previewSource as string} alt=\"chosen\" />}\n\n      <Button\n        type=\"submit\"\n        background=\"green\"\n        borderRadius=\"50px\"\n        height=\"50px\"\n        width=\"100%\"\n        shadow\n      >\n        change avatar\n      </Button>\n\n      {isLoading && <Loader />}\n    </form>\n  );\n};\n\nexport default EditAvatar;\n","import { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\n\nimport { IEditEmailData } from 'types/IProfile';\nimport { IChangeEmailRes } from 'types/IUserRessponse';\n\nconst useEditEmail = (onClose: () => void) => {\n  const dispatch = useAppDispatch();\n\n  const initialValues = {\n    email: '',\n  };\n\n  const changeEmail = async (values: IEditEmailData) => {\n    const res = await dispatch(operations.changeEmail(values));\n\n    if ((res.payload as IChangeEmailRes).status === 'ok') {\n      onClose();\n    }\n  };\n\n  return { initialValues, changeEmail };\n};\n\nexport default useEditEmail;\n","import * as yup from 'yup';\n\nconst editEmailSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('The email address must be valid and existing.')\n    .required('The email field is required and cannot be empty.'),\n});\n\nexport default editEmailSchema;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n","import useEditEmail from 'hooks/useEditEmail';\n\nimport { Formik, Form } from 'formik';\nimport EntryField from 'components/InterfaceElements/EntryField';\nimport Button from 'components/InterfaceElements/Button';\n\nimport editEmailSchema from 'helpers/validationSchemas/editEmailSchema';\nimport { Text } from './EditEmail.styled';\n\nconst EditEmail: React.FC<{ onClose(): void }> = ({ onClose }) => {\n  const { changeEmail, initialValues } = useEditEmail(onClose);\n\n  return (\n    <>\n      <Text>\n        After changing your email, you will need to re-verify your email.\n      </Text>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={changeEmail}\n        validationSchema={editEmailSchema}\n      >\n        {({ values, handleSubmit, handleChange }) => (\n          <Form onSubmit={handleSubmit}>\n            <EntryField\n              label=\"email\"\n              type=\"email\"\n              name=\"email\"\n              value={values.email}\n              onChange={handleChange}\n              placeholder=\"Enter your e-mail\"\n              required={true}\n              height=\"50px\"\n              width=\"100%\"\n              margin=\"0 0 30px 0\"\n            />\n\n            <Button\n              type=\"submit\"\n              background=\"green\"\n              width=\"100%\"\n              height=\"60px\"\n              borderRadius=\"50px\"\n              shadow\n            >\n              Sign up\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default EditEmail;\n","import { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\n\nimport { IEditPasswordData } from 'types/IProfile';\nimport { IChangePasswordRes } from 'types/IUserRessponse';\n\nconst useEditPassword = (onClose: () => void) => {\n  const dispatch = useAppDispatch();\n\n  const initialValues = {\n    password: '',\n    newPassword: '',\n    passwordAgain: '',\n  };\n\n  const changePassword = async (values: IEditPasswordData) => {\n    const passwords = {\n      password: values.password,\n      newPassword: values.newPassword,\n    };\n\n    const res = await dispatch(operations.changePassword(passwords));\n    if ((res.payload as IChangePasswordRes).status === 'ok') {\n      onClose();\n    }\n  };\n\n  return { initialValues, changePassword };\n};\n\nexport default useEditPassword;\n","import * as yup from 'yup';\n\nconst editPasswordSchema = yup.object().shape({\n  password: yup\n    .string()\n    .min(6, 'The minimum password length must be 6 characters.')\n    .max(12, 'The maximum password length must not exceed 12 characters.')\n    .required('The password field is required and cannot be empty.'),\n  newPassword: yup\n    .string()\n    .min(6, 'The minimum password length must be 6 characters.')\n    .max(12, 'The maximum password length must not exceed 12 characters.')\n    .required('The password field is required and cannot be empty.'),\n  passwordAgain: yup\n    .string()\n    .oneOf([yup.ref('newPassword')], 'Passwords must match'),\n});\n\nexport default editPasswordSchema;\n","import useEditPassword from 'hooks/useEditPassword';\n\nimport { Formik, Form } from 'formik';\nimport EntryField from 'components/InterfaceElements/EntryField';\nimport Button from 'components/InterfaceElements/Button';\n\nimport editPasswordSchema from 'helpers/validationSchemas/editPasswordSchema';\n\nconst EditPassword: React.FC<{ onClose(): void }> = ({ onClose }) => {\n  const { changePassword, initialValues } = useEditPassword(onClose);\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={changePassword}\n      validationSchema={editPasswordSchema}\n    >\n      {({ values, handleSubmit, handleChange }) => (\n        <Form onSubmit={handleSubmit}>\n          <EntryField\n            label=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n            required={true}\n            height=\"50px\"\n            width=\"100%\"\n            margin=\"0 0 30px 0\"\n          />\n\n          <EntryField\n            label=\"new password\"\n            type=\"password\"\n            name=\"newPassword\"\n            value={values.newPassword}\n            onChange={handleChange}\n            required={true}\n            height=\"50px\"\n            width=\"100%\"\n            margin=\"0 0 30px 0\"\n          />\n\n          <EntryField\n            label=\"password again\"\n            type=\"password\"\n            name=\"passwordAgain\"\n            value={values.passwordAgain}\n            onChange={handleChange}\n            required={true}\n            height=\"50px\"\n            width=\"100%\"\n            margin=\"0 0 30px 0\"\n          />\n\n          <Button\n            type=\"submit\"\n            background=\"green\"\n            width=\"100%\"\n            height=\"60px\"\n            borderRadius=\"50px\"\n            shadow\n          >\n            Sign up\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditPassword;\n","import { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport useCoefficient from 'hooks/useCoefficient';\n\nimport { IEditComplexityData } from 'types/IProfile';\nimport { IChangeComplexityRes } from 'types/IUserRessponse';\n\nconst useEditComplexity = (\n  onClose: () => void,\n  complexity?: 'low' | 'medium' | 'high' | null,\n) => {\n  const dispatch = useAppDispatch();\n  const { coefficientInfo } = useCoefficient();\n\n  const initialValues = {\n    complexity,\n  };\n\n  const changeComplexity = async (values: IEditComplexityData) => {\n    if (values.complexity !== null && values.complexity !== undefined) {\n      const res = await dispatch(\n        operations.changeComplexity({\n          complexity: values.complexity,\n          bank: coefficientInfo[values.complexity].initialFunds,\n        }),\n      );\n\n      if ((res.payload as IChangeComplexityRes).status === 'ok') {\n        onClose();\n      }\n    }\n  };\n\n  return { initialValues, changeComplexity };\n};\n\nexport default useEditComplexity;\n","import * as yup from 'yup';\n\nconst editComplexitySchema = yup.object().shape({\n  complexity: yup\n    .string()\n    .required('The complexity field is required and cannot be empty.'),\n});\n\nexport default editComplexitySchema;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  margin-bottom: 30px;\n`;\n","import useEditComplexity from 'hooks/useEditComplexity';\n\nimport { Formik, Form } from 'formik';\nimport Button from 'components/InterfaceElements/Button';\nimport RadioButton from 'components/InterfaceElements/RadioButton';\n\nimport editComplexitySchema from 'helpers/validationSchemas/editComplexitySchema';\nimport { IEditComplexityState } from 'types/IEditComplexity';\n\nimport { Text, Wrapper } from './EditComplexity.styled';\n\nconst EditComplexity: React.FC<IEditComplexityState> = ({\n  onClose,\n  complexity,\n}) => {\n  const { changeComplexity, initialValues } = useEditComplexity(\n    onClose,\n    complexity,\n  );\n\n  return (\n    <>\n      <Text>\n        After changing the difficulty level, the rules for calculating rewards\n        and experience will change.\n      </Text>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={changeComplexity}\n        validationSchema={editComplexitySchema}\n      >\n        {({ values, handleSubmit, handleChange }) => (\n          <Form onSubmit={handleSubmit}>\n            <Wrapper>\n              <RadioButton\n                label=\"low\"\n                name=\"complexity\"\n                value=\"low\"\n                checked={values.complexity === 'low'}\n              />\n\n              <RadioButton\n                label=\"medium\"\n                name=\"complexity\"\n                value=\"medium\"\n                checked={values.complexity === 'medium'}\n              />\n\n              <RadioButton\n                label=\"high\"\n                name=\"complexity\"\n                value=\"high\"\n                checked={values.complexity === 'high'}\n              />\n            </Wrapper>\n\n            <Button\n              type=\"submit\"\n              background=\"green\"\n              width=\"100%\"\n              height=\"60px\"\n              borderRadius=\"50px\"\n              shadow\n            >\n              change\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default EditComplexity;\n","import { useState } from 'react';\nimport { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport useSound from 'use-sound';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { toast } from 'react-toastify';\n\nconst useMyItems = () => {\n  const [showDialog, setShowDialog] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState<null | number>(null);\n  const [currentPrice, setCurrentPrice] = useState<null | number>(null);\n  const [halfPrice, setHalfPrice] = useState(0);\n\n  const dispatch = useAppDispatch();\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  const openDialogWindow = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    setShowDialog(true);\n    play({ id: 'counter_click' });\n\n    const index = e.currentTarget.dataset.index;\n    const price = e.currentTarget.dataset.price;\n\n    if (index !== undefined && price !== undefined) {\n      setCurrentIndex(Number(index));\n      setCurrentPrice(Number(price));\n      setHalfPrice(Number(price) / 2);\n    }\n  };\n\n  const closeDialogWindow = () => {\n    setShowDialog(false);\n    play({ id: 'counter_click' });\n  };\n\n  const sell = () => {\n    if (currentIndex !== null && currentPrice !== null) {\n      dispatch(\n        operations.sellItem({ index: currentIndex, price: currentPrice / 2 }),\n      );\n      closeDialogWindow();\n      toast.success(\"You have successfully sold an item you don't want.\");\n      play({ id: 'sound_victory' });\n    }\n  };\n\n  return {\n    openDialogWindow,\n    closeDialogWindow,\n    sell,\n    showDialog,\n    currentPrice,\n    halfPrice,\n  };\n};\n\nexport default useMyItems;\n","import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nexport const List = styled.ul`\n  width: 100%;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    display: flex;\n    flex-wrap: wrap;\n\n    margin: -5px;\n  }\n`;\n\nexport const Item = styled.li`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 15px;\n\n  border: 3px solid var(--white-transparent);\n  border-radius: 10px;\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 10px;\n\n    :last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    width: calc((100% - 4 * 5px) / 2);\n    margin: 5px;\n  }\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    width: calc((100% - 8 * 5px) / 4);\n    margin: 5px;\n  }\n`;\n\nexport const Photo = styled.img`\n  max-height: 150px;\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.p`\n  font-weight: 900;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n`;\n\nexport const Price = styled.p`\n  color: var(--green-color);\n`;\n\nexport const ButtonWrapper = styled.div`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n`;\n","import useMyItems from 'hooks/useMyItems';\nimport bankFormatting from 'helpers/bankFormatting';\n\nimport Button from 'components/InterfaceElements/Button';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport Modal from 'components/Modal';\nimport DialogWindow from 'components/Modal/DialogWindow';\n\nimport { IItem } from 'types/IStore';\nimport { List, Item, Photo, Title, Price, ButtonWrapper } from './MyItems.styled';\n\nconst MyItems: React.FC<{ products: IItem[] }> = ({ products }) => {\n  const { closeDialogWindow, openDialogWindow, sell, currentPrice, halfPrice, showDialog } =\n    useMyItems();\n\n  return (\n    <>\n      <List>\n        {products.map(({ imageURL, title, price }, index) => (\n          <Item key={index}>\n            <Photo src={imageURL} alt={title} />\n            <Title>{title}</Title>\n            <Price>{bankFormatting(Number(price).toFixed(2))} $</Price>\n            <ButtonWrapper>\n              <Button\n                type=\"button\"\n                background=\"green\"\n                width=\"40px\"\n                height=\"40px\"\n                borderRadius=\"10px\"\n                onClick={openDialogWindow}\n                data-index={index}\n                data-price={price}\n              >\n                <IconSwitcher name=\"dollar\" size=\"22px\" fill=\"var(--white-color)\" />\n              </Button>\n            </ButtonWrapper>\n          </Item>\n        ))}\n      </List>\n\n      {showDialog && (\n        <Modal title=\"Are you sure you want to sell this item?\" onClose={closeDialogWindow}>\n          <DialogWindow\n            successBtnText=\"Sell\"\n            failureBtnText=\"Cancel\"\n            onFailure={closeDialogWindow}\n            onSuccess={sell}\n            text={`The price of this item on the market is ${bankFormatting(\n              Number(currentPrice).toFixed(2),\n            )} $ do you really want to sell it for half the price? You can only get ${bankFormatting(\n              Number(halfPrice).toFixed(2),\n            )} $`}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default MyItems;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 100%;\n  padding: 40px;\n\n  border: 3px solid var(--white-transparent);\n  border-radius: 20px;\n`;\n\nexport const Text = styled.p`\n  font-size: 22px;\n  font-weight: 900;\n  margin-bottom: 25px;\n`;\n","import { useNavigate } from 'react-router-dom';\nimport Button from 'components/InterfaceElements/Button';\nimport { Wrapper, Text } from './EmptyList.styled';\n\nconst EmptyList: React.FC<{}> = () => {\n  const navigate = useNavigate();\n\n  return (\n    <Wrapper>\n      <Text>You haven't bought anything yet.... :(</Text>\n\n      <Button\n        type=\"button\"\n        background=\"green\"\n        height=\"60px\"\n        width=\"650px\"\n        borderRadius=\"50px\"\n        shadow\n        onClick={() => navigate('/store')}\n      >\n        go to the store\n      </Button>\n    </Wrapper>\n  );\n};\n\nexport default EmptyList;\n","import styled from '@emotion/styled';\nimport screenWidth from 'helpers/screenWidth';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  padding-bottom: 50px;\n`;\n\nexport const Header = styled.div`\n  margin-bottom: 50px;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  margin-bottom: 30px;\n\n  border-bottom: 2px dotted var(--brown-color);\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Avatar = styled.img`\n  width: 100%;\n  height: auto;\n\n  opacity: 1;\n\n  cursor: pointer;\n  transition: border-color var(--hover-effect), opacity var(--hover-effect);\n\n  :hover,\n  :focus {\n    border-color: var(--brown-color);\n    opacity: 0.7;\n  }\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 30px;\n  }\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    position: absolute;\n    top: -50px;\n    left: 50px;\n\n    width: 93px;\n    height: 93px;\n\n    border-radius: 50%;\n    border: 3px solid var(--white-color);\n  }\n`;\n\nexport const Name = styled.p`\n  font-size: 30px;\n  font-weight: 900;\n  margin-bottom: 50px;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    font-size: 34px;\n  }\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    font-size: 44px;\n  }\n`;\n\nexport const Nickname = styled.span`\n  font-size: 18px;\n  color: var(--green-color);\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    font-size: 20px;\n  }\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    font-size: 24px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 12px;\n  margin-bottom: 15px;\n\n  @media screen and (min-width: ${screenWidth.tablet}) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    font-size: 20px;\n  }\n`;\n\nexport const Value = styled.span`\n  margin-right: 5px;\n\n  @media screen and (max-width: 767px) {\n    font-size: 12px;\n    margin-right: 10px;\n  }\n\n  @media screen and (min-width: ${screenWidth.desktop}) {\n    text-transform: uppercase;\n  }\n`;\n\nexport const EditBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: transparent;\n  border: none;\n  outline: none;\n\n  cursor: pointer;\n  transition: opacity var(--hover-effect);\n\n  :hover,\n  :focus {\n    opacity: 0.5;\n  }\n`;\n","import useProfile from 'hooks/useProfile';\nimport dateFormatting from 'helpers/dateFormatting';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Modal from 'components/Modal';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport EditAvatar from 'components/Modal/EditAvatar';\nimport EditEmail from 'components/Modal/EditEmail';\nimport EditPassword from 'components/Modal/EditPassword';\nimport EditComplexity from 'components/Modal/EditComplexity';\nimport DialogWindow from 'components/Modal/DialogWindow';\nimport MyItems from '../MyItems';\nimport EmptyList from '../EmptyList';\n\nimport {\n  Wrapper,\n  Header,\n  Item,\n  Avatar,\n  Nickname,\n  Name,\n  Text,\n  Value,\n  EditBtn,\n} from '../Profile.styled';\n\nconst Mobile: React.FC<{}> = () => {\n  const {\n    age,\n    data,\n    deleteGameSession,\n    switchEditAvatarModal,\n    switchEditComplexityModal,\n    switchEditEmailModal,\n    switchEditPasswordModal,\n    showDeleteSessionModal,\n    showEditAvatarModal,\n    showEditComplexityModal,\n    showEditEmailModal,\n    showEditPasswordModal,\n    switchDeleteSessionModal,\n    user,\n    products,\n  } = useProfile();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"280px\"\n      padding=\"10px\"\n      margin=\"0 0 80px 0\"\n    >\n      {user.name && (\n        <Wrapper>\n          <Header>\n            <Text>ID: {user._id}</Text>\n\n            <div>\n              <p>Account creation date:</p>\n              <Text>\n                {user.createdAt && dateFormatting(user.createdAt as string)}\n              </Text>\n              <p>Last update date:</p>\n              <Text>\n                {user.updatedAt && dateFormatting(user.updatedAt as string)}\n              </Text>\n            </div>\n          </Header>\n\n          <Avatar\n            src={user.avatarURL as string}\n            alt={`${user.name} user avatar`}\n            onClick={() => switchEditAvatarModal(true)}\n          />\n\n          <Name>\n            {user.name}\n            <br />\n            <Nickname>{user.nickname}</Nickname>\n          </Name>\n\n          <ul>\n            <Item>\n              <Text>Email:</Text>\n              <div>\n                <Value>{user.email}</Value>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() => switchEditEmailModal(true)}\n                >\n                  <IconSwitcher\n                    name=\"pen\"\n                    size=\"12px\"\n                    fill=\"var(--green-color)\"\n                  />\n                </EditBtn>\n              </div>\n            </Item>\n            <Item>\n              <Text>Password:</Text>\n              <div>\n                <Value>******</Value>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() => switchEditPasswordModal(true)}\n                >\n                  <IconSwitcher\n                    name=\"pen\"\n                    size=\"12px\"\n                    fill=\"var(--green-color)\"\n                  />\n                </EditBtn>\n              </div>\n            </Item>\n            <Item>\n              <Text>Gender:</Text>\n              <Value>{user.gender}</Value>\n            </Item>\n            <Item>\n              <Text>Date of birth:</Text>\n              <Value>{`${user.dateBirth} | ${age()}`}</Value>\n            </Item>\n            <Item>\n              <Text>Complexity:</Text>\n              <div>\n                <Value>\n                  {user.complexity\n                    ? user.complexity\n                    : 'The game session has not yet been created.'}\n                </Value>\n                {user.inGame && (\n                  <>\n                    <EditBtn\n                      type=\"button\"\n                      onClick={() => switchEditComplexityModal(true)}\n                    >\n                      <IconSwitcher\n                        name=\"pen\"\n                        size=\"12px\"\n                        fill=\"var(--green-color)\"\n                      />\n                    </EditBtn>\n                    <EditBtn\n                      type=\"button\"\n                      onClick={() => switchDeleteSessionModal(true)}\n                    >\n                      <IconSwitcher\n                        name=\"delete\"\n                        size=\"12px\"\n                        fill=\"var(--green-color)\"\n                      />\n                    </EditBtn>\n                  </>\n                )}\n              </div>\n            </Item>\n            <Item>\n              <Text>Game session:</Text>\n              <Value>\n                {user.inGame &&\n                  `Game creation date: ${\n                    data && dateFormatting(data?.level.createdAt as string)\n                  }`}\n                {!user.inGame && 'Start a new game'}\n              </Value>\n            </Item>\n          </ul>\n        </Wrapper>\n      )}\n\n      {products && products.length > 0 ? (\n        <MyItems products={products} />\n      ) : (\n        <EmptyList />\n      )}\n\n      {showEditAvatarModal && (\n        <Modal\n          title=\"Choose a new avatar\"\n          onClose={() => switchEditAvatarModal(false)}\n        >\n          <EditAvatar onClose={() => switchEditAvatarModal(false)} />\n        </Modal>\n      )}\n\n      {showEditEmailModal && (\n        <Modal title=\"Change email\" onClose={() => switchEditEmailModal(false)}>\n          <EditEmail onClose={() => switchEditEmailModal(false)} />\n        </Modal>\n      )}\n\n      {showEditPasswordModal && (\n        <Modal\n          title=\"Change password\"\n          onClose={() => switchEditPasswordModal(false)}\n        >\n          <EditPassword onClose={() => switchEditPasswordModal(false)} />\n        </Modal>\n      )}\n\n      {showEditComplexityModal && (\n        <Modal\n          title=\"Change complexity\"\n          onClose={() => switchEditComplexityModal(false)}\n        >\n          <EditComplexity\n            onClose={() => switchEditComplexityModal(false)}\n            complexity={user.complexity}\n          />\n        </Modal>\n      )}\n\n      {showDeleteSessionModal && (\n        <Modal\n          title=\"Delete current game session?\"\n          onClose={() => switchDeleteSessionModal(false)}\n        >\n          <DialogWindow\n            onFailure={() => switchDeleteSessionModal(false)}\n            onSuccess={deleteGameSession}\n            text=\"After deleting a game session, data such as betting history, statistics and game level will be lost. Are you sure you want to continue?\"\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Delete\"\n          />\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default Mobile;\n","import useProfile from 'hooks/useProfile';\nimport dateFormatting from 'helpers/dateFormatting';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Modal from 'components/Modal';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport EditAvatar from 'components/Modal/EditAvatar';\nimport EditEmail from 'components/Modal/EditEmail';\nimport EditPassword from 'components/Modal/EditPassword';\nimport EditComplexity from 'components/Modal/EditComplexity';\nimport DialogWindow from 'components/Modal/DialogWindow';\nimport MyItems from '../MyItems';\nimport EmptyList from '../EmptyList';\n\nimport {\n  Wrapper,\n  Header,\n  Item,\n  Avatar,\n  Nickname,\n  Name,\n  Text,\n  Value,\n  EditBtn,\n} from '../Profile.styled';\n\nconst Tablet: React.FC<{}> = () => {\n  const {\n    age,\n    data,\n    deleteGameSession,\n    switchEditAvatarModal,\n    switchEditComplexityModal,\n    switchEditEmailModal,\n    switchEditPasswordModal,\n    showDeleteSessionModal,\n    showEditAvatarModal,\n    showEditComplexityModal,\n    showEditEmailModal,\n    showEditPasswordModal,\n    switchDeleteSessionModal,\n    user,\n    products,\n  } = useProfile();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"680px\"\n      padding=\"40px 10px 10px 10px\"\n      margin=\"50px 0 80px 0\"\n    >\n      {user.name && (\n        <Wrapper>\n          <Header>\n            <p>ID: {user._id}</p>\n\n            <div>\n              <p>\n                Account creation date:{' '}\n                {user.createdAt && dateFormatting(user.createdAt as string)}\n              </p>\n              <p>\n                Last update date:{' '}\n                {user.updatedAt && dateFormatting(user.updatedAt as string)}\n              </p>\n            </div>\n          </Header>\n\n          <Avatar\n            src={user.avatarURL as string}\n            alt={`${user.name} user avatar`}\n            onClick={() => switchEditAvatarModal(true)}\n          />\n\n          <Name>\n            {user.name} <Nickname>{user.nickname}</Nickname>\n          </Name>\n\n          <ul>\n            <Item>\n              <Text>Email:</Text>\n              <div>\n                <Value>{user.email}</Value>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() => switchEditEmailModal(true)}\n                >\n                  <IconSwitcher\n                    name=\"pen\"\n                    size=\"16px\"\n                    fill=\"var(--green-color)\"\n                  />\n                </EditBtn>\n              </div>\n            </Item>\n            <Item>\n              <Text>Password:</Text>\n              <div>\n                <Value>******</Value>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() => switchEditPasswordModal(true)}\n                >\n                  <IconSwitcher\n                    name=\"pen\"\n                    size=\"16px\"\n                    fill=\"var(--green-color)\"\n                  />\n                </EditBtn>\n              </div>\n            </Item>\n            <Item>\n              <Text>Gender:</Text>\n              <Value>{user.gender}</Value>\n            </Item>\n            <Item>\n              <Text>Date of birth:</Text>\n              <Value>{`${user.dateBirth} | ${age()}`}</Value>\n            </Item>\n            <Item>\n              <Text>Complexity:</Text>\n              <div>\n                <Value>\n                  {user.complexity\n                    ? user.complexity\n                    : 'The game session has not yet been created.'}\n                </Value>\n                {user.inGame && (\n                  <>\n                    <EditBtn\n                      type=\"button\"\n                      onClick={() => switchEditComplexityModal(true)}\n                    >\n                      <IconSwitcher\n                        name=\"pen\"\n                        size=\"16px\"\n                        fill=\"var(--green-color)\"\n                      />\n                    </EditBtn>\n                    <EditBtn\n                      type=\"button\"\n                      onClick={() => switchDeleteSessionModal(true)}\n                    >\n                      <IconSwitcher\n                        name=\"delete\"\n                        size=\"16px\"\n                        fill=\"var(--green-color)\"\n                      />\n                    </EditBtn>\n                  </>\n                )}\n              </div>\n            </Item>\n            <Item>\n              <Text>Game session:</Text>\n              <Value>\n                {user.inGame &&\n                  `Game creation date: ${\n                    data && dateFormatting(data?.level.createdAt as string)\n                  }`}\n                {!user.inGame && 'Start a new game'}\n              </Value>\n            </Item>\n          </ul>\n        </Wrapper>\n      )}\n\n      {products && products.length > 0 ? (\n        <MyItems products={products} />\n      ) : (\n        <EmptyList />\n      )}\n\n      {showEditAvatarModal && (\n        <Modal\n          title=\"Choose a new avatar\"\n          onClose={() => switchEditAvatarModal(false)}\n        >\n          <EditAvatar onClose={() => switchEditAvatarModal(false)} />\n        </Modal>\n      )}\n\n      {showEditEmailModal && (\n        <Modal title=\"Change email\" onClose={() => switchEditEmailModal(false)}>\n          <EditEmail onClose={() => switchEditEmailModal(false)} />\n        </Modal>\n      )}\n\n      {showEditPasswordModal && (\n        <Modal\n          title=\"Change password\"\n          onClose={() => switchEditPasswordModal(false)}\n        >\n          <EditPassword onClose={() => switchEditPasswordModal(false)} />\n        </Modal>\n      )}\n\n      {showEditComplexityModal && (\n        <Modal\n          title=\"Change complexity\"\n          onClose={() => switchEditComplexityModal(false)}\n        >\n          <EditComplexity\n            onClose={() => switchEditComplexityModal(false)}\n            complexity={user.complexity}\n          />\n        </Modal>\n      )}\n\n      {showDeleteSessionModal && (\n        <Modal\n          title=\"Delete current game session?\"\n          onClose={() => switchDeleteSessionModal(false)}\n        >\n          <DialogWindow\n            onFailure={() => switchDeleteSessionModal(false)}\n            onSuccess={deleteGameSession}\n            text=\"After deleting a game session, data such as betting history, statistics and game level will be lost. Are you sure you want to continue?\"\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Delete\"\n          />\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default Tablet;\n","import useProfile from 'hooks/useProfile';\nimport dateFormatting from 'helpers/dateFormatting';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Controllers from '../Controllers';\nimport Modal from 'components/Modal';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport EditAvatar from 'components/Modal/EditAvatar';\nimport EditEmail from 'components/Modal/EditEmail';\nimport EditPassword from 'components/Modal/EditPassword';\nimport EditComplexity from 'components/Modal/EditComplexity';\nimport DialogWindow from 'components/Modal/DialogWindow';\nimport MyItems from '../MyItems';\nimport EmptyList from '../EmptyList';\n\nimport {\n  Wrapper,\n  Header,\n  Item,\n  Avatar,\n  Nickname,\n  Name,\n  Text,\n  Value,\n  EditBtn,\n} from '../Profile.styled';\n\nconst Desktop: React.FC<{}> = () => {\n  const {\n    age,\n    data,\n    deleteGameSession,\n    switchEditAvatarModal,\n    switchEditComplexityModal,\n    switchEditEmailModal,\n    switchEditPasswordModal,\n    showDeleteSessionModal,\n    showEditAvatarModal,\n    showEditComplexityModal,\n    showEditEmailModal,\n    showEditPasswordModal,\n    switchDeleteSessionModal,\n    user,\n    products,\n  } = useProfile();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"1050px\"\n      padding=\"70px 50px\"\n      margin=\"50px\"\n    >\n      <Controllers />\n\n      {user.name && (\n        <Wrapper>\n          <Header>\n            <p>ID: {user._id}</p>\n\n            <div>\n              <p>\n                Account creation date:{' '}\n                {user.createdAt && dateFormatting(user.createdAt as string)}\n              </p>\n              <p>\n                Last update date:{' '}\n                {user.updatedAt && dateFormatting(user.updatedAt as string)}\n              </p>\n            </div>\n          </Header>\n\n          <Avatar\n            src={user.avatarURL as string}\n            alt={`${user.name} user avatar`}\n            onClick={() => switchEditAvatarModal(true)}\n          />\n\n          <Name>\n            {user.name} <Nickname>{user.nickname}</Nickname>\n          </Name>\n\n          <ul>\n            <Item>\n              <Text>Email:</Text>\n              <div>\n                <Value>{user.email}</Value>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() => switchEditEmailModal(true)}\n                >\n                  <IconSwitcher\n                    name=\"pen\"\n                    size=\"16px\"\n                    fill=\"var(--green-color)\"\n                  />\n                </EditBtn>\n              </div>\n            </Item>\n            <Item>\n              <Text>Password:</Text>\n              <div>\n                <Value>******</Value>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() => switchEditPasswordModal(true)}\n                >\n                  <IconSwitcher\n                    name=\"pen\"\n                    size=\"16px\"\n                    fill=\"var(--green-color)\"\n                  />\n                </EditBtn>\n              </div>\n            </Item>\n            <Item>\n              <Text>Gender:</Text>\n              <Value>{user.gender}</Value>\n            </Item>\n            <Item>\n              <Text>Date of birth:</Text>\n              <Value>{`${user.dateBirth} | ${age()}`}</Value>\n            </Item>\n            <Item>\n              <Text>Complexity:</Text>\n              <div>\n                <Value>\n                  {user.complexity\n                    ? user.complexity\n                    : 'The game session has not yet been created.'}\n                </Value>\n                {user.inGame && (\n                  <>\n                    <EditBtn\n                      type=\"button\"\n                      onClick={() => switchEditComplexityModal(true)}\n                    >\n                      <IconSwitcher\n                        name=\"pen\"\n                        size=\"16px\"\n                        fill=\"var(--green-color)\"\n                      />\n                    </EditBtn>\n                    <EditBtn\n                      type=\"button\"\n                      onClick={() => switchDeleteSessionModal(true)}\n                    >\n                      <IconSwitcher\n                        name=\"delete\"\n                        size=\"16px\"\n                        fill=\"var(--green-color)\"\n                      />\n                    </EditBtn>\n                  </>\n                )}\n              </div>\n            </Item>\n            <Item>\n              <Text>Game session:</Text>\n              <Value>\n                {user.inGame &&\n                  `Game creation date: ${\n                    data && dateFormatting(data?.level.createdAt as string)\n                  }`}\n                {!user.inGame && 'Start a new game'}\n              </Value>\n            </Item>\n          </ul>\n        </Wrapper>\n      )}\n\n      {products && products.length > 0 ? (\n        <MyItems products={products} />\n      ) : (\n        <EmptyList />\n      )}\n\n      {showEditAvatarModal && (\n        <Modal\n          title=\"Choose a new avatar\"\n          onClose={() => switchEditAvatarModal(false)}\n        >\n          <EditAvatar onClose={() => switchEditAvatarModal(false)} />\n        </Modal>\n      )}\n\n      {showEditEmailModal && (\n        <Modal title=\"Change email\" onClose={() => switchEditEmailModal(false)}>\n          <EditEmail onClose={() => switchEditEmailModal(false)} />\n        </Modal>\n      )}\n\n      {showEditPasswordModal && (\n        <Modal\n          title=\"Change password\"\n          onClose={() => switchEditPasswordModal(false)}\n        >\n          <EditPassword onClose={() => switchEditPasswordModal(false)} />\n        </Modal>\n      )}\n\n      {showEditComplexityModal && (\n        <Modal\n          title=\"Change complexity\"\n          onClose={() => switchEditComplexityModal(false)}\n        >\n          <EditComplexity\n            onClose={() => switchEditComplexityModal(false)}\n            complexity={user.complexity}\n          />\n        </Modal>\n      )}\n\n      {showDeleteSessionModal && (\n        <Modal\n          title=\"Delete current game session?\"\n          onClose={() => switchDeleteSessionModal(false)}\n        >\n          <DialogWindow\n            onFailure={() => switchDeleteSessionModal(false)}\n            onSuccess={deleteGameSession}\n            text=\"After deleting a game session, data such as betting history, statistics and game level will be lost. Are you sure you want to continue?\"\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Delete\"\n          />\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default Desktop;\n","import Media from 'react-media';\nimport screenWidth from 'helpers/screenWidth';\n\nimport Mobile from './Responsiv/Mobile';\nimport Tablet from './Responsiv/Tablet';\nimport Desktop from './Responsiv/Desktop';\n\nconst Profile: React.FC<{}> = () => {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 767px)',\n        medium: `(min-width: ${screenWidth.tablet}) and (max-width: 1439px)`,\n        large: `(min-width: ${screenWidth.desktop})`,\n      }}\n    >\n      {matches => (\n        <>\n          {matches.small && <Mobile />}\n          {matches.medium && <Tablet />}\n          {matches.large && <Desktop />}\n        </>\n      )}\n    </Media>\n  );\n};\n\nexport default Profile;\n","import Profile from 'components/Profile';\n\nconst ProfilePage: React.FC<{}> = () => {\n  return <Profile />;\n};\n\nexport default ProfilePage;\n"],"names":["ZERO","NUMBER","HIGH","LOW","EVEN","ODD","BLACK","RED","DOZEN_1","DOZEN_2","DOZEN_3","COLUMN_1","COLUMN_2","COLUMN_3","date","slice","replace","coefficientInfo","low","type","coefficient","number","bottomRow","oneFromTwo","initialFunds","experience","medium","high","getCoefficient","complexity","types","useState","showEditAvatarModal","setShowEditAvatarModal","showEditEmailModal","setShowEditEmailModal","showEditPasswordModal","setShowEditPasswordModal","showEditComplexityModal","setShowEditComplexityModal","showDeleteSessionModal","setshowDeleteSessionModal","user","useAppSelector","getUser","products","getProducts","dispatch","useAppDispatch","data","useGetLevelInfoQuery","soundOff","getSoundOff","useSound","sounds","sprite","soundEnabled","play","deleteGameSession","operations","res","id","payload","status","switchEditAvatarModal","state","switchEditEmailModal","switchEditPasswordModal","switchEditComplexityModal","switchDeleteSessionModal","age","dateBirth","length","Number","parseInt","moment","fromNow","onClose","isLoading","setIsLoading","fileInputState","setFileInputState","selectedFile","setSelectedFile","previewSource","setPreviewSource","changeAvatar","e","preventDefault","previewFile","FormData","append","file","reader","FileReader","readAsDataURL","onloadend","result","handleFileInputChange","target","files","value","Text","styled","Label","Input","Preview","useEditAvatar","encType","onSubmit","name","multiple","accept","onChange","src","alt","Button","background","borderRadius","height","width","shadow","Loader","changeEmail","values","initialValues","email","yup","shape","required","useEditEmail","validationSchema","editEmailSchema","handleSubmit","handleChange","EntryField","label","placeholder","margin","changePassword","passwords","password","newPassword","passwordAgain","min","max","oneOf","useEditPassword","editPasswordSchema","useCoefficient","changeComplexity","undefined","bank","Wrapper","useEditComplexity","editComplexitySchema","RadioButton","checked","showDialog","setShowDialog","currentIndex","setCurrentIndex","currentPrice","setCurrentPrice","halfPrice","setHalfPrice","closeDialogWindow","openDialogWindow","index","currentTarget","dataset","price","sell","toast","List","screenWidth","Item","Photo","Title","Price","ButtonWrapper","useMyItems","map","imageURL","title","bankFormatting","toFixed","onClick","IconSwitcher","size","fill","Modal","DialogWindow","successBtnText","failureBtnText","onFailure","onSuccess","text","navigate","useNavigate","Header","Avatar","Name","Nickname","Value","EditBtn","useProfile","Container","padding","_id","createdAt","dateFormatting","updatedAt","avatarURL","nickname","gender","inGame","level","Controllers","queries","small","large","matches"],"sourceRoot":""}