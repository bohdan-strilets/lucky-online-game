{"version":3,"file":"static/js/818.83b672fe.chunk.js","mappings":"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","sources":["helpers/dateFormatting.ts","hooks/useBetList.ts","components/BetLlist/BetLlist.styled.ts","components/BetLlist/BetLlist.tsx","pages/BetLlistPage.tsx"],"sourcesContent":["const dateFormatting = (date: string) => {\n  if (date) {\n    return date.slice(0, 19).replace('T', ' ');\n  }\n};\n\nexport default dateFormatting;\n","import { useEffect, useState } from 'react';\nimport { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/bets/betsOperations';\nimport useSound from 'use-sound';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { IGetAllBetsRes, IBets } from 'types/IBetsApi';\n\nconst useBetList = () => {\n  const dispatch = useAppDispatch();\n\n  const [bets, setBets] = useState<IBets[] | null>(null);\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  useEffect(() => {\n    (async () => {\n      if (page === 1) {\n        const result = await dispatch(operations.getAllBets(page));\n\n        setBets((result.payload as IGetAllBetsRes).bets);\n        setTotal((result.payload as IGetAllBetsRes).total);\n      }\n\n      if (page !== 1) {\n        const result = await dispatch(operations.getAllBets(page));\n\n        setBets(prevState => {\n          const newBets = (result.payload as IGetAllBetsRes).bets;\n          return prevState !== null ? [...prevState, ...newBets] : [];\n        });\n      }\n    })();\n  }, [dispatch, page]);\n\n  const showMore = () => {\n    setPage(prevState => prevState + 1);\n    play({ id: 'counter_click' });\n  };\n\n  const disabledbutton = () => {\n    if (bets !== null && total !== null) {\n      return bets?.length + 1 >= total;\n    }\n  };\n\n  return { bets, showMore, disabledbutton };\n};\n\nexport default useBetList;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n`;\n\nexport const Title = styled.h1`\n  text-transform: uppercase;\n  font-size: 30px;\n  font-weight: 900;\n\n  margin-bottom: 40px;\n`;\n\nexport const CategoriesList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  font-weight: 900;\n  font-size: 18px;\n\n  padding: 20px 15px 50px 15px;\n`;\n\nexport const CategoriesItem = styled.li`\n  width: 150px;\n  text-transform: uppercase;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  width: 100%;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 20px 15px;\n\n  :nth-of-type(odd) {\n    background-color: var(--white-transparent);\n    border-radius: 8px;\n  }\n`;\n\nexport const Column = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 150px;\n  text-align: center;\n`;\n\nexport const IsWon = styled.div<{ isWon: boolean }>`\n  width: 16px;\n  height: 16px;\n\n  border-radius: 50%;\n  background-color: ${({ isWon }) =>\n    isWon ? 'var(--green-color)' : 'var(--red-color)'};\n`;\n","import useBetList from 'hooks/useBetList';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Button from 'components/InterfaceElements/Button';\n\nimport dateFormatting from 'helpers/dateFormatting';\nimport {\n  Wrapper,\n  Title,\n  CategoriesList,\n  CategoriesItem,\n  List,\n  Item,\n  Column,\n  IsWon,\n} from './BetLlist.styled';\n\nconst BetLlist: React.FC<{}> = () => {\n  const { bets, disabledbutton, showMore } = useBetList();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"1050px\"\n      padding=\"70px 50px\"\n      margin=\"50px\"\n    >\n      <Wrapper>\n        <Title>List of bets</Title>\n        <CategoriesList>\n          <CategoriesItem>creating date</CategoriesItem>\n          <CategoriesItem>type</CategoriesItem>\n          <CategoriesItem>amount</CategoriesItem>\n          <CategoriesItem>coeffient</CategoriesItem>\n          <CategoriesItem>is won</CategoriesItem>\n          <CategoriesItem>wining amount</CategoriesItem>\n        </CategoriesList>\n      </Wrapper>\n\n      <List>\n        {bets?.map(\n          ({\n            _id,\n            createdAt,\n            type,\n            betAmount,\n            coefficient,\n            isWon,\n            winningAmount,\n          }) => {\n            return (\n              <Item key={_id}>\n                <Column>\n                  <p>{dateFormatting(createdAt)}</p>\n                </Column>\n                <Column>\n                  <p>{type}</p>\n                </Column>\n                <Column>\n                  <p>{`${betAmount} $`}</p>\n                </Column>\n                <Column>\n                  <p>{coefficient}</p>\n                </Column>\n                <Column>\n                  <IsWon isWon={isWon} />\n                </Column>\n                <Column>\n                  <p>{`${winningAmount} $`}</p>\n                </Column>\n              </Item>\n            );\n          },\n        )}\n      </List>\n\n      <Button\n        type=\"button\"\n        background=\"green\"\n        borderRadius=\"50px\"\n        height=\"60px\"\n        width=\"500px\"\n        shadow\n        margin=\"50px auto 0 auto\"\n        onClick={showMore}\n        disabled={disabledbutton()}\n      >\n        Show more\n      </Button>\n    </Container>\n  );\n};\n\nexport default BetLlist;\n","import BetLlist from 'components/BetLlist';\n\nconst BetLlistPage: React.FC<{}> = () => {\n  return <BetLlist />;\n};\n\nexport default BetLlistPage;\n"],"names":["date","slice","replace","dispatch","useAppDispatch","useState","bets","setBets","page","setPage","total","setTotal","soundOff","useAppSelector","getSoundOff","useSound","sounds","sprite","soundEnabled","play","useEffect","operations","result","payload","prevState","newBets","showMore","id","disabledbutton","length","Wrapper","styled","Title","CategoriesList","CategoriesItem","List","Item","Column","IsWon","isWon","useBetList","Container","type","width","padding","margin","map","_id","createdAt","betAmount","coefficient","winningAmount","dateFormatting","Button","background","borderRadius","height","shadow","onClick","disabled"],"sourceRoot":""}