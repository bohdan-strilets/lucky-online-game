{"version":3,"file":"static/js/983.c3b47839.chunk.js","mappings":"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","sources":["components/InterfaceElements/EntryField/EntryField.styled.ts","components/InterfaceElements/EntryField/EntryField.tsx","components/Modal/DialogWindow/DialogWindow.styled.ts","components/Modal/DialogWindow/DialogWindow.tsx","hooks/useModal.ts","components/Modal/Modal.styled.ts","components/Modal/Modal.tsx","helpers/betTypes.ts","helpers/dateFormatting.ts","hooks/useCoefficient.ts","hooks/useProfile.ts","hooks/useProfileControllers.ts","hooks/useEditProfile.ts","components/InterfaceElements/RadioButton/RadioButton.styled.ts","components/InterfaceElements/RadioButton/RadioButton.tsx","helpers/validationSchemas/editProfileSchema.ts","components/Modal/EditProfile/EditProfile.styled.ts","components/Modal/EditProfile/EditProfile.tsx","components/Profile/Controllers/Controllers.styled.ts","components/Profile/Controllers/Controllers.tsx","hooks/useEditAvatar.ts","components/Modal/EditAvatar/EditAvatar.styled.ts","components/Modal/EditAvatar/EditAvatar.tsx","hooks/useEditEmail.ts","helpers/validationSchemas/editEmailSchema.ts","components/Modal/EditEmail/EditEmail.styled.ts","components/Modal/EditEmail/EditEmail.tsx","hooks/useEditPassword.ts","helpers/validationSchemas/editPasswordSchema.ts","components/Modal/EditPassword/EditPassword.tsx","hooks/useEditComplexity.ts","helpers/validationSchemas/editComplexitySchema.ts","components/Modal/EditComplexity/EditComplexity.styled.ts","components/Modal/EditComplexity/EditComplexity.tsx","hooks/useMyItems.ts","components/Profile/MyItems/MyItems.styled.ts","components/Profile/MyItems/MyItems.tsx","components/Profile/EmptyList/EmptyList.styled.ts","components/Profile/EmptyList/EmptyList.tsx","components/Profile/Profile.styled.ts","components/Profile/Profile.tsx","pages/ProfilePage.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\nimport { IWrapperStyled, IInputStyled } from 'types/IEntryField';\n\nexport const Wrapper = styled.label<IWrapperStyled>`\n  display: flex;\n  flex-direction: column;\n  margin: ${({ margin }) => (margin ? margin : '')};\n`;\n\nexport const Label = styled.span`\n  font-size: 15px;\n  text-transform: uppercase;\n  color: var(--brown-color);\n\n  margin-bottom: 6px;\n`;\n\nexport const Input = styled(Field)<IInputStyled>`\n  width: ${({ width }) => (width ? width : '')};\n  height: ${({ height }) => (height ? height : '')};\n  padding: 0 15px;\n\n  font-family: inherit;\n  font-weight: 700;\n  font-size: 19px;\n\n  color: var(--brown-color);\n  background: var(--white-transparent);\n  border: 2px solid var(--brown-color);\n  border-radius: 8px;\n  outline: none;\n\n  :focus {\n    border: 2px solid rgba(105, 74, 4, 0.7);\n  }\n\n  ::placeholder {\n    font-size: 19px;\n    color: var(--brown-color);\n    opacity: 0.5;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  margin-top: 5px;\n  color: red;\n`;\n","import { IEntryFieldState } from 'types/IEntryField';\nimport { Wrapper, Label, Input, Error } from './EntryField.styled';\n\nconst EntryField: React.FC<IEntryFieldState> = ({\n  label,\n  type,\n  name,\n  value,\n  onChange,\n  required,\n  placeholder,\n  width,\n  height,\n  margin,\n}) => {\n  return (\n    <Wrapper margin={margin}>\n      <Label>{label}</Label>\n      <Input\n        type={type}\n        name={name}\n        value={value}\n        onChange={onChange}\n        required={required}\n        placeholder={placeholder}\n        width={width}\n        height={height}\n      />\n      <Error name={name} component=\"div\" />\n    </Wrapper>\n  );\n};\n\nexport default EntryField;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n`;\n\nexport const Item = styled.li``;\n","import Button from 'components/InterfaceElements/Button';\nimport { IDialogWindowState } from 'types/IDialogWindow';\n\nimport { Text, List, Item } from './DialogWindow.styled';\n\nconst DialogWindow: React.FC<IDialogWindowState> = ({\n  onFailure,\n  onSuccess,\n  text,\n  successBtnText,\n  failureBtnText,\n}) => {\n  return (\n    <div>\n      <Text>{text && text}</Text>\n\n      <List>\n        <Item>\n          <Button\n            type=\"button\"\n            background=\"blue\"\n            height=\"50px\"\n            width=\"300px\"\n            borderRadius=\"50px\"\n            shadow\n            onClick={onFailure}\n          >\n            {failureBtnText}\n          </Button>\n        </Item>\n        <Item>\n          <Button\n            type=\"button\"\n            background=\"green\"\n            height=\"50px\"\n            width=\"300px\"\n            borderRadius=\"50px\"\n            shadow\n            onClick={onSuccess}\n          >\n            {successBtnText}\n          </Button>\n        </Item>\n      </List>\n    </div>\n  );\n};\n\nexport default DialogWindow;\n","import { useEffect } from 'react';\n\nconst useModal = (onClose: () => void) => {\n  useEffect(() => {\n    const onPressEscape = (e: { code: string }) => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', onPressEscape);\n\n    return () => window.removeEventListener('keydown', onPressEscape);\n  }, [onClose]);\n\n  const onBackdropClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return { onBackdropClick };\n};\n\nexport default useModal;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 780px;\n  height: auto;\n  padding: 60px;\n\n  background-color: var(--white-color);\n  color: var(--brown-color);\n  border-radius: 30px;\n  border: 5px solid var(--brown-transparent);\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 70px;\n  padding-bottom: 30px;\n\n  border-bottom: 1px solid var(--green-color);\n`;\n\nexport const Title = styled.h1`\n  font-size: 38px;\n  font-weight: 900;\n`;\n\nexport const CloseButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: var(--brown-color);\n  background-color: transparent;\n  border: none;\n\n  cursor: pointer;\n  transition: color var(--hover-effect);\n\n  :hover,\n  :focus {\n    color: var(--green-color);\n  }\n`;\n","import useModal from 'hooks/useModal';\n\nimport { createPortal } from 'react-dom';\nimport { IModalState } from 'types/IModal';\n\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\n\nimport {\n  Backdrop,\n  Wrapper,\n  TitleWrapper,\n  Title,\n  CloseButton,\n} from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLDivElement;\n\nconst Modal: React.FC<IModalState> = ({ children, title, onClose }) => {\n  const { onBackdropClick } = useModal(onClose);\n\n  return createPortal(\n    <Backdrop onClick={onBackdropClick}>\n      <Wrapper>\n        <TitleWrapper>\n          <Title>{title}</Title>\n          <CloseButton type=\"button\" onClick={onClose}>\n            <IconSwitcher name=\"cross\" size=\"18px\" fill=\"currentColor\" />\n          </CloseButton>\n        </TitleWrapper>\n        {children}\n      </Wrapper>\n    </Backdrop>,\n    modalRoot,\n  );\n};\n\nexport default Modal;\n","const types = {\n  ZERO: 'zero',\n  NUMBER: 'number',\n  HIGH: 'high',\n  LOW: 'low',\n  EVEN: 'even',\n  ODD: 'odd',\n  BLACK: 'black',\n  RED: 'red',\n  DOZEN_1: 'dozen-1',\n  DOZEN_2: 'dozen-2',\n  DOZEN_3: 'dozen-3',\n  COLUMN_1: 'column-1',\n  COLUMN_2: 'column-2',\n  COLUMN_3: 'column-3',\n};\n\nexport default types;\n","const dateFormatting = (date: string) => {\n  if (date) {\n    return date.slice(0, 19).replace('T', ' ');\n  }\n};\n\nexport default dateFormatting;\n","import types from 'helpers/betTypes';\n\nconst useCoefficient = () => {\n  const coefficientInfo = {\n    low: {\n      type: 'low',\n      coefficient: {\n        number: 5.7,\n        bottomRow: 4.2,\n        oneFromTwo: 3.2,\n      },\n      initialFunds: 3200,\n      experience: 30,\n    },\n    medium: {\n      type: 'medium',\n      coefficient: {\n        number: 3.2,\n        bottomRow: 2.1,\n        oneFromTwo: 1.7,\n      },\n      initialFunds: 1600,\n      experience: 20,\n    },\n    high: {\n      type: 'high',\n      coefficient: {\n        number: 1.9,\n        bottomRow: 1.5,\n        oneFromTwo: 1.3,\n      },\n      initialFunds: 700,\n      experience: 10,\n    },\n  };\n\n  const getCoefficient = (\n    complexity: string | null | undefined,\n    type: string | null,\n  ) => {\n    switch (complexity) {\n      case coefficientInfo.low.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.low.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.low.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.low.coefficient.bottomRow;\n        }\n        return 0;\n\n      case coefficientInfo.medium.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.medium.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.medium.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.medium.coefficient.bottomRow;\n        }\n        return 0;\n\n      case coefficientInfo.high.type:\n        if (type === types.ZERO || type === types.NUMBER) {\n          return coefficientInfo.high.coefficient.number;\n        }\n\n        if (\n          type === types.HIGH ||\n          type === types.LOW ||\n          type === types.EVEN ||\n          type === types.ODD ||\n          type === types.BLACK ||\n          type === types.RED\n        ) {\n          return coefficientInfo.high.coefficient.oneFromTwo;\n        }\n\n        if (\n          type === types.DOZEN_1 ||\n          type === types.DOZEN_2 ||\n          type === types.DOZEN_3 ||\n          type === types.COLUMN_1 ||\n          type === types.COLUMN_2 ||\n          type === types.COLUMN_3\n        ) {\n          return coefficientInfo.high.coefficient.bottomRow;\n        }\n        return 0;\n\n      default:\n        return 0;\n    }\n  };\n\n  return {\n    coefficientInfo,\n    getCoefficient,\n  };\n};\n\nexport default useCoefficient;\n","import { useState } from 'react';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport { useGetLevelInfoQuery } from 'redux/level/levelApi';\nimport useSound from 'use-sound';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport { getUser, getProducts } from 'redux/user/userSelectors';\nimport moment from 'moment';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { IDeleteSessionRes } from 'types/IUserRessponse';\n\nconst useProfile = () => {\n  const [showEditAvatarModal, setShowEditAvatarModal] = useState(false);\n  const [showEditEmailModal, setShowEditEmailModal] = useState(false);\n  const [showEditPasswordModal, setShowEditPasswordModal] = useState(false);\n  const [showEditComplexityModal, setShowEditComplexityModal] = useState(false);\n  const [showDeleteSessionModal, setshowDeleteSessionModal] = useState(false);\n\n  const user = useAppSelector(getUser);\n  const products = useAppSelector(getProducts);\n  const dispatch = useAppDispatch();\n  const { data } = useGetLevelInfoQuery();\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  const age = () => {\n    if (user.dateBirth) {\n      return user.dateBirth?.length > 9\n        ? Number.parseInt(moment(user.dateBirth).fromNow(true))\n        : 0;\n    }\n  };\n\n  const deleteGameSession = async () => {\n    const res = await dispatch(operations.deleteSession());\n    play({ id: 'counter_click' });\n\n    if ((res.payload as IDeleteSessionRes).status === 'ok') {\n      setshowDeleteSessionModal(false);\n    }\n  };\n\n  const switchEditAvatarModal = (state: boolean) => {\n    setShowEditAvatarModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  const switchEditEmailModal = (state: boolean) => {\n    setShowEditEmailModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  const switchEditPasswordModal = (state: boolean) => {\n    setShowEditPasswordModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  const switchEditComplexityModal = (state: boolean) => {\n    setShowEditComplexityModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  const switchDeleteSessionModal = (state: boolean) => {\n    setshowDeleteSessionModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  return {\n    showEditAvatarModal,\n    switchEditAvatarModal,\n    showEditEmailModal,\n    switchEditEmailModal,\n    showEditPasswordModal,\n    switchEditPasswordModal,\n    showEditComplexityModal,\n    switchEditComplexityModal,\n    showDeleteSessionModal,\n    switchDeleteSessionModal,\n    data,\n    age,\n    deleteGameSession,\n    user,\n    products,\n  };\n};\n\nexport default useProfile;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport useSound from 'use-sound';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { IDeleteAccountRes } from 'types/IUserRessponse';\n\nconst useProfileControllers = () => {\n  const [showDialogModal, setShowDialogModal] = useState(false);\n  const [showEditProfileModal, setShowEditProfileModal] = useState(false);\n\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const deleteAccount = async () => {\n    const res = await dispatch(operations.deleteAccount());\n\n    if ((res.payload as IDeleteAccountRes).status === 'ok') {\n      navigate('/');\n    }\n  };\n\n  const switchEditProfileModal = (state: boolean) => {\n    setShowEditProfileModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  const switchDialogModal = (state: boolean) => {\n    setShowDialogModal(state);\n    play({ id: 'counter_click' });\n  };\n\n  return {\n    switchEditProfileModal,\n    switchDialogModal,\n    showDialogModal,\n    showEditProfileModal,\n    deleteAccount,\n  };\n};\n\nexport default useProfileControllers;\n","import { useAppDispatch } from 'hooks/useAppDispatch';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport operations from 'redux/user/userOperations';\nimport { getUser } from 'redux/user/userSelectors';\n\nimport { IEditProfileData } from 'types/IProfile';\nimport { IChangeAccountRes } from 'types/IUserRessponse';\n\nconst useEditProfile = (onClose: () => void) => {\n  const dispatch = useAppDispatch();\n  const { name, nickname, gender, dateBirth } = useAppSelector(getUser);\n\n  const initialValues = {\n    name,\n    nickname,\n    gender,\n    dateBirth,\n  } as IEditProfileData;\n\n  const changeProfile = async (values: IEditProfileData) => {\n    const res = await dispatch(operations.changeAccount(values));\n\n    if ((res.payload as IChangeAccountRes).status === 'ok') {\n      onClose();\n    }\n  };\n\n  return { initialValues, changeProfile };\n};\n\nexport default useEditProfile;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Wrapper = styled.label`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled(Field)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const CustomRadio = styled.div`\n  position: relative;\n\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n\n  background: var(--brown-transparent);\n  border: 2px solid var(--brown-color);\n  border-radius: 50%;\n`;\n\nexport const SelectRadio = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 10px;\n  height: 10px;\n\n  background-color: var(--brown-color);\n  border-radius: 50%;\n`;\n\nexport const Label = styled.span`\n  font-size: 19px;\n`;\n","import { IRadioButtonState } from 'types/IRadioButton';\nimport {\n  Wrapper,\n  Input,\n  CustomRadio,\n  SelectRadio,\n  Label,\n} from './RadioButton.styled';\n\nconst RadioButton: React.FC<IRadioButtonState> = ({\n  label,\n  name,\n  value,\n  checked,\n}) => {\n  return (\n    <Wrapper>\n      <Input type=\"radio\" name={name} value={value} checked={checked} />\n      <CustomRadio>{checked && <SelectRadio />}</CustomRadio>\n      <Label>{label}</Label>\n    </Wrapper>\n  );\n};\n\nexport default RadioButton;\n","import * as yup from 'yup';\n\nconst editProfileSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'The minimum name length must be 3 characters.')\n    .max(15, 'The maximum name length must not exceed 15 characters.'),\n  nickname: yup\n    .string()\n    .min(3, 'The minimum nickname length must be 3 characters.')\n    .max(20, 'The maximum nickname length must not exceed 20 characters.'),\n  dateBirth: yup.string(),\n  gender: yup.string(),\n});\n\nexport default editProfileSchema;\n","import styled from '@emotion/styled';\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  margin-bottom: 50px;\n`;\n\nexport const RadioText = styled.p`\n  font-size: 19px;\n  text-transform: uppercase;\n  margin-bottom: 6px;\n`;\n","import useEditProfile from 'hooks/useEditProfile';\n\nimport { Formik, Form } from 'formik';\nimport EntryField from 'components/InterfaceElements/EntryField';\nimport Button from 'components/InterfaceElements/Button';\nimport RadioButton from 'components/InterfaceElements/RadioButton';\n\nimport editProfileSchema from 'helpers/validationSchemas/editProfileSchema';\nimport { RadioGroup, RadioText } from './EditProfile.styled';\n\nconst EditProfile: React.FC<{ onClose(): void }> = ({ onClose }) => {\n  const { changeProfile, initialValues } = useEditProfile(onClose);\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={changeProfile}\n        validationSchema={editProfileSchema}\n      >\n        {({ values, handleSubmit, handleChange }) => (\n          <Form onSubmit={handleSubmit}>\n            <EntryField\n              label=\"name\"\n              type=\"text\"\n              name=\"name\"\n              value={values.name}\n              onChange={handleChange}\n              placeholder=\"Enter your name\"\n              height=\"50px\"\n              width=\"100%\"\n              margin=\"0 0 30px 0\"\n            />\n\n            <EntryField\n              label=\"nickname\"\n              type=\"text\"\n              name=\"nickname\"\n              value={values.nickname}\n              onChange={handleChange}\n              placeholder=\"Enter nickname\"\n              height=\"50px\"\n              width=\"100%\"\n              margin=\"0 0 30px 0\"\n            />\n\n            <EntryField\n              label=\"date of Birth\"\n              type=\"date\"\n              name=\"dateBirth\"\n              value={values.dateBirth}\n              onChange={handleChange}\n              height=\"50px\"\n              width=\"100%\"\n              margin=\"0 0 30px 0\"\n            />\n\n            <RadioText>Gender</RadioText>\n            <RadioGroup>\n              <RadioButton\n                label=\"other\"\n                name=\"gender\"\n                value=\"other\"\n                checked={values.gender === 'other'}\n              />\n              <RadioButton\n                label=\"man\"\n                name=\"gender\"\n                value=\"man\"\n                checked={values.gender === 'man'}\n              />\n              <RadioButton\n                label=\"woman\"\n                name=\"gender\"\n                value=\"woman\"\n                checked={values.gender === 'woman'}\n              />\n            </RadioGroup>\n\n            <Button\n              type=\"submit\"\n              background=\"green\"\n              width=\"100%\"\n              height=\"60px\"\n              borderRadius=\"50px\"\n              shadow\n            >\n              Sign up\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default EditProfile;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  position: absolute;\n  top: -25px;\n  right: 30px;\n\n  display: flex;\n`;\n\nexport const Item = styled.li`\n  margin-right: 20px;\n\n  :last-child {\n    margin-right: 0;\n  }\n`;\n","import useProfileControllers from 'hooks/useProfileControllers';\n\nimport Button from 'components/InterfaceElements/Button';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport Modal from 'components/Modal';\nimport DialogWindow from 'components/Modal/DialogWindow';\nimport EditProfile from 'components/Modal/EditProfile';\n\nimport { List, Item } from './Controllers.styled';\n\nconst Controllers: React.FC<{}> = () => {\n  const {\n    switchEditProfileModal,\n    switchDialogModal,\n    showDialogModal,\n    showEditProfileModal,\n    deleteAccount,\n  } = useProfileControllers();\n\n  return (\n    <>\n      <List>\n        <Item>\n          <Button\n            type=\"button\"\n            background=\"blue\"\n            borderRadius=\"10px\"\n            height=\"50px\"\n            width=\"50px\"\n            onClick={() => switchEditProfileModal(true)}\n          >\n            <IconSwitcher name=\"adjust\" size=\"18px\" fill=\"var(--white-color)\" />\n          </Button>\n        </Item>\n        <Item>\n          <Button\n            type=\"button\"\n            background=\"blue\"\n            borderRadius=\"10px\"\n            height=\"50px\"\n            width=\"50px\"\n            onClick={() => switchDialogModal(true)}\n          >\n            <IconSwitcher name=\"delete\" size=\"18px\" fill=\"var(--white-color)\" />\n          </Button>\n        </Item>\n      </List>\n\n      {showDialogModal && (\n        <Modal onClose={() => switchDialogModal(false)} title=\"Delete account?\">\n          <DialogWindow\n            onFailure={() => switchDialogModal(false)}\n            onSuccess={deleteAccount}\n            text='Do you really want to delete your account and all data associated with it. All game progress will be lost, including statistics. Instead, you can use the delete \"game session\" function.'\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Delete\"\n          />\n        </Modal>\n      )}\n\n      {showEditProfileModal && (\n        <Modal\n          onClose={() => switchEditProfileModal(false)}\n          title=\"Edit personal data\"\n        >\n          <EditProfile onClose={() => switchEditProfileModal(false)} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Controllers;\n","import { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport { IChangeAvatarRes } from 'types/IUserRessponse';\n\nconst useEditAvatar = (onClose: () => void) => {\n  const dispatch = useAppDispatch();\n\n  const changeAvatar = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const target = e.currentTarget.elements[0] as HTMLInputElement;\n    const file = (target.files as FileList)[0];\n\n    const data = new FormData();\n    data.append('avatar', file);\n\n    if (!data) {\n      return;\n    }\n\n    const res = await dispatch(operations.changeAvatar(data));\n\n    if ((res.payload as IChangeAvatarRes).status === 'ok') {\n      onClose();\n    }\n  };\n\n  return { changeAvatar };\n};\n\nexport default useEditAvatar;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 150px;\n  margin-bottom: 50px;\n\n  background-color: var(--brown-transparent);\n  border-radius: 30px;\n`;\n\nexport const Input = styled.input`\n  font-size: 26px;\n  font-weight: 900;\n  font-family: inherit;\n\n  color: var(--white-color);\n  background-color: var(--brown-color);\n`;\n","import useEditAvatar from 'hooks/useEditAvatar';\nimport Button from 'components/InterfaceElements/Button';\nimport { Text, Label, Input } from './EditAvatar.styled';\n\nconst EditAvatar: React.FC<{ onClose(): void }> = ({ onClose }) => {\n  const { changeAvatar } = useEditAvatar(onClose);\n\n  return (\n    <form encType=\"multipart/from-data\" onSubmit={changeAvatar}>\n      <Text>\n        The selected file must be in one of the following formats \".jpg, .png,\n        .svg\". The file must not exceed 2MB. A square image is best.\n      </Text>\n      <Label>\n        <Input type=\"file\" name=\"avatar\" multiple accept=\".jpg, .png, .svg\" />\n      </Label>\n      <Button\n        type=\"submit\"\n        background=\"green\"\n        borderRadius=\"50px\"\n        height=\"50px\"\n        width=\"100%\"\n        shadow\n      >\n        change avatar\n      </Button>\n    </form>\n  );\n};\n\nexport default EditAvatar;\n","import { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\n\nimport { IEditEmailData } from 'types/IProfile';\nimport { IChangeEmailRes } from 'types/IUserRessponse';\n\nconst useEditEmail = (onClose: () => void) => {\n  const dispatch = useAppDispatch();\n\n  const initialValues = {\n    email: '',\n  };\n\n  const changeEmail = async (values: IEditEmailData) => {\n    const res = await dispatch(operations.changeEmail(values));\n\n    if ((res.payload as IChangeEmailRes).status === 'ok') {\n      onClose();\n    }\n  };\n\n  return { initialValues, changeEmail };\n};\n\nexport default useEditEmail;\n","import * as yup from 'yup';\n\nconst editEmailSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('The email address must be valid and existing.')\n    .required('The email field is required and cannot be empty.'),\n});\n\nexport default editEmailSchema;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n","import useEditEmail from 'hooks/useEditEmail';\n\nimport { Formik, Form } from 'formik';\nimport EntryField from 'components/InterfaceElements/EntryField';\nimport Button from 'components/InterfaceElements/Button';\n\nimport editEmailSchema from 'helpers/validationSchemas/editEmailSchema';\nimport { Text } from './EditEmail.styled';\n\nconst EditEmail: React.FC<{ onClose(): void }> = ({ onClose }) => {\n  const { changeEmail, initialValues } = useEditEmail(onClose);\n\n  return (\n    <>\n      <Text>\n        After changing your email, you will need to re-verify your email.\n      </Text>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={changeEmail}\n        validationSchema={editEmailSchema}\n      >\n        {({ values, handleSubmit, handleChange }) => (\n          <Form onSubmit={handleSubmit}>\n            <EntryField\n              label=\"email\"\n              type=\"email\"\n              name=\"email\"\n              value={values.email}\n              onChange={handleChange}\n              placeholder=\"Enter your e-mail\"\n              required={true}\n              height=\"50px\"\n              width=\"100%\"\n              margin=\"0 0 30px 0\"\n            />\n\n            <Button\n              type=\"submit\"\n              background=\"green\"\n              width=\"100%\"\n              height=\"60px\"\n              borderRadius=\"50px\"\n              shadow\n            >\n              Sign up\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default EditEmail;\n","import { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\n\nimport { IEditPasswordData } from 'types/IProfile';\nimport { IChangePasswordRes } from 'types/IUserRessponse';\n\nconst useEditPassword = (onClose: () => void) => {\n  const dispatch = useAppDispatch();\n\n  const initialValues = {\n    password: '',\n    newPassword: '',\n    passwordAgain: '',\n  };\n\n  const changePassword = async (values: IEditPasswordData) => {\n    const passwords = {\n      password: values.password,\n      newPassword: values.newPassword,\n    };\n\n    const res = await dispatch(operations.changePassword(passwords));\n    if ((res.payload as IChangePasswordRes).status === 'ok') {\n      onClose();\n    }\n  };\n\n  return { initialValues, changePassword };\n};\n\nexport default useEditPassword;\n","import * as yup from 'yup';\n\nconst editPasswordSchema = yup.object().shape({\n  password: yup\n    .string()\n    .min(6, 'The minimum password length must be 6 characters.')\n    .max(12, 'The maximum password length must not exceed 12 characters.')\n    .required('The password field is required and cannot be empty.'),\n  newPassword: yup\n    .string()\n    .min(6, 'The minimum password length must be 6 characters.')\n    .max(12, 'The maximum password length must not exceed 12 characters.')\n    .required('The password field is required and cannot be empty.'),\n  passwordAgain: yup\n    .string()\n    .oneOf([yup.ref('newPassword')], 'Passwords must match'),\n});\n\nexport default editPasswordSchema;\n","import useEditPassword from 'hooks/useEditPassword';\n\nimport { Formik, Form } from 'formik';\nimport EntryField from 'components/InterfaceElements/EntryField';\nimport Button from 'components/InterfaceElements/Button';\n\nimport editPasswordSchema from 'helpers/validationSchemas/editPasswordSchema';\n\nconst EditPassword: React.FC<{ onClose(): void }> = ({ onClose }) => {\n  const { changePassword, initialValues } = useEditPassword(onClose);\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={changePassword}\n      validationSchema={editPasswordSchema}\n    >\n      {({ values, handleSubmit, handleChange }) => (\n        <Form onSubmit={handleSubmit}>\n          <EntryField\n            label=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n            required={true}\n            height=\"50px\"\n            width=\"100%\"\n            margin=\"0 0 30px 0\"\n          />\n\n          <EntryField\n            label=\"new password\"\n            type=\"password\"\n            name=\"newPassword\"\n            value={values.newPassword}\n            onChange={handleChange}\n            required={true}\n            height=\"50px\"\n            width=\"100%\"\n            margin=\"0 0 30px 0\"\n          />\n\n          <EntryField\n            label=\"password again\"\n            type=\"password\"\n            name=\"passwordAgain\"\n            value={values.passwordAgain}\n            onChange={handleChange}\n            required={true}\n            height=\"50px\"\n            width=\"100%\"\n            margin=\"0 0 30px 0\"\n          />\n\n          <Button\n            type=\"submit\"\n            background=\"green\"\n            width=\"100%\"\n            height=\"60px\"\n            borderRadius=\"50px\"\n            shadow\n          >\n            Sign up\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditPassword;\n","import { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport useCoefficient from 'hooks/useCoefficient';\n\nimport { IEditComplexityData } from 'types/IProfile';\nimport { IChangeComplexityRes } from 'types/IUserRessponse';\n\nconst useEditComplexity = (\n  onClose: () => void,\n  complexity?: 'low' | 'medium' | 'high' | null,\n) => {\n  const dispatch = useAppDispatch();\n  const { coefficientInfo } = useCoefficient();\n\n  const initialValues = {\n    complexity,\n  };\n\n  const changeComplexity = async (values: IEditComplexityData) => {\n    if (values.complexity !== null && values.complexity !== undefined) {\n      const res = await dispatch(\n        operations.changeComplexity({\n          complexity: values.complexity,\n          bank: coefficientInfo[values.complexity].initialFunds,\n        }),\n      );\n\n      if ((res.payload as IChangeComplexityRes).status === 'ok') {\n        onClose();\n      }\n    }\n  };\n\n  return { initialValues, changeComplexity };\n};\n\nexport default useEditComplexity;\n","import * as yup from 'yup';\n\nconst editComplexitySchema = yup.object().shape({\n  complexity: yup\n    .string()\n    .required('The complexity field is required and cannot be empty.'),\n});\n\nexport default editComplexitySchema;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  margin-bottom: 30px;\n`;\n","import useEditComplexity from 'hooks/useEditComplexity';\n\nimport { Formik, Form } from 'formik';\nimport Button from 'components/InterfaceElements/Button';\nimport RadioButton from 'components/InterfaceElements/RadioButton';\n\nimport editComplexitySchema from 'helpers/validationSchemas/editComplexitySchema';\nimport { IEditComplexityState } from 'types/IEditComplexity';\n\nimport { Text, Wrapper } from './EditComplexity.styled';\n\nconst EditComplexity: React.FC<IEditComplexityState> = ({\n  onClose,\n  complexity,\n}) => {\n  const { changeComplexity, initialValues } = useEditComplexity(\n    onClose,\n    complexity,\n  );\n\n  return (\n    <>\n      <Text>\n        After changing the difficulty level, the rules for calculating rewards\n        and experience will change.\n      </Text>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={changeComplexity}\n        validationSchema={editComplexitySchema}\n      >\n        {({ values, handleSubmit, handleChange }) => (\n          <Form onSubmit={handleSubmit}>\n            <Wrapper>\n              <RadioButton\n                label=\"low\"\n                name=\"complexity\"\n                value=\"low\"\n                checked={values.complexity === 'low'}\n              />\n\n              <RadioButton\n                label=\"medium\"\n                name=\"complexity\"\n                value=\"medium\"\n                checked={values.complexity === 'medium'}\n              />\n\n              <RadioButton\n                label=\"high\"\n                name=\"complexity\"\n                value=\"high\"\n                checked={values.complexity === 'high'}\n              />\n            </Wrapper>\n\n            <Button\n              type=\"submit\"\n              background=\"green\"\n              width=\"100%\"\n              height=\"60px\"\n              borderRadius=\"50px\"\n              shadow\n            >\n              change\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default EditComplexity;\n","import { useState } from 'react';\nimport { useAppDispatch } from 'hooks/useAppDispatch';\nimport operations from 'redux/user/userOperations';\nimport useSound from 'use-sound';\nimport { useAppSelector } from 'hooks/useAppSelector';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\nimport { toast } from 'react-toastify';\n\nconst useMyItems = () => {\n  const [showDialog, setShowDialog] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState<null | number>(null);\n  const [currentPrice, setCurrentPrice] = useState<null | number>(null);\n  const [halfPrice, setHalfPrice] = useState(0);\n\n  const dispatch = useAppDispatch();\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  const openDialogWindow = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    setShowDialog(true);\n    play({ id: 'counter_click' });\n\n    const index = e.currentTarget.dataset.index;\n    const price = e.currentTarget.dataset.price;\n\n    if (index !== undefined && price !== undefined) {\n      setCurrentIndex(Number(index));\n      setCurrentPrice(Number(price));\n      setHalfPrice(Number(price) / 2);\n    }\n  };\n\n  const closeDialogWindow = () => {\n    setShowDialog(false);\n    play({ id: 'counter_click' });\n  };\n\n  const sell = () => {\n    if (currentIndex !== null && currentPrice !== null) {\n      dispatch(\n        operations.sellItem({ index: currentIndex, price: currentPrice / 2 }),\n      );\n      closeDialogWindow();\n      toast.success(\"You have successfully sold an item you don't want.\");\n      play({ id: 'sound_victory' });\n    }\n  };\n\n  return {\n    openDialogWindow,\n    closeDialogWindow,\n    sell,\n    showDialog,\n    currentPrice,\n    halfPrice,\n  };\n};\n\nexport default useMyItems;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n\n  width: 100%;\n  margin: -5px;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: calc((100% - 8 * 5px) / 4);\n  margin: 5px;\n  padding: 15px;\n\n  border: 3px solid var(--white-transparent);\n  border-radius: 10px;\n`;\n\nexport const Photo = styled.img`\n  max-height: 150px;\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.p`\n  font-weight: 900;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n`;\n\nexport const Price = styled.p`\n  color: var(--green-color);\n`;\n\nexport const ButtonWrapper = styled.div`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n`;\n","import useMyItems from 'hooks/useMyItems';\nimport bankFormatting from 'helpers/bankFormatting';\n\nimport Button from 'components/InterfaceElements/Button';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport Modal from 'components/Modal';\nimport DialogWindow from 'components/Modal/DialogWindow';\n\nimport { IItem } from 'types/IStore';\nimport { List, Item, Photo, Title, Price, ButtonWrapper } from './MyItems.styled';\n\nconst MyItems: React.FC<{ products: IItem[] }> = ({ products }) => {\n  const { closeDialogWindow, openDialogWindow, sell, currentPrice, halfPrice, showDialog } =\n    useMyItems();\n\n  return (\n    <>\n      <List>\n        {products.map(({ imageURL, title, price }, index) => (\n          <Item key={index}>\n            <Photo src={imageURL} alt={title} />\n            <Title>{title}</Title>\n            <Price>{bankFormatting(Number(price).toFixed(2))} $</Price>\n            <ButtonWrapper>\n              <Button\n                type=\"button\"\n                background=\"green\"\n                width=\"40px\"\n                height=\"40px\"\n                borderRadius=\"10px\"\n                onClick={openDialogWindow}\n                data-index={index}\n                data-price={price}\n              >\n                <IconSwitcher name=\"dollar\" size=\"22px\" fill=\"var(--white-color)\" />\n              </Button>\n            </ButtonWrapper>\n          </Item>\n        ))}\n      </List>\n\n      {showDialog && (\n        <Modal title=\"Are you sure you want to sell this item?\" onClose={closeDialogWindow}>\n          <DialogWindow\n            successBtnText=\"Sell\"\n            failureBtnText=\"Cancel\"\n            onFailure={closeDialogWindow}\n            onSuccess={sell}\n            text={`The price of this item on the market is ${bankFormatting(\n              Number(currentPrice).toFixed(2),\n            )} $ do you really want to sell it for half the price? You can only get ${bankFormatting(\n              Number(halfPrice).toFixed(2),\n            )} $`}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default MyItems;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 100%;\n  padding: 40px;\n\n  border: 3px solid var(--white-transparent);\n  border-radius: 20px;\n`;\n\nexport const Text = styled.p`\n  font-size: 22px;\n  font-weight: 900;\n  margin-bottom: 25px;\n`;\n","import { useNavigate } from 'react-router-dom';\nimport Button from 'components/InterfaceElements/Button';\nimport { Wrapper, Text } from './EmptyList.styled';\n\nconst EmptyList: React.FC<{}> = () => {\n  const navigate = useNavigate();\n\n  return (\n    <Wrapper>\n      <Text>You haven't bought anything yet.... :(</Text>\n\n      <Button\n        type=\"button\"\n        background=\"green\"\n        height=\"60px\"\n        width=\"650px\"\n        borderRadius=\"50px\"\n        shadow\n        onClick={() => navigate('/store')}\n      >\n        go to the store\n      </Button>\n    </Wrapper>\n  );\n};\n\nexport default EmptyList;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  padding-bottom: 50px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 50px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 30px;\n\n  border-bottom: 2px dotted var(--brown-color);\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  top: -50px;\n  left: 50px;\n\n  width: 93px;\n  height: 93px;\n\n  border-radius: 50%;\n  border: 3px solid var(--white-color);\n  opacity: 1;\n\n  cursor: pointer;\n  transition: border-color var(--hover-effect), opacity var(--hover-effect);\n\n  :hover,\n  :focus {\n    border-color: var(--brown-color);\n    opacity: 0.7;\n  }\n`;\n\nexport const Name = styled.p`\n  font-size: 44px;\n  font-weight: 900;\n  margin-bottom: 50px;\n`;\n\nexport const Nickname = styled.span`\n  font-size: 24px;\n  color: var(--green-color);\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  margin-bottom: 15px;\n`;\n\nexport const Value = styled.span`\n  text-transform: uppercase;\n  margin-right: 10px;\n`;\n\nexport const EditBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: transparent;\n  border: none;\n  outline: none;\n\n  cursor: pointer;\n  transition: opacity var(--hover-effect);\n\n  :hover,\n  :focus {\n    opacity: 0.5;\n  }\n`;\n","import useProfile from 'hooks/useProfile';\nimport { API_URL } from 'api';\nimport dateFormatting from 'helpers/dateFormatting';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Controllers from './Controllers';\nimport Modal from 'components/Modal';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport EditAvatar from 'components/Modal/EditAvatar';\nimport EditEmail from 'components/Modal/EditEmail';\nimport EditPassword from 'components/Modal/EditPassword';\nimport EditComplexity from 'components/Modal/EditComplexity';\nimport DialogWindow from 'components/Modal/DialogWindow';\nimport MyItems from './MyItems';\nimport EmptyList from './EmptyList';\n\nimport {\n  Wrapper,\n  Header,\n  Item,\n  Avatar,\n  Nickname,\n  Name,\n  Text,\n  Value,\n  EditBtn,\n} from './Profile.styled';\n\nconst Profile: React.FC<{}> = () => {\n  const {\n    age,\n    data,\n    deleteGameSession,\n    switchEditAvatarModal,\n    switchEditComplexityModal,\n    switchEditEmailModal,\n    switchEditPasswordModal,\n    showDeleteSessionModal,\n    showEditAvatarModal,\n    showEditComplexityModal,\n    showEditEmailModal,\n    showEditPasswordModal,\n    switchDeleteSessionModal,\n    user,\n    products,\n  } = useProfile();\n\n  return (\n    <Container\n      type=\"transparent\"\n      width=\"1050px\"\n      padding=\"70px 50px\"\n      margin=\"50px\"\n    >\n      <Controllers />\n\n      {user.name && (\n        <Wrapper>\n          <Header>\n            <p>ID: {user._id}</p>\n\n            <div>\n              <p>\n                Account creation date:{' '}\n                {user.createdAt && dateFormatting(user.createdAt as string)}\n              </p>\n              <p>\n                Last update date:{' '}\n                {user.updatedAt && dateFormatting(user.updatedAt as string)}\n              </p>\n            </div>\n          </Header>\n\n          <Avatar\n            src={`${API_URL}/${user.avatarURL}`}\n            alt={`${user.name} user avatar`}\n            onClick={() => switchEditAvatarModal(true)}\n          />\n\n          <Name>\n            {user.name} <Nickname>{user.nickname}</Nickname>\n          </Name>\n\n          <ul>\n            <Item>\n              <Text>Email:</Text>\n              <div>\n                <Value>{user.email}</Value>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() => switchEditEmailModal(true)}\n                >\n                  <IconSwitcher\n                    name=\"pen\"\n                    size=\"16px\"\n                    fill=\"var(--green-color)\"\n                  />\n                </EditBtn>\n              </div>\n            </Item>\n            <Item>\n              <Text>Password:</Text>\n              <div>\n                <Value>******</Value>\n                <EditBtn\n                  type=\"button\"\n                  onClick={() => switchEditPasswordModal(true)}\n                >\n                  <IconSwitcher\n                    name=\"pen\"\n                    size=\"16px\"\n                    fill=\"var(--green-color)\"\n                  />\n                </EditBtn>\n              </div>\n            </Item>\n            <Item>\n              <Text>Gender:</Text>\n              <Value>{user.gender}</Value>\n            </Item>\n            <Item>\n              <Text>Date of birth:</Text>\n              <Value>{`${user.dateBirth} | ${age()}`}</Value>\n            </Item>\n            <Item>\n              <Text>Complexity:</Text>\n              <div>\n                <Value>\n                  {user.complexity\n                    ? user.complexity\n                    : 'The game session has not yet been created.'}\n                </Value>\n                {user.inGame && (\n                  <>\n                    <EditBtn\n                      type=\"button\"\n                      onClick={() => switchEditComplexityModal(true)}\n                    >\n                      <IconSwitcher\n                        name=\"pen\"\n                        size=\"16px\"\n                        fill=\"var(--green-color)\"\n                      />\n                    </EditBtn>\n                    <EditBtn\n                      type=\"button\"\n                      onClick={() => switchDeleteSessionModal(true)}\n                    >\n                      <IconSwitcher\n                        name=\"delete\"\n                        size=\"16px\"\n                        fill=\"var(--green-color)\"\n                      />\n                    </EditBtn>\n                  </>\n                )}\n              </div>\n            </Item>\n            <Item>\n              <Text>Game session:</Text>\n              <Value>\n                {user.inGame &&\n                  `Game creation date: ${\n                    data && dateFormatting(data?.level.createdAt as string)\n                  }`}\n                {!user.inGame && 'Start a new game'}\n              </Value>\n            </Item>\n          </ul>\n        </Wrapper>\n      )}\n\n      {products && products.length > 0 ? (\n        <MyItems products={products} />\n      ) : (\n        <EmptyList />\n      )}\n\n      {showEditAvatarModal && (\n        <Modal\n          title=\"Choose a new avatar\"\n          onClose={() => switchEditAvatarModal(false)}\n        >\n          <EditAvatar onClose={() => switchEditAvatarModal(false)} />\n        </Modal>\n      )}\n\n      {showEditEmailModal && (\n        <Modal title=\"Change email\" onClose={() => switchEditEmailModal(false)}>\n          <EditEmail onClose={() => switchEditEmailModal(false)} />\n        </Modal>\n      )}\n\n      {showEditPasswordModal && (\n        <Modal\n          title=\"Change password\"\n          onClose={() => switchEditPasswordModal(false)}\n        >\n          <EditPassword onClose={() => switchEditPasswordModal(false)} />\n        </Modal>\n      )}\n\n      {showEditComplexityModal && (\n        <Modal\n          title=\"Change complexity\"\n          onClose={() => switchEditComplexityModal(false)}\n        >\n          <EditComplexity\n            onClose={() => switchEditComplexityModal(false)}\n            complexity={user.complexity}\n          />\n        </Modal>\n      )}\n\n      {showDeleteSessionModal && (\n        <Modal\n          title=\"Delete current game session?\"\n          onClose={() => switchDeleteSessionModal(false)}\n        >\n          <DialogWindow\n            onFailure={() => switchDeleteSessionModal(false)}\n            onSuccess={deleteGameSession}\n            text=\"After deleting a game session, data such as betting history, statistics and game level will be lost. Are you sure you want to continue?\"\n            failureBtnText=\"Cancel\"\n            successBtnText=\"Delete\"\n          />\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default Profile;\n","import Profile from 'components/Profile';\n\nconst ProfilePage: React.FC<{}> = () => {\n  return <Profile />;\n};\n\nexport default ProfilePage;\n"],"names":["Wrapper","styled","margin","Label","Input","Field","width","height","Error","ErrorMessage","label","type","name","value","onChange","required","placeholder","component","Text","List","Item","onFailure","onSuccess","text","successBtnText","failureBtnText","Button","background","borderRadius","shadow","onClick","onClose","useEffect","onPressEscape","e","code","window","addEventListener","removeEventListener","onBackdropClick","target","currentTarget","Backdrop","TitleWrapper","Title","CloseButton","modalRoot","document","querySelector","children","title","useModal","createPortal","IconSwitcher","size","fill","ZERO","NUMBER","HIGH","LOW","EVEN","ODD","BLACK","RED","DOZEN_1","DOZEN_2","DOZEN_3","COLUMN_1","COLUMN_2","COLUMN_3","date","slice","replace","coefficientInfo","low","coefficient","number","bottomRow","oneFromTwo","initialFunds","experience","medium","high","getCoefficient","complexity","types","useState","showEditAvatarModal","setShowEditAvatarModal","showEditEmailModal","setShowEditEmailModal","showEditPasswordModal","setShowEditPasswordModal","showEditComplexityModal","setShowEditComplexityModal","showDeleteSessionModal","setshowDeleteSessionModal","user","useAppSelector","getUser","products","getProducts","dispatch","useAppDispatch","data","useGetLevelInfoQuery","soundOff","getSoundOff","useSound","sounds","sprite","soundEnabled","play","deleteGameSession","operations","res","id","payload","status","switchEditAvatarModal","state","switchEditEmailModal","switchEditPasswordModal","switchEditComplexityModal","switchDeleteSessionModal","age","dateBirth","length","Number","parseInt","moment","fromNow","showDialogModal","setShowDialogModal","showEditProfileModal","setShowEditProfileModal","navigate","useNavigate","deleteAccount","switchEditProfileModal","switchDialogModal","initialValues","nickname","gender","changeProfile","values","CustomRadio","SelectRadio","checked","yup","shape","min","max","RadioGroup","RadioText","useEditProfile","onSubmit","validationSchema","editProfileSchema","handleSubmit","handleChange","EntryField","useProfileControllers","Modal","DialogWindow","changeAvatar","preventDefault","elements","file","files","FormData","append","useEditAvatar","encType","multiple","accept","changeEmail","email","useEditEmail","editEmailSchema","changePassword","passwords","password","newPassword","passwordAgain","oneOf","useEditPassword","editPasswordSchema","useCoefficient","changeComplexity","undefined","bank","useEditComplexity","editComplexitySchema","showDialog","setShowDialog","currentIndex","setCurrentIndex","currentPrice","setCurrentPrice","halfPrice","setHalfPrice","closeDialogWindow","openDialogWindow","index","dataset","price","sell","toast","Photo","Price","ButtonWrapper","useMyItems","map","imageURL","src","alt","bankFormatting","toFixed","Header","Avatar","Name","Nickname","Value","EditBtn","useProfile","Container","padding","_id","createdAt","dateFormatting","updatedAt","API_URL","avatarURL","inGame","level"],"sourceRoot":""}