{"version":3,"file":"static/js/395.7f194189.chunk.js","mappings":"+iFAEaA,E,QAAOC,EAAAA,GAAH,+F,UCejB,EAd4B,WAC1B,OACE,wBACGC,EAAAA,KAAc,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACpB,OACE,SAACJ,EAAD,WACE,uBAAII,KADKD,U,yKCuCrB,EArCqB,WACnB,OAAoCE,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,GAAeC,EAAAA,GAChC,GAAeC,EAAAA,EAAAA,GAASC,EAAQ,CAAEC,OAAQA,EAAAA,EAAQC,aAAcN,IAAzDO,GAAP,eAuBA,MAAO,CACLC,YAtBiBP,EAAAA,EAAAA,GAAeQ,EAAAA,IAuBhCC,OAtBa,WACbb,GAAc,SAAAc,GAAS,OAAKA,KAC5BJ,EAAK,CAAEd,GAAI,mBAqBXG,WAAAA,EACAgB,kBAnBwB,WACxBd,EAAS,YACTS,EAAK,CAAEd,GAAI,mBAkBXoB,iBAfuB,WACvBf,EAAS,YACTS,EAAK,CAAEd,GAAI,mBAcXqB,iBAXuB,WACvBhB,EAAS,YACTS,EAAK,CAAEd,GAAI,qB,2DChCFsB,EAAQxB,EAAAA,EAAAA,GAAH,kHAQLyB,EAAOzB,EAAAA,EAAAA,EAAH,mHAQJ0B,EAAO1B,EAAAA,EAAAA,GAAH,8IASJ2B,EAAkB3B,EAAAA,EAAAA,OAAH,+UAqBf4B,EAAU5B,EAAAA,EAAAA,EAAH,yE,UC4DpB,EA7FgC,WAC9B,MAOI6B,IANFZ,EADF,EACEA,WACAZ,EAFF,EAEEA,WACAc,EAHF,EAGEA,OACAE,EAJF,EAIEA,kBACAC,EALF,EAKEA,iBACAC,EANF,EAMEA,iBAGF,OACE,UAACO,EAAA,EAAD,CACEC,KAAK,QACLC,QAAQ,OACRC,OAAO,aACPC,MAAM,QACNC,WAAW,SALb,WAOE,SAACX,EAAD,uBACA,SAACC,EAAD,0OAMA,SAACA,EAAD,gCAECR,GACC,SAACmB,EAAA,EAAD,CACEL,KAAK,SACLM,WAAW,QACXC,OAAO,OACPJ,MAAM,OACNK,aAAa,OACbC,QAAM,EACNP,OAAO,aACPQ,QAASpB,EARX,oBAaA,UAACK,EAAD,YACE,yBACE,SAACU,EAAA,EAAD,CACEL,KAAK,SACLM,WAAW,QACXC,OAAO,OACPJ,MAAM,QACNK,aAAa,OACbC,QAAM,EACNC,QAASnB,EAPX,wBAYF,yBACE,SAACc,EAAA,EAAD,CACEL,KAAK,SACLM,WAAW,OACXC,OAAO,OACPJ,MAAM,QACNK,aAAa,OACbC,QAAM,EACNC,QAASlB,EAPX,2BAeN,UAACI,EAAD,CAAiBI,KAAK,SAASU,QAAStB,EAAxC,WACId,IACA,8CACkB,KAChB,SAACqC,EAAA,EAAD,CAAcC,KAAK,YAAYC,KAAK,OAAOC,KAAK,oBAGnDxC,IACC,8CACkB,KAChB,SAACqC,EAAA,EAAD,CAAcC,KAAK,YAAYC,KAAK,OAAOC,KAAK,uBAKrDxC,IAAc,SAACyC,EAAA,EAAD,KAEf,SAAClB,EAAD,2DCjGN,EAJ+B,WAC7B,OAAO,SAAC,EAAD","sources":["components/Greetings/Rules/Rules.styled.ts","components/Greetings/Rules/Rules.tsx","hooks/useGreetings.ts","components/Greetings/Greetings.styled.ts","components/Greetings/Greetings.tsx","pages/HomePage.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  margin-bottom: 15px;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n","import gameRules from 'data/gameRules.json';\nimport { Item } from './Rules.styled';\n\nconst Rules: React.FC<{}> = () => {\n  return (\n    <ol>\n      {gameRules.map(({ id, rules }) => {\n        return (\n          <Item key={id}>\n            <p>{rules}</p>\n          </Item>\n        );\n      })}\n    </ol>\n  );\n};\n\nexport default Rules;\n","import { useAppSelector } from 'hooks/useAppSelector';\nimport { getIsLoggedIn } from 'redux/user/userSelectors';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useSound from 'use-sound';\nimport { getSoundOff } from 'redux/options/optionsSelectors';\n\nimport sounds from 'sounds/sounds.mp3';\nimport sprite from 'sounds/sprite';\n\nconst useGreetings = () => {\n  const [showRulles, setShowRulles] = useState(false);\n  const navigate = useNavigate();\n  const soundOff = useAppSelector(getSoundOff);\n  const [play] = useSound(sounds, { sprite: sprite, soundEnabled: soundOff });\n\n  const isLoggedIn = useAppSelector(getIsLoggedIn);\n  const toogle = () => {\n    setShowRulles(prevstate => !prevstate);\n    play({ id: 'counter_click' });\n  };\n\n  const redirectToProfile = () => {\n    navigate('/profile');\n    play({ id: 'counter_click' });\n  };\n\n  const redirectToSignup = () => {\n    navigate('/sign-up');\n    play({ id: 'counter_click' });\n  };\n\n  const redirectToSignin = () => {\n    navigate('/sign-in');\n    play({ id: 'counter_click' });\n  };\n\n  return {\n    isLoggedIn,\n    toogle,\n    showRulles,\n    redirectToProfile,\n    redirectToSignup,\n    redirectToSignin,\n  };\n};\n\nexport default useGreetings;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  font-size: 44px;\n  font-weight: 900;\n  text-align: center;\n\n  margin-bottom: 30px;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  text-align: center;\n  line-height: 1.75;\n\n  margin-bottom: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  width: 100%;\n  margin-bottom: 30px;\n`;\n\nexport const ShowRulesButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: 700;\n  font-size: 19px;\n\n  color: var(--green-color);\n  background-color: transparent;\n  border: none;\n\n  cursor: pointer;\n  transition: opacity var(--hover-effect);\n\n  :hover,\n  :focus {\n    opacity: 0.6;\n  }\n`;\n\nexport const Warning = styled.p`\n  color: var(--red-color);\n  margin-top: 20px;\n`;\n","import useGreetings from 'hooks/useGreetings';\n\nimport Container from 'components/InterfaceElements/Container';\nimport Button from 'components/InterfaceElements/Button';\nimport IconSwitcher from 'components/InterfaceElements/IconSwitcher';\nimport Rules from './Rules';\n\nimport {\n  Title,\n  Text,\n  List,\n  ShowRulesButton,\n  Warning,\n} from './Greetings.styled';\n\nconst Greetings: React.FC<{}> = () => {\n  const {\n    isLoggedIn,\n    showRulles,\n    toogle,\n    redirectToProfile,\n    redirectToSignup,\n    redirectToSignin,\n  } = useGreetings();\n\n  return (\n    <Container\n      type=\"color\"\n      padding=\"30px\"\n      margin=\"0 0 30px 0\"\n      width=\"856px\"\n      alignItems=\"center\"\n    >\n      <Title>Welcome</Title>\n      <Text>\n        Hello newbie. Do you want to earn some money? I know excellent place to\n        get into it you need to register or log in if you have already visited\n        before. If you wish to familiarize yourself with click on the button\n        below.\n      </Text>\n      <Text>Good luck newbie.</Text>\n\n      {isLoggedIn ? (\n        <Button\n          type=\"button\"\n          background=\"green\"\n          height=\"60px\"\n          width=\"100%\"\n          borderRadius=\"50px\"\n          shadow\n          margin=\"0 0 30px 0\"\n          onClick={redirectToProfile}\n        >\n          start\n        </Button>\n      ) : (\n        <List>\n          <li>\n            <Button\n              type=\"button\"\n              background=\"green\"\n              height=\"60px\"\n              width=\"380px\"\n              borderRadius=\"50px\"\n              shadow\n              onClick={redirectToSignup}\n            >\n              Sign up\n            </Button>\n          </li>\n          <li>\n            <Button\n              type=\"button\"\n              background=\"blue\"\n              height=\"60px\"\n              width=\"380px\"\n              borderRadius=\"50px\"\n              shadow\n              onClick={redirectToSignin}\n            >\n              Sign in\n            </Button>\n          </li>\n        </List>\n      )}\n\n      <ShowRulesButton type=\"button\" onClick={toogle}>\n        {!showRulles && (\n          <span>\n            Show game rules{' '}\n            <IconSwitcher name=\"arrowdown\" size=\"14px\" fill=\"currentColor\" />\n          </span>\n        )}\n        {showRulles && (\n          <span>\n            Hide game rules{' '}\n            <IconSwitcher name=\"arrowleft\" size=\"14px\" fill=\"currentColor\" />\n          </span>\n        )}\n      </ShowRulesButton>\n\n      {showRulles && <Rules />}\n\n      <Warning>Warning!!! There are sounds on the site!</Warning>\n    </Container>\n  );\n};\n\nexport default Greetings;\n","import Greetings from 'components/Greetings';\n\nconst HomePage: React.FC<{}> = () => {\n  return <Greetings />;\n};\n\nexport default HomePage;\n"],"names":["Item","styled","gameRules","id","rules","useState","showRulles","setShowRulles","navigate","useNavigate","soundOff","useAppSelector","getSoundOff","useSound","sounds","sprite","soundEnabled","play","isLoggedIn","getIsLoggedIn","toogle","prevstate","redirectToProfile","redirectToSignup","redirectToSignin","Title","Text","List","ShowRulesButton","Warning","useGreetings","Container","type","padding","margin","width","alignItems","Button","background","height","borderRadius","shadow","onClick","IconSwitcher","name","size","fill","Rules"],"sourceRoot":""}